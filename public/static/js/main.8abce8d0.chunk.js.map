{"version":3,"sources":["js/fa.js","Dict.jsx","containers/layouts/PanelRightPage.jsx","dispatcher.js","stores/ModelStore.js","actions/MyActions.js","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/statuses/show.jsx","components/statuses/show.jsx","containers/statuses/list.jsx","containers/statuses/index.jsx","components/statuses/index.jsx","containers/statuses/form.jsx","components/statuses/create.jsx","components/statuses/update.jsx","containers/tasks/participantList.jsx","containers/profiles/simpleList.jsx","containers/tasks/participants.jsx","containers/statuses/simpleList.jsx","containers/tasks/status.jsx","containers/tasks/works.jsx","containers/tasks/reports.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/tasks/show.jsx","components/tasks/show.jsx","containers/tasks/list.jsx","containers/tasks/workList.jsx","containers/tasks/index.jsx","components/tasks/index.jsx","containers/tasks/form.jsx","components/tasks/create.jsx","components/tasks/update.jsx","containers/works/participantList.jsx","containers/works/participants.jsx","containers/works/status.jsx","containers/works/reports.jsx","containers/works/show.jsx","components/works/show.jsx","containers/works/list.jsx","containers/works/index.jsx","components/works/index.jsx","containers/works/form.jsx","components/works/create.jsx","components/works/update.jsx","containers/profiles/experties.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/reports/show.jsx","components/reports/show.jsx","containers/reports/list.jsx","containers/reports/index.jsx","components/users/loggedIn.js","components/reports/index.jsx","containers/uploads/form.jsx","containers/reports/form.jsx","components/reports/uploader.js","components/reports/create.jsx","components/reports/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","routes.js","containers/layouts/HomePage.jsx","components/users/Verification.jsx","containers/layouts/NotFoundPage.jsx","serviceWorker.js","index.js","components/App.jsx"],"names":["module","exports","dict","PanelRightPage","logout","bind","state","token","window","localStorage","getItem","this","setState","removeItem","location","replace","Fragment","user_settings","view","panelClose","onClick","className","dashboard","link","tasks","profiles","settings","ignoreCache","roles","metas","statuses","tags","title","login","tavan","logged_in","Component","Dispatcher","modelStore","list","instance","klass","i","len","data","length","push","emit","console","log","action","type","listModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","server","getList","model","page","params","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","UserOptions","props","options","value","users","email","AssignmentForm","assignment_form","form","inset","smartSelect","name","onChange","e","handleChange","user_id","target","strong","tag","fill","submit","UserList","body","crypto","lib","WordArray","random","color","removeRole","ios","aurora","md","AccessControlForm","access_control_form","label","item","placeholder","onInput","abilityTitle","defaultValue","abilityValue","true","false","addAbility","AbilityList","ability","removeAbility","access_control_list","RoleShow","role","simple-list","assignedUsers","Layout","handleChangeValue","ModelStore","on","removeListener","MyActions","$f7route","getIntance","getKlass","role_id","ability_title","ability_value","obj","href","position","slot","backLink","back","fab","RoleList","mediaList","after","subtitle","text","RoleIndex","loadData","Framework7","toast","show","receiving","closeTimeout","React","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","JSON","parse","Default","disabled","editing","RoleCreate","default_role","$f7router","navigate","role_form","DocumentUpdate","TagShow","removeTag","tag_id","TagList","TagIndex","TagForm","defaultTag","TagCreate","default_tag","tag_form","StatusShow","status","style","backgroundColor","the_color","removeStatus","status_id","StatusList","StatusIndex","StatusForm","class","aria-hidden","readonly","StatusCreate","loadPalette","self","$f7","colorPicker","create","inputEl","targetEl","targetElSetBackgroundColor","modules","openIn","hex","closed","c","onPageAfterIn","pageAfterIn","status_form","ParticipantList","participants","option","participant","selected","addLink","removeProfile","profile","remove","data-open-in","editable","changeRole","select","fullname","src","avatar","width","height","SimpleList","addProfile","add","Partcipants","task","coworkers","accordionList","accordionItem","outline","search","floatingLabel","clearButton","searchProfile","query","addStatus","Statuses","add_stauts","searchStatus","Works","chip","work","result","deadline_alert","comment_alert","report_alert","works","new","details","disableButtonText","cancel","inline","Reports","creation","t","date","Date","ODate","fromNow","reports","report","creation_date","content","CommentForm","comment_form","comment","maxlength","resizable","commentContent","CommentList","items","comments","created_at","time","removeComment","locale","ago","noGap","loadMore","more","TaskShow","access","segment","includes","submitComment","tabletWidth","arr","the_tags","is_public","public","private","discussions","removeTask","the_comments","user_access","task_id","q","profileId","profile_id","statusId","commentable_type","commentable_id","backLinkForce","TaskList","alerts","header","sortChange","by_title","by_events","sort_by","WorkList","TaskIndex","your_tasks","your_newest_works","order","TaskForm","isPublic","isPublicTask","select_appropriate_title","required","write_appropriate_description","chips","deleteable","new_tag","deleteTask","delete","deleteButton","TaskCreate","loadTags","deadline","start","startTime","deadlineTime","privateTask","app","autocomplete","openerEl","multiple","valueProperty","textProperty","limit","searchbarPlaceholder","preloader","source","render","results","preloaderShow","request","method","dataType","success","indexOf","preloaderHide","change","concat","dialog","alert","incomplete_data","filter","task_form","deleteInstance","defaultTask","default_task","selectedMode","WorkShow","start_date","start_date_j","deadline_date_j","removeWork","work_id","deadline_date","WorkIndex","WorkForm","privateWork","select_a_date","start_time","select_a_time","deadline_time","WorkCreate","loadCalender","loadTime","picker","rotateEffect","cols","values","split","textAlign","calendar","closeOnSelect","firstDay","weekendDays","monthNames","dayNames","dayNamesShort","a","work_form","defaultWork","default_work","ExpertiesList","experties","expert","removeExperties","mediaBgColor","ProfileShow","useMemo","primary","tabActive","addTag","actuals","channels","tabbar","bottom","tabLink","tabLinkActive","ProfileList","ProfileIndex","panelOpen","f7","inner","ProfileForm","profile_info","firstname","surename","new_experties","submitExperties","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","fid","newState","assign","uuid","profile_form","ReportShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","the_work","the_task","toolbar","readOnly","attachments","attachment","filename","interaction","selectedChannel","sheetOpened","$$","interaction_type","interactionable_id","interactionable_type","source_type","source_id","report_id","channel_id","sheet","close","ReportList","tooltip","substring","ReportIndex","pageContent","swipeable","loggedIn","Report","el","UploadForm","getUploadParams","meta","onChangeStatus","onSubmit","files","allFiles","f","forEach","autoUpload","submitButtonDisabled","inputContent","drag_or_browse","ReportForm","new_report","localization","translations","fa","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","uploadableType","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","responseText","ReportCreate","createEmpty","enc","Base64","stringify","convertToRaw","getCurrentContent","blocks","block","trim","taskId","workId","prev","prevstate","report_form","ReportUpdate","workflow_form","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","password","focusin","username","Login","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","SignUp","verification","verification_code","enter_verification_code","verificationCode","path","component","user","setItem","reload","Verification","RoleUpdate","StatusUpdate","TaskUpdate","TagUpdate","WorkUpdate","ProfileUpdate","Boolean","hostname","match","use","Framework7React","ReactDOM","createElement","f7params","theme","panel","rightBreakpoint","routes","left","cover","themeDark","right","reveal","pushState","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAOC,QAAU,CAGf,cAAe,uCACf,iBAAkB,qBAGlB,mCAAoC,KACpC,mCAAoC,KACpC,mCAAoC,KACpC,mCAAoC,KACpC,mCAAoC,KACpC,mCAAoC,KACpC,2CAA4C,aAC5C,qCAAsC,OACtC,0CAA2C,aAC3C,uCAAwC,SAGxC,8CAA+C,eAC/C,uCAAwC,OACxC,6CAA8C,YAG9C,wCAAyC,WACzC,4CAA6C,gBAC7C,yCAA0C,aAG1C,kCAAmC,QAGnC,4CAA6C,OAG7C,wCAAyC,YAGzC,sCAAuC,UACvC,mCAAoC,OACpC,mCAAoC,OAGpC,kCAAmC,qBACnC,uCAAwC,mDACxC,kCAAmC,iCACnC,yCAA0C,iGAG1C,kCAAmC,OACnC,oCAAqC,SACrC,uCAAwC,YACxC,2CAA4C,gBAC5C,uCAAwC,YACxC,yCAA0C,cAC1C,uCAAwC,YAGxC,qCAAsC,gEACtC,sCAAuC,2BACvC,4CAA6C,uGAC7C,gCAAiC,iCACjC,kCAAmC,oDAGnC,gCAAiC,OACjC,qCAAsC,YACtC,mCAAoC,UACpC,kCAAmC,SACnC,mCAAoC,UAGpC,oCAAqC,SAGrC,0CAA2C,aAC3C,qCAAsC,OACtC,uCAAwC,SACxC,sCAAuC,QACvC,wCAAyC,Y,yPC/E9BC,GAAI,GACf,KAAS,2BACT,KAAS,iGACT,MAAU,2BACV,SAAc,2DACd,SAAa,+CACb,sBAAyB,6EACzB,OAAW,uEACX,MAAS,qBACT,QAAY,4BACZ,QAAY,wCACZ,KAAS,uCACT,kBAAqB,sIACrB,WAAc,+CACd,MAAS,iCACT,SAAY,iCACZ,QAAW,qBACX,OAAU,sBACV,oBAAuB,mFACvB,QAAW,oDACX,SAAY,2BACZ,aAAgB,0DAChB,iBAAoB,sEACpB,eAAkB,wFAClB,QAAW,4BACX,MAAS,kCACT,oBAAsB,uEACtB,OAAU,kCACV,OAAW,uCACX,KAAQ,iCACR,KAAQ,uCACR,OAAU,qBACV,YAAe,iLACf,QAAW,kEACX,IAAQ,wCACR,OAAU,8CACV,kBAAqB,0DACrB,SAAY,yCACZ,aAAgB,sGAChB,SAAY,iCACZ,KAAQ,qBACR,QAAW,uCACX,KAAQ,gEACR,IAAO,sBACP,UAAa,8EACb,UAAa,8EACb,SAAY,qDACZ,IAAM,2BACN,KAAO,iCACP,KAAQ,2BACR,kBAAqB,6EACrB,SAAY,sEACZ,WAAa,wCACb,IAAM,iCACN,WAAa,8CACb,QAAW,4EACX,UAAa,0DACb,eAAkB,8CAClB,gBAAmB,kFACnB,eAAkB,uEAClB,QAAW,oDACX,YAAe,sGACf,YAAe,4EACf,cAAkB,iEAClB,cAAiB,qDACjB,KAAQ,iCACR,UAAY,kCACZ,KAAS,qBACT,OAAU,oDACV,KAAQ,8CACR,OAAU,iCACV,YAAe,oDACf,MAAS,4BAxEM,qBAyER,kCAzEQ,cA0Ef,aAAc,2DA1EC,cA2Ef,MAAM,sBA3ES,cA4Ef,KAAK,sBA5EU,cA6Ef,cAAc,iEA7EC,cA8Ef,YAAY,2DA9EG,cA+Ef,cAAc,qDA/EC,cAgFf,UAAU,+CAhFK,cAiFf,cAAc,iEAjFC,cAkFf,aAAc,+CAlFC,cAmFf,MAAO,yCAnFQ,cAoFf,SAAU,sBApFK,cAqFf,mBAAoB,2DArFL,cAsFf,YAAY,8EAtFG,cAuFf,OAAQ,4BAvFO,cAwFf,YAAa,2DAxFE,cAyFf,oBAAqB,iEAzFN,cA0Ff,cAAe,qDA1FA,cA2Ff,iBAAkB,2DA3FH,cA4Ff,uBAAwB,yEA5FT,cA6Ff,QAAS,4BA7FM,cA8Ff,WAAY,mCA9FG,cA+Ff,QAAS,kCA/FM,cAgGf,gBAAgB,kEAhGD,cAiGf,aAAa,uEAjGE,cAkGf,WAAW,8CAlGI,cAmGf,YAAY,4EAnGG,cAoGf,kBAAmB,wGApGJ,cAqGf,kBAAmB,qDArGJ,cAsGf,WAAW,+CAtGI,cAuGf,UAAY,wCAvGG,cAwGf,QAAS,mCAxGM,cAyGf,QAAS,kCAzGM,cA0Gf,mBAAoB,oHA1GL,cA2Gf,sBAAuB,+GA3GR,cA4Gf,mCAAoC,qHA5GrB,cA6Gf,WAAY,mCA7GG,cA8Gf,YAAa,sBA9GE,cA+Gf,gBAAiB,iIA/GF,cAgHf,gBAAgB,sDAhHD,cAiHf,oBAAqB,8GAjHN,cAkHf,kBAAkB,kEAlHH,cAmHf,iBAAkB,8EAnHH,cAoHf,QAAS,mCApHM,cAqHf,WAAY,4BArHG,cAsHf,OAAO,kCAtHQ,cAuHf,SAAS,kCAvHM,cAwHf,QAAQ,wCAxHO,cAyHf,cAAc,gGAzHC,cA0Hf,WAAY,+CA1HG,cA2Hf,QAAS,4BA3HM,cA4Hf,UAAU,mCA5HK,cA6Hf,UAAW,sBA7HI,cA8Hf,OAAQ,6BA9HO,cA+Hf,OAAQ,sBA/HO,cAgIf,UAAW,yCAhII,cAiIf,aAAa,6DAjIE,cAkIf,QAAS,mCAlIM,cAmIf,OAAQ,4BAnIO,cAoIf,QAAS,4BApIM,cAqIf,sBAAsB,gGArIP,cAsIf,sBAAsB,0FAtIP,cAuIf,kBAAkB,wEAvIH,cAwIf,eAAgB,qDAxID,cAyIf,YAAa,yCAzIE,cA0If,QAAQ,qDA1IO,cA2If,OAAQ,4BA3IO,cA4If,OAAS,uEA5IM,cA6If,eAAgB,2DA7ID,cA8If,SAAU,4BA9IK,cA+If,OAAQ,sCA/IO,cAgJf,SAAU,8CAhJK,cAiJf,UAAU,4BAjJK,cAkJf,cAAc,+CAlJC,cAmJf,QAAQ,gDAnJO,cAoJf,SAAS,kCApJM,cAqJf,UAAU,mCArJK,cAsJf,cAAc,yCAtJC,cAuJf,2BAA4B,qIAvJb,cAwJf,gCAAgC,0JAxJjB,cAyJf,cAAc,uBAzJC,cA0Jf,iBAAkB,0OA1JH,cA2Jf,aAAe,8EA3JA,cA4Jf,QAAS,kCA5JM,cA6Jf,aAAc,2DA7JC,cA8Jf,WAAa,2DA9JE,cA+Jf,gBAAkB,6GA/JH,cAgKf,kBAAmB,iIAhKJ,cAiKf,QAAS,kCAjKM,cAkKf,gBAAiB,4BAlKF,cAmKf,aAAa,4BAnKE,cAoKf,gBAAgB,iEApKD,cAqKf,YAAa,8CArKE,cAsKf,QAAS,mCAtKM,cAuKf,YAAY,wCAvKG,cAwKf,QAAQ,4BAxKO,cAyKf,WAAY,+CAzKG,cA0Kf,SAAW,kCA1KI,cA2Kf,aAAc,iEA3KC,uBA4KJ,wCA5KI,cA6Kf,MAAO,4BA7KQ,cA8Kf,OAAS,kCA9KM,cA+Kf,cAAe,+CA/KA,cAgLf,UAAW,oFAhLI,cAiLf,OAAO,+CAjLQ,cAkLf,UAAW,4DAlLI,cAmLf,eAAgB,2DAnLD,cAoLf,eAAgB,iEApLD,cAqLf,UAAY,qDArLG,cAsLf,WAAW,kCAtLI,cAuLf,YAAY,kCAvLG,cAwLf,gBAAiB,0FAxLF,cAyLf,aAAc,2DAzLC,cA0Lf,eAAgB,iEA1LD,cA2Lf,QAAQ,4BA3LO,cA4Lf,YAAY,kCA5LG,cA6Lf,WAAW,4BA7LI,cA8Lf,UAAU,wCA9LK,cA+Lf,oBAAoB,+CA/LL,cAgMf,0BAA4B,8GAhMb,cAiMf,aAAa,iGAjME,cAkMf,oBAAoB,wJAlML,G,0CCGIC,E,YACnB,aAAe,IAAD,8BACZ,+CACKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,UAJzB,E,sEASZC,KAAKC,SAAS,CAACL,MAAO,OACtBC,OAAOC,aAAaI,WAAW,SAC/BL,OAAOM,SAASC,QAAQ,O,gCAGhBR,GACR,OAAIA,EAEA,kBAAC,IAAMS,SAAP,KACE,kBAAC,IAAD,KAAad,EAAKe,eAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,KAAK,aAAaC,YAAU,EAACC,QAAST,KAAKP,QACrD,uBAAGiB,UAAU,4BACX,8BAAOnB,EAAKE,UAGhB,kBAAC,IAAD,SAAa,uBAAGiB,UAAU,6BAAgCnB,EAAKoB,WAC/D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,KAAK,UAAUL,KAAK,aAAaC,YAAU,GACnD,uBAAGE,UAAU,wBACb,8BAAOnB,EAAKsB,QAGd,kBAAC,IAAD,CAAUD,KAAK,aAAcL,KAAK,aAAaC,YAAU,GACvD,uBAAGE,UAAU,gCACb,8BAAOnB,EAAKuB,YAId,kBAAC,IAAD,SAAa,uBAAGJ,UAAU,uBAA0BnB,EAAKwB,UACzD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUH,KAAK,UAAUI,aAAa,EAAMT,KAAK,aAAaC,YAAU,GACxE,uBAAGE,UAAU,yBACX,8BAAOnB,EAAK0B,QAEd,kBAAC,IAAD,CAAUL,KAAK,UAAUI,aAAa,EAAMT,KAAK,aAAaC,YAAU,GACxE,uBAAGE,UAAU,qBACX,8BAAOnB,EAAK2B,QAEd,kBAAC,IAAD,CAAUN,KAAK,aAAaI,aAAa,EAAMT,KAAK,aAAaC,YAAU,GAC3E,uBAAGE,UAAU,2BACX,8BAAOnB,EAAK4B,WAEd,kBAAC,IAAD,CAAUP,KAAK,SAASI,aAAa,EAAMT,KAAK,aAAaC,YAAU,GACvE,uBAAGE,UAAU,uBACX,8BAAOnB,EAAK6B,SAOlB,kBAAC,IAAMf,SAAP,KACE,kBAAC,IAAD,KAAad,EAAKe,eAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUM,KAAK,UAAUS,MAAO9B,EAAK+B,MAAOf,KAAK,aAAaC,YAAU,Q,+BAOxE,IACAZ,EAAUI,KAAKL,MAAfC,MACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyB,MAAO9B,EAAKgC,QACnBvB,KAAKwB,UAAU5B,Q,GA7EoB6B,a,SCD7B,M,OAAIC,YCgGbC,EAAa,I,YA7FjB,aAAe,IAAD,8BACZ,+CACKC,KAAO,GACZ,EAAKC,SAAW,KAChB,EAAKC,MAAO,KAJA,E,uEAOJF,GACR5B,KAAK4B,KAAO,GACZ5B,KAAK8B,MAAQF,EAAKE,MAClB,IAAK,IAAIC,EAAI,EAAGC,EAAMJ,EAAKK,KAAKC,OAAQH,EAAIC,IAAOD,EACjD/B,KAAK4B,KAAKO,KAAKP,EAAKK,KAAKF,IACrBA,IAAMC,EAAM,GACdhC,KAAKoC,KAAK,YAGS,GAApBR,EAAKK,KAAKC,QACXlC,KAAKoC,KAAK,c,kCAKFP,GACV7B,KAAK8B,MAAQD,EAASC,MACtB9B,KAAK6B,SAAWA,EAASI,KACzBjC,KAAKoC,KAAK,kB,iCAGDP,GACT7B,KAAK8B,MAAQD,EAASC,MACtB9B,KAAK6B,SAAWA,EAASI,KACzBjC,KAAKoC,KAAK,kB,oCAIEP,GACZ7B,KAAK8B,MAAQD,EAASC,MACtB9B,KAAK6B,SAAWA,EAASI,KACzBjC,KAAKoC,KAAK,sB,+BAGHP,GACPQ,QAAQC,IAAIT,GACZ7B,KAAK8B,MAAQD,EAASC,MACtB9B,KAAK6B,SAAWA,EAASI,KACzBjC,KAAKoC,KAAK,iB,mCAIV,OAAOpC,KAAK6B,W,gCAIZ,OAAO7B,KAAK4B,O,sCAIZ,MAAO,CAAC5B,KAAK4B,KAAM5B,KAAK8B,S,iCAIxB,OAAO9B,KAAK8B,Q,oCAGAS,GACZ,OAAOA,EAAOC,MACZ,IAAK,qBACHxC,KAAKyC,UAAUF,EAAOX,MACtB,MAEF,IAAK,uBACH5B,KAAK0C,YAAYH,EAAOV,UACxB,MAEF,IAAK,0BACH7B,KAAK2C,cAAcJ,EAAOV,UAC1B,MAEF,IAAK,uBACH7B,KAAK4C,WAAWL,EAAOV,UACvB,MAEF,IAAK,oBACH7B,KAAK6C,SAASN,EAAOV,e,GApFJiB,iBA+FzBC,EAAWC,SAASrB,EAAWsB,cAAcvD,KAAKiC,IAEnCA,Q,iBClGTuB,EAAO,MAIN,SAASC,EAAQC,GAAkC,IAA3BC,EAA0B,uDAArB,EAAGC,EAAkB,uDAAX,GAAI1D,EAAO,uCACnD2D,EAAcC,OAAOC,KAAKH,GAAQI,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAML,EAAOK,MAAMC,KAAK,KAC/EC,IAAMC,IAAIZ,EAAS,IAAKE,EAAO,SAASC,EAAK,IAAIE,EAAa,CAAEQ,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYnE,KAC1IoE,MAAK,SAAUC,GACdlB,EAAWmB,SAAS,CAClB1B,KAAM,qBACNZ,KAAMqC,EAAShC,UAGlBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,MAIT,SAASC,EAAWjB,EAAOkB,EAAKC,EAAM3E,GAC3C,IAAM4E,EAAMtB,EAAS,IAAKE,EAAO,IAAIkB,EAC/BG,EAAW,IAAIC,SACrBD,EAASE,OAAO,kBAAkBJ,GAClCE,EAASE,OAAO,cAAcL,GAC9B,IAAMM,EAAS,CACXb,QAAS,CACL,eAAgB,sBAChB,cAAiB,UAAYnE,IAGrCiF,cAAIL,EAAKC,EAASG,GAAQZ,MAAK,SAAUC,GACvClB,EAAWmB,SAAS,CAClB1B,KAAM,oBACNX,SAAUoC,EAAShC,UAGtBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,MAIT,SAASU,EAAY1B,EAAOkB,EAAI1E,GACrCiE,IAAMC,IAAIZ,EAAS,IAAKE,EAAO,IAAIkB,EAAI,CAAEP,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYnE,KACnHoE,MAAK,SAAUC,GACdlB,EAAWmB,SAAS,CAClB1B,KAAM,uBACNX,SAAUoC,EAAShC,UAGtBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,MAIT,SAASW,EAAe3B,GAA2B,IAApBE,EAAmB,uDAAZ,GAAI1D,EAAQ,uCACnD2D,EAAcC,OAAOC,KAAKH,GAAQI,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAML,EAAOK,MAAMC,KAAK,KAC/EC,IAAMC,IAAIZ,EAAS,IAAKE,EAAO,WAAWG,EAAa,CAAEQ,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYnE,KACnIoE,MAAK,SAAUC,GACdlB,EAAWmB,SAAS,CAClB1B,KAAM,0BACNX,SAAUoC,EAAShC,UAGtBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,MAIT,SAASY,EAAY5B,EAAOnB,EAAMrC,GACvCiE,IAAMoB,KAAK/B,EAAS,IAAKE,EAAO,IAAKnB,EAAM,CAAE8B,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYnE,KACvHoE,MAAK,SAAUC,GACdlB,EAAWmB,SAAS,CAClB1B,KAAM,uBACNX,SAAUoC,EAAShC,UAGtBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,MAIT,SAASc,EAAe9B,EAAOnB,EAAMrC,GAC1CiE,IAAMgB,IAAI3B,EAAS,IAAKE,EAAO,IAAInB,EAAKqC,GAAIrC,EAAM,CAAE8B,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYnE,KAC9HoE,MAAK,SAAUC,GACdlB,EAAWmB,SAAS,CAClB1B,KAAM,uBACNX,SAAUoC,EAAShC,UAGtBkC,OAAM,SAAUC,GACf/B,QAAQC,IAAI8B,M,qBCzEDe,EAfK,SAACC,GACnB,IAAIC,EAAU,CAAC,4BAAQC,MAAM,MAC7B,GAAGF,EAAMG,MACP,IAAK,IAAIxD,EAAI,EAAGA,EAAIqD,EAAMG,MAAMrD,OAAQH,IACtCsD,EAAQlD,KACN,4BAAQmD,MAAOF,EAAMG,MAAMxD,GAAGuC,IAC3Bc,EAAMG,MAAMxD,GAAGyD,QAMxB,OAAOH,GCYQI,EAvBM,SAACL,GACpB,OACE,kBAAC,IAAM/E,SAAP,KACE,kBAAC,IAAD,KAAad,EAAKmG,iBAClB,kBAAC,IAAD,CAAMC,MAAI,EAACC,OAAK,GACd,kBAAC,IAAD,CACEvE,MAAO9B,EAAKiG,MACZK,aAAW,GAEX,4BAAQC,KAAK,UACXC,SAAU,SAACC,GAASZ,EAAMa,aAAa,CAAEC,QAASF,EAAEG,OAAOb,UAC3D,kBAAC,EAAD,CAAaC,MAAOH,EAAMG,WAIlC,kBAAC,IAAD,CAAOa,QAAM,EAACR,OAAK,GACjB,kBAAC,IAAD,CAAKS,IAAI,KACP,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAKgH,YCuBrDC,EAxCE,SAACpB,GACd,IAAIqB,EAAO,GACb,GAAGrB,EAAMG,MAAM,CAGb,IAHc,IAAD,WAGJxD,GACI,GACT0E,EAAKtE,KAAK,wBAAIwB,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAC/C,wBAAIlD,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAAMzB,EAAMG,MAAMxD,GAAGuC,IAC1D,wBAAIX,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAAMzB,EAAMG,MAAMxD,GAAGyD,OAC1D,wBAAI9E,UAAU,gBAAgBiD,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAC3D,kBAAC,IAAD,CAAQC,MAAM,OAAOrG,QAAS,kBAAM2E,EAAM2B,WAAW3B,EAAMG,MAAMxD,GAAGuC,MAClE,kBAAC,IAAD,CAAM0C,IAAI,WAAWC,OAAO,WAAWC,GAAG,wBAP3CnF,EAAI,EAAGA,EAAIqD,EAAMG,MAAMrD,OAAQH,IAAK,GAApCA,GAaX,OACE,yBAAKrB,UAAU,mBACb,+BACE,+BACE,4BACE,kCACA,uCAIJ,+BACG+F,KAQT,OAAO,MCFMU,EAlCW,SAAC/B,GACvB,OACI,kBAAC,IAAM/E,SAAP,KACI,kBAAC,IAAD,KAAad,EAAK6H,qBAClB,kBAAC,IAAD,CAAMzB,MAAI,EAACC,OAAK,GACZ,kBAAC,IAAD,CACIyB,MAAO9H,EAAK+H,KACZ9E,KAAK,OACL+E,YAAY,MACZC,QAAS,SAACxB,GACNZ,EAAMa,aAAa,CAAEwB,aAAczB,EAAEG,OAAOb,WAGpD,kBAAC,IAAD,CACI+B,MAAO9H,EAAK+F,MACZ9C,KAAK,SACLkF,cAAc,EACdH,YAAY,mBACZxB,SAAU,SAACC,GACPZ,EAAMa,aAAa,CAAE0B,aAAc3B,EAAEG,OAAOb,UAGhD,4BAAQA,OAAO,GAAO/F,EAAKqI,MAC3B,4BAAQtC,OAAO,GAAQ/F,EAAKsI,SAGpC,kBAAC,IAAD,CAAOzB,QAAM,EAACR,OAAK,GACf,kBAAC,IAAD,CAAKS,IAAI,KACL,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAM0C,YAAavI,EAAKgH,YCcnEwB,EA3CK,SAAC3C,GACjB,IAAIqB,EAAO,GACX,GAAIrB,EAAM4C,QAAS,CAGf,IAHgB,IAAD,WAGNjG,GACI,GACT0E,EAAKtE,KAAK,wBAAIwB,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAC3C,wBAAIlD,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAAMzB,EAAM4C,QAAQjG,GAAGV,OAC5D,wBAAIsC,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAAMtH,EAAK6F,EAAM4C,QAAQjG,GAAGuD,QACjE,wBAAI5E,UAAU,gBAAgBiD,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KAC3D,kBAAC,IAAD,CAAQC,MAAM,OAAOrG,QAAS,kBAAM2E,EAAM6C,cAAc7C,EAAM4C,QAAQjG,GAAGV,SACrE,kBAAC,IAAD,CAAM2F,IAAI,WAAWC,OAAO,WAAWC,GAAG,wBAPjDnF,EAAI,EAAGA,EAAIqD,EAAM4C,QAAQ9F,OAAQH,IAAK,GAAtCA,GAaT,OACI,kBAAC,IAAM1B,SAAP,KACA,kBAAC,IAAD,KAAad,EAAK2I,qBAClB,yBAAKxH,UAAU,mBACX,+BACI,+BACI,4BACI,4BAAKnB,EAAK8B,OACV,4BAAK9B,EAAK+F,SAIlB,+BACKmB,MASjB,OAAQ,MCbD0B,EAvBE,SAAC/C,GAChB,OAAIA,EAAMgD,KAEN,kBAAC,IAAM/H,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK8B,OAClB,kBAAC,IAAD,CAAMgH,eAAA,GACJ,kBAAC,IAAD,KAAWjD,EAAMgD,KAAK/G,QAGxB,kBAAC,EAAD,CAAoB2G,QAAS5C,EAAM4C,QAASC,cAAe7C,EAAM6C,gBACjE,kBAAC,EAAD,CAAoBH,WAAY1C,EAAM0C,WAAY7B,aAAcb,EAAMa,eAGtE,kBAAC,EAAD,CAAgBV,MAAOH,EAAMkD,cAAevB,WAAY3B,EAAM2B,aAC9D,kBAAC,EAAD,CAAgBxB,MAAOH,EAAMG,MAAQgB,OAAQnB,EAAMmB,OAAQN,aAAcb,EAAMa,gBAM5E,MCTUsC,E,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKqH,WAAa,EAAKA,WAAWrH,KAAhB,gBAClB,EAAKoI,WAAa,EAAKA,WAAWpI,KAAhB,gBAClB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBAIrB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCqI,KAAM,KACN9D,GAAI,KACJiB,MAAO,KACP+C,cAAe,KACfpC,QAAS,KACTuB,aAAc,GACdE,cAAc,EACdK,QAAS,MArBC,E,kFA0BZS,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAIvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD8D,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAgCtD,KAAKL,MAAMC,OAC1EgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,oCAI3D,IAAIwI,EAAOK,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBX,GAAkB,SAAVtG,GACV9B,KAAKC,SAAS,CACZmI,KAAMA,EACN9D,GAAI8D,EAAK9D,GACTgE,cAAeF,EAAK7C,MACpByC,QAASI,EAAKJ,Y,gCAMlB,IAAIzC,EAAQkD,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnBxD,GAAmB,SAAVzD,GACX9B,KAAKC,SAAS,CACZsF,MAAOA,M,+BAOXqD,EAAsB,oBADX,CAAEI,QAAShJ,KAAKL,MAAM2E,GAAI4B,QAASlG,KAAKL,MAAMuG,SACRlG,KAAKL,MAAMC,S,mCAK5DgJ,EAAsB,kBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAI2E,cAAejJ,KAAKL,MAAM8H,aAAcyB,cAAelJ,KAAKL,MAAMgI,cACnD3H,KAAKL,MAAMC,S,wCAG1CuJ,GAChBnJ,KAAKC,SAASkJ,K,4BAId,GAAInJ,KAAKL,MAAMyI,KACb,OACE,kBAAC,IAAD,CAAKgB,KAAM,UAAYpJ,KAAKL,MAAMyI,KAAK9D,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACjH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,iCAMvChB,GACT0C,EAAyB,oBAAqB,CAAE1C,QAASA,EAAS8C,QAAShJ,KAAKL,MAAM2E,IAAMtE,KAAKL,MAAMC,S,oCAG3FyB,GACZuH,EAAyB,kBAAmB,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOA,GAASrB,KAAKL,MAAMC,S,+BAGpF,IAAD,EACyCI,KAAKL,MAA7CyI,EADD,EACCA,KAAM7C,EADP,EACOA,MAAO+C,EADd,EACcA,cAAeN,EAD7B,EAC6BA,QACpC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3G,MAAO9B,EAAK0B,MAAOsI,SAAUhK,EAAKiK,OAC1C,kBAAC,IAAD,MACCxJ,KAAKyJ,MACN,kBAAC,EAAD,CAAUrB,KAAMA,EAAM7C,MAAOA,EAAOyC,QAASA,EAASC,cAAejI,KAAKiI,cAAeK,cAAeA,EAAeR,WAAY9H,KAAK8H,WAAYf,WAAY/G,KAAK+G,WAAYR,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,yB,GA5G7L/G,aCKnBiI,EArBA,SAACtE,GAEhB,OAAIA,EAAMnE,MAEN,kBAAC,IAAD,CAAM0I,WAAS,GACZvE,EAAMnE,MAAMyC,KAAI,SAAC0E,GAAD,OACf,kBAAC,IAAD,CACEzE,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,IACjCjG,KAAM,UAAYwH,EAAK9D,GACvBtD,aAAa,EACbK,MAAO+G,EAAK/G,MACZuI,MAAM,GACNC,SAAS,GACTC,KAAK,SAKH,8BCHCC,EAdG,SAAC3E,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAK0B,MAAOsI,SAAUhK,EAAKiK,OAE1C,kBAAC,IAAD,KAAajK,EAAKqC,MAClB,kBAAC,IAAD,CAAKwH,KAAK,aAAajD,OAAO,aAAckD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACpF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,EAAD,CAAUjG,MAAOmE,EAAMnE,UCNRsH,E,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCkB,MAAO,MALG,E,kFASZwH,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QACpET,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,gCAI3D,IAAIqB,EAAQwH,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnB9H,GAAmB,SAAVa,GACX9B,KAAKC,SAAS,CACZgB,MAAOA,M,+BAKH,IACDA,EAASjB,KAAKL,MAAdsB,MACP,OAAO,kBAAC,EAAD,CAAWA,MAAOA,Q,GAvCOqJ,IAAM7I,WCsC3B8I,EAzCE,SAACnF,GAChB,GAAIA,EAAMoF,YACR,IAAIC,GAAgB,OAEhBA,GAAgB,EAEtB,OACE,kBAAC,IAAMpK,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK6I,MAClB,kBAAC,IAAD,CAAMzC,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MACZmB,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAMgD,KAAK/G,MACzBmG,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,WAGzC,kBAAC,IAAD,CAAUoF,OAAK,EAACpF,OAAO,EAAOqF,SAAUF,EAAe3E,KAAK,cAAczE,MAAO9B,EAAKqL,WACpF7E,SAAU,SAACC,GACT3D,QAAQC,IAAI0D,GACZZ,EAAMa,aAAa,CAAEuE,YAAaK,KAAKC,MAAM9E,EAAEG,OAAOb,YAG1D,kBAAC,IAAD,CAAUoF,OAAK,EAACpF,OAAO,EAAMqF,QAASF,EAAe3E,KAAK,cAAczE,MAAO9B,EAAKwL,QAClFhF,SAAU,SAACC,GACT3D,QAAQC,IAAI0D,GACZZ,EAAMa,aAAa,CAAEuE,YAAaK,KAAKC,MAAM9E,EAAEG,OAAOb,aAK5D,kBAAC,IAAD,CAAOc,QAAM,GACX,kBAAC,IAAD,CAAKC,IAAI,KACP,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC0E,UAAW5F,EAAM6F,QAASxK,QAAS2E,EAAMmB,QAAShH,EAAKgH,YCpBzE2E,E,YACnB,aAAe,IAAD,8BACZ,+CACK3E,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAEzB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCqI,KAAM,GACN+C,cAAc,GATJ,E,kFAeZ1C,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,+BAK/C4D,EAAsB,QADX,CAACvH,MAAOrB,KAAKL,MAAM0B,MAAO8J,aAAcnL,KAAKL,MAAM6K,aACzBxK,KAAKL,MAAMC,S,wCAIhCuJ,GAChBnJ,KAAKC,SAASkJ,K,oCAKdnJ,KAAKoL,UAAUC,SAAS,a,+BAKhB,IACDjD,EAAQpI,KAAKL,MAAbyI,KACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/G,MAAO9B,EAAK+L,UAAW/B,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAK+L,WAClB,kBAAC,EAAD,CAAUlD,KAAMA,EAAM7B,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA9C7C/G,aCCnB8J,E,YACnB,aAAe,IAAD,8BACZ,+CACKhF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAGzB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCqI,KAAO,GACPoC,YAAa,MAXH,E,kFAgBZ/B,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,e,+BAO/C4D,EAAyB,QADd,CAACtE,GAAGtE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAO8J,aAAcnL,KAAKL,MAAM6K,aACvCxK,KAAKL,MAAMC,S,0CAGpDI,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,QACFsF,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAiCtD,KAAKL,MAAMC,S,oCAM7E,IAAIwI,EAAOK,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBX,GAAkB,SAAVtG,GACV9B,KAAKC,SAAS,CACZoB,MAAO+G,EAAK/G,MACZiD,GAAI8D,EAAK9D,GACT8D,KAAMA,EACNoC,YAAapC,EAAK+C,iB,wCAKNhC,GAChBnJ,KAAKC,SAASkJ,K,oCAMdnJ,KAAKoL,UAAUC,SAAS,a,+BAIhB,IAAD,EACyBrL,KAAKL,MAA1ByI,EADJ,EACIA,KAAMoC,EADV,EACUA,YACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQnJ,MAAO9B,EAAK+L,UAAW/B,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAK+L,WAClB,kBAAC,EAAD,CAAUlD,KAAMA,EAAMoC,YAAaA,EAAajE,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA3EnE/G,aCG7B+J,EAhBC,SAACpG,GACf,OAAIA,EAAMiB,IAEN,kBAAC,IAAMhG,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK8B,OAClB,kBAAC,IAAD,CAAMgH,eAAA,GACJ,kBAAC,IAAD,KAAWjD,EAAMiB,IAAIhF,SAOpB,MCFUkH,E,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK+L,UAAY,EAAKA,UAAU/L,KAAf,gBACjB,EAAKoI,WAAa,EAAKA,WAAWpI,KAAhB,gBAClB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBAIrB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCsG,IAAK,KACL/B,GAAI,KACJiB,MAAO,KACP+C,cAAe,KACfpC,QAAS,KACTuB,aAAc,GACdE,cAAc,EACdK,QAAS,MArBC,E,kFA0BZS,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAIvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD8D,EAAsB,OAAQ5I,KAAK6I,SAASvF,OAAd,MAA+BtD,KAAKL,MAAMC,OACxEgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,oCAI3D,IAAIyG,EAAMoC,EAAWK,aACjBhH,EAAQ2G,EAAWM,WACnB1C,GAAiB,QAAVvE,GACT9B,KAAKC,SAAS,CACZoG,IAAKA,EACL/B,GAAI+B,EAAI/B,GACRgE,cAAejC,EAAId,MACnByC,QAAS3B,EAAI2B,Y,gCAMjB,IAAIzC,EAAQkD,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnBxD,GAAmB,SAAVzD,GACX9B,KAAKC,SAAS,CACZsF,MAAOA,M,+BAOXqD,EAAsB,oBADX,CAAE8C,OAAQ1L,KAAKL,MAAM2E,GAAI4B,QAASlG,KAAKL,MAAMuG,SACPlG,KAAKL,MAAMC,S,mCAK5DgJ,EAAsB,iBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAI2E,cAAejJ,KAAKL,MAAM8H,aAAcyB,cAAelJ,KAAKL,MAAMgI,cACpD3H,KAAKL,MAAMC,S,wCAGzCuJ,GAChBnJ,KAAKC,SAASkJ,K,4BAId,GAAInJ,KAAKL,MAAM0G,IACb,OACE,kBAAC,IAAD,CAAK+C,KAAM,SAAWpJ,KAAKL,MAAM0G,IAAI/B,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QAC/G,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,gCAMxChB,GACR0C,EAAyB,oBAAqB,CAAE1C,QAASA,EAASwF,OAAQ1L,KAAKL,MAAM2E,IAAMtE,KAAKL,MAAMC,S,oCAG1FyB,GACZuH,EAAyB,iBAAkB,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOA,GAASrB,KAAKL,MAAMC,S,+BAGnF,IAAD,EACwCI,KAAKL,MAA5C0G,EADD,EACCA,IAAKd,EADN,EACMA,MAAO+C,EADb,EACaA,cAAeN,EAD5B,EAC4BA,QACnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3G,MAAO9B,EAAK6B,KAAMmI,SAAUhK,EAAKiK,OACzC,kBAAC,IAAD,MACCxJ,KAAKyJ,MACN,kBAAC,EAAD,CAASpD,IAAKA,EAAKd,MAAOA,EAAOyC,QAASA,EAASC,cAAejI,KAAKiI,cAAeK,cAAeA,EAAeR,WAAY9H,KAAK8H,WAAY2D,UAAWzL,KAAKyL,UAAWlF,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,yB,GA5GxL/G,aCKnBkK,EArBD,SAACvG,GAEf,OAAIA,EAAMhE,KAEN,kBAAC,IAAD,CAAMuI,WAAS,GACZvE,EAAMhE,KAAKsC,KAAI,SAAC2C,GAAD,OACd,kBAAC,IAAD,CACE1C,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,IACjCjG,KAAM,SAAWyF,EAAI/B,GACrBtD,aAAa,EACbK,MAAOgF,EAAIhF,MACXuI,MAAM,GACNC,SAAS,GACTC,KAAK,SAKH,8BCHC8B,EAdE,SAACxG,GAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAK6B,KAAMmI,SAAUhK,EAAKiK,OAEzC,kBAAC,IAAD,KAAajK,EAAKqC,MAClB,kBAAC,IAAD,CAAKwH,KAAK,YAAYjD,OAAO,aAAckD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACnF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,EAAD,CAAS9F,KAAMgE,EAAMhE,SCNNmH,E,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCqB,KAAM,MALI,E,kFASZqH,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QACpET,EAAkB,OAAQ5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,gCAI1D,IAAIwB,EAAOqH,EAAWtF,UAClBrB,EAAQ2G,EAAWM,WACnB3H,GAAkB,QAAVU,GACV9B,KAAKC,SAAS,CACZmB,KAAMA,M,+BAKF,IACDA,EAAQpB,KAAKL,MAAbyB,KACP,OAAO,kBAAC,EAAD,CAAUA,KAAMA,Q,GAvCSkJ,IAAM7I,WC0B3BoK,EA7BC,SAACzG,GACf,GAAIA,EAAM0G,iBAKV,OACE,kBAAC,IAAMzL,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK8G,KAClB,kBAAC,IAAD,CAAMV,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MACZmB,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAMiB,IAAIhF,MACxBmG,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,YAK3C,kBAAC,IAAD,CAAOc,QAAM,GACX,kBAAC,IAAD,CAAKC,IAAI,KACP,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC0E,UAAW5F,EAAM6F,QAASxK,QAAS2E,EAAMmB,QAAShH,EAAKgH,YCRzEwF,E,YACnB,aAAe,IAAD,8BACZ,+CACKxF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAEzB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCsG,IAAK,GACL2F,aAAa,GATH,E,kFAeZvD,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,+BAK/C4D,EAAsB,OADX,CAACvH,MAAOrB,KAAKL,MAAM0B,MAAO2K,YAAahM,KAAKL,MAAMmM,YACzB9L,KAAKL,MAAMC,S,wCAI/BuJ,GAChBnJ,KAAKC,SAASkJ,K,oCAKdnJ,KAAKoL,UAAUC,SAAS,Y,+BAKhB,IACDhF,EAAOrG,KAAKL,MAAZ0G,IACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQhF,MAAO9B,EAAK0M,SAAU1C,SAAUhK,EAAKiK,OAC7C,kBAAC,IAAD,KAAajK,EAAK0M,UAClB,kBAAC,EAAD,CAAS5F,IAAKA,EAAKE,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA9C3C/G,aCClB8J,G,YACnB,aAAe,IAAD,8BACZ,+CACKhF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAGzB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCsG,IAAM,GACNyF,WAAY,MAXF,E,kFAgBZrD,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,e,+BAO/C4D,EAAyB,OADd,CAACtE,GAAGtE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAO2K,YAAahM,KAAKL,MAAMmM,YACvC9L,KAAKL,MAAMC,S,0CAGnDI,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,OACFsF,EAAsB,OAAQ5I,KAAK6I,SAASvF,OAAd,MAAgCtD,KAAKL,MAAMC,S,oCAM3E,IAAIyG,EAAMoC,EAAWK,aACjBhH,EAAQ2G,EAAWM,WACnB1C,GAAiB,QAAVvE,GACT9B,KAAKC,SAAS,CACZoB,MAAOgF,EAAIhF,MACXiD,GAAI+B,EAAI/B,GACR+B,IAAKA,EACLyF,WAAYzF,EAAI2F,gB,wCAKJ7C,GAChBnJ,KAAKC,SAASkJ,K,oCAMdnJ,KAAKoL,UAAUC,SAAS,Y,+BAIhB,IAAD,EACuBrL,KAAKL,MAAxB0G,EADJ,EACIA,IAAKyF,EADT,EACSA,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzK,MAAO9B,EAAK0M,SAAU1C,SAAUhK,EAAKiK,OAC7C,kBAAC,IAAD,KAAajK,EAAK0M,UAClB,kBAAC,EAAD,CAAS5F,IAAKA,EAAKyF,WAAYA,EAAYvF,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA3E9D/G,aCO7ByK,GApBI,SAAC9G,GAClB,OAAIA,EAAM+G,OAEN,kBAAC,IAAM9L,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK8B,OAClB,kBAAC,IAAD,CAAMgH,eAAA,GACJ,kBAAC,IAAD,KAAWjD,EAAM+G,OAAO9K,QAG1B,kBAAC,IAAD,CAAMgH,eAAA,GACJ,kBAAC,IAAD,CAAU+D,MAAO,CAACC,gBAAiBjH,EAAM+G,OAAOG,YAAalH,EAAM+G,OAAOG,aAOzE,MCNU/D,G,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK6M,aAAe,EAAKA,aAAa7M,KAAlB,gBACpB,EAAKoI,WAAa,EAAKA,WAAWpI,KAAhB,gBAClB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBAIrB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCoM,OAAQ,KACR7H,GAAI,KACJiB,MAAO,KACP+C,cAAe,KACfpC,QAAS,KACTuB,aAAc,GACdE,cAAc,EACdK,QAAS,MArBC,E,kFA0BZS,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAIvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD8D,EAAsB,WAAY5I,KAAK6I,SAASvF,OAAd,SAAkCtD,KAAKL,MAAMC,OAC/EgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,oCAI3D,IAAIuM,EAAS1D,EAAWK,aACpBhH,EAAQ2G,EAAWM,WACnBoD,GAAoB,WAAVrK,GACZ9B,KAAKC,SAAS,CACZkM,OAAQA,EACR7H,GAAI6H,EAAO7H,GACXgE,cAAe6D,EAAO5G,MACtByC,QAASmE,EAAOnE,Y,gCAMpB,IAAIzC,EAAQkD,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnBxD,GAAmB,SAAVzD,GACX9B,KAAKC,SAAS,CACZsF,MAAOA,M,+BAOXqD,EAAsB,oBADX,CAAE4D,UAAWxM,KAAKL,MAAM2E,GAAI4B,QAASlG,KAAKL,MAAMuG,SACVlG,KAAKL,MAAMC,S,mCAK5DgJ,EAAsB,qBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAI2E,cAAejJ,KAAKL,MAAM8H,aAAcyB,cAAelJ,KAAKL,MAAMgI,cAChD3H,KAAKL,MAAMC,S,wCAG7CuJ,GAChBnJ,KAAKC,SAASkJ,K,4BAId,GAAInJ,KAAKL,MAAMwM,OACb,OACE,kBAAC,IAAD,CAAK/C,KAAM,aAAepJ,KAAKL,MAAMwM,OAAO7H,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACtH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,mCAMrChB,GACX0C,EAAyB,oBAAqB,CAAE1C,QAASA,EAASsG,UAAWxM,KAAKL,MAAM2E,IAAMtE,KAAKL,MAAMC,S,oCAG7FyB,GACZuH,EAAyB,qBAAsB,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOA,GAASrB,KAAKL,MAAMC,S,+BAGvF,IAAD,EAC2CI,KAAKL,MAA/CwM,EADD,EACCA,OAAQ5G,EADT,EACSA,MAAO+C,EADhB,EACgBA,cAAeN,EAD/B,EAC+BA,QACtC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3G,MAAO9B,EAAK4B,SAAUoI,SAAUhK,EAAKiK,OAC7C,kBAAC,IAAD,MACCxJ,KAAKyJ,MACN,kBAAC,GAAD,CAAY0C,OAAQA,EAAQ5G,MAAOA,EAAOyC,QAASA,EAASC,cAAejI,KAAKiI,cAAeK,cAAeA,EAAeR,WAAY9H,KAAK8H,WAAYyE,aAAcvM,KAAKuM,aAAchG,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,yB,GA5GvM/G,aCKnBgL,GArBE,SAACrH,GAElB,OAAIA,EAAMjE,SAEN,kBAAC,IAAD,CAAMwI,WAAS,GACZvE,EAAMjE,SAASuC,KAAI,SAACyI,GAAD,OAClB,kBAAC,IAAD,CACExI,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,IACjCjG,KAAM,aAAeuL,EAAO7H,GAC5BtD,aAAa,EACbK,MAAO8K,EAAO9K,MACduI,MAAM,GACNC,SAAS,GACTC,KAAK,SAKH,8BCHC4C,GAdK,SAACtH,GACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAK4B,SAAUoI,SAAUhK,EAAKiK,OAE7C,kBAAC,IAAD,KAAajK,EAAKqC,MAClB,kBAAC,IAAD,CAAKwH,KAAK,gBAAgBjD,OAAO,aAAckD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACvF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,GAAD,CAAY/F,SAAUiE,EAAMjE,aCNboH,G,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCoB,SAAU,MALA,E,kFASZsH,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QACpET,EAAkB,WAAY5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,gCAI9D,IAAIuB,EAAWsH,EAAWtF,UACtBrB,EAAQ2G,EAAWM,WACnB5H,GAAsB,WAAVW,GACd9B,KAAKC,SAAS,CACZkB,SAAUA,M,+BAKN,IACDA,EAAYnB,KAAKL,MAAjBwB,SACP,OAAO,kBAAC,GAAD,CAAaA,SAAUA,Q,GAvCEmJ,IAAM7I,WC4C3BkL,GA/CI,SAACvH,GAClB,OAAIA,EAAM+G,OAEN,kBAAC,IAAM9L,SAAP,KACE,kBAAC,IAAD,KAAad,EAAK4M,QAClB,kBAAC,IAAD,CAAMxG,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MACZmB,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAM/D,MACpBmG,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,YAM3C,yBAAK5E,UAAU,SACb,4BACE,4BACE,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,cACf,uBAAGkM,MAAM,sCAAsCC,cAAY,OAAOvI,GAAG,sCAErE,yBAAK5D,UAAU,cACb,yBAAKA,UAAU,mBACb,2BAAO8B,KAAK,OAAO+E,YAAY,QAAQjC,MAAOF,EAAM0B,MAAOgG,SAAS,WAAWxI,GAAG,qCAQ9F,kBAAC,IAAD,CAAO8B,QAAM,GACX,kBAAC,IAAD,CAAKC,IAAI,KACP,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC0E,UAAW5F,EAAM6F,QAASxK,QAAS2E,EAAMmB,QAAShH,EAAKgH,WAMrF,MC5BUwG,G,YACnB,aAAe,IAAD,8BACZ,+CACKxG,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAEzB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCoM,OAAQ,GACR9K,MAAO,GACPyF,MAAO,IAVG,E,kFAgBZ2B,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,oCAK/ChF,KAAKgN,gB,oCAIL,IAAMC,EAAOjN,KACDiN,EAAKC,IACbC,YAAYC,OAAO,CACrBC,QAAS,8BACTC,SAAU,oCACVC,4BAA4B,EAC5BC,QAAS,CAAC,cAAe,cACzBC,OAAQ,UACRnI,MAAO,CACLoI,IAAK,WAEPhF,GAAI,CACFiF,OAAQ,SAAUC,GAChBX,EAAKhN,SAAS,CAAE6G,MAAO8G,EAAEtI,MAAMoI,Y,+BAQrC9E,EAAsB,WADX,CAACvH,MAAOrB,KAAKL,MAAM0B,MAAOyF,MAAO9G,KAAKL,MAAMmH,OACf9G,KAAKL,MAAMC,S,wCAInCuJ,GAChBnJ,KAAKC,SAASkJ,K,oCAKdnJ,KAAKoL,UAAUC,SAAS,gB,+BAKhB,IACDc,EAAUnM,KAAKL,MAAfwM,OACP,OACE,kBAAC,IAAD,CAAM0B,cAAe7N,KAAK8N,YAAYpO,KAAKM,OACzC,kBAAC,IAAD,CAAQqB,MAAO9B,EAAKwO,YAAaxE,SAAUhK,EAAKiK,OAChD,kBAAC,IAAD,KAAajK,EAAKwO,aAClB,kBAAC,GAAD,CAAY5B,OAAQA,EAAQ5F,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GAxEjD/G,aCCrB8J,G,YACnB,aAAe,IAAD,8BACZ,+CACKhF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKsN,YAAc,EAAKA,YAAYtN,KAAjB,gBAInB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCoM,OAAS,GACT9K,MAAO,KACPiD,GAAI,GACJwC,MAAO,QAfG,E,kFAoBZ2B,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,e,0CAK/ChF,KAAKgK,a,oCAILhK,KAAKgN,gB,oCAKL,IAAMC,EAAOjN,KACDiN,EAAKC,IAEbC,YAAYC,OAAO,CACrBC,QAAS,8BACTC,SAAU,oCACVC,4BAA4B,EAC5BC,QAAS,CAAC,cAAe,cACzBC,OAAQ,UACRnI,MAAO,CACLoI,IAAK1N,KAAKL,MAAMmH,OAElB4B,GAAI,CACFiF,OAAQ,SAAUC,GAChBX,EAAKhN,SAAS,CAAE6G,MAAO8G,EAAEtI,MAAMoI,Y,+BASrC9E,EAAyB,WADd,CAACtE,GAAGtE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAOyF,MAAO9G,KAAKL,MAAMmH,OAC7B9G,KAAKL,MAAMC,S,iCAIhCqK,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,UACFsF,EAAsB,WAAY5I,KAAK6I,SAASvF,OAAd,SAAmCtD,KAAKL,MAAMC,S,oCAKtE,IAAD,OACPuM,EAAS1D,EAAWK,aACpBhH,EAAQ2G,EAAWM,WACnBoD,GAAoB,WAAVrK,GACZ9B,KAAKC,SAAS,CACZoB,MAAO8K,EAAO9K,MACdiD,GAAI6H,EAAO7H,GACXwC,MAAOqF,EAAOG,UACdH,OAAQA,IACP,kBAAM,EAAKa,iBAEhB3K,QAAQC,IAAI6J,K,wCAGIhD,GAChBnJ,KAAKC,SAASkJ,K,oCAMdnJ,KAAKoL,UAAUC,SAAS,gB,+BAIhB,IAAD,EAC4BrL,KAAKL,MAA7BwM,EADJ,EACIA,OAAQ9K,EADZ,EACYA,MAAOyF,EADnB,EACmBA,MAC1B,OACE,kBAAC,IAAD,CAAM+G,cAAe7N,KAAK8N,YAAYpO,KAAKM,OACzC,kBAAC,IAAD,CAAQqB,MAAO9B,EAAKwO,YAAaxE,SAAUhK,EAAKiK,OAChD,kBAAC,IAAD,KAAajK,EAAKwO,aAClB,kBAAC,GAAD,CAAY5B,OAAQA,EAAQ9K,MAAOA,EAAOyF,MAAOA,EAAOP,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA3G3E/G,a,oBCwC7BuM,I,kBArDS,SAAC5I,GACvB,GAAIA,EAAM6I,aAAc,CAAC,IAYdC,EAAT,SAAgB9F,EAAM+F,GACpB,IAAIC,GAAW,EAIf,OAHID,EAAY/F,MAAQA,IACtBgG,GAAW,GAEL,4BAAQ9I,MAAO8C,EAAMgG,SAAUA,GAAW7O,EAAK6I,KAEhDiG,EAAT,SAAiBF,GACf,GAAI/I,EAAMkJ,cACR,OACE,yBAAK5N,UAAU,UACb,kBAAC,IAAD,CAAMA,UAAU,OAAOD,QAAS,kBAAM2E,EAAMkJ,cAAcH,EAAYI,QAAQjK,MAAM/E,EAAKiP,QACzF,uBAAG9N,UAAU,wCAAwC+N,eAAa,WAvB1E,SAAgBN,GACd,GAAyB,YAArBA,EAAY/F,MAAsBhD,EAAMsJ,SAC1C,OACE,4BAAQ5I,KAAK,OAAOC,SAAU,SAACC,GAAQZ,EAAMuJ,WAAWR,EAAYI,QAAQjK,GAAI0B,EAAEG,OAAOb,SACtF4I,EAAO,QAASC,GAChBD,EAAO,YAAaC,GACpBD,EAAO,WAAYC,IAkBjBS,CAAOT,GACR,yBAAKzN,UAAU,gBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cAAcnB,EAAK6I,MAClC,yBAAKwE,MAAM,mBAAmBrN,EAAK4O,EAAY/F,YAQ7D,OACE,kBAAC,IAAD,CAAM1H,UAAU,SACb0E,EAAM6I,aAAavK,KAAI,SAACyK,GAAD,OACtB,kBAAC,IAAD,CACE9M,MAAO8M,EAAYI,QAAQM,SAC3BjF,MAAOyE,EAAQF,IACf,yBAAK7E,KAAK,QAAQwF,IAAKX,EAAYI,QAAQQ,OAAQC,MAAM,KAAKC,OAAO,YAM7E,OAAQ,+BCxBGC,GA1BI,SAAC9J,GAClB,GAAIA,EAAMtE,SAAU,CAAC,IACVuN,EAAT,SAAiBE,GACb,OAAInJ,EAAM+J,WACC,kBAAC,IAAD,CAAM1O,QAAS,kBAAK2E,EAAM+J,WAAWZ,EAAQjK,MAAM/E,EAAK6P,KAE/DhK,EAAMkJ,cACC,kBAAC,IAAD,CAAM7N,QAAS,kBAAK2E,EAAMkJ,cAAcC,EAAQjK,MAAM/E,EAAKiP,aADtE,GAIJ,OACE,kBAAC,IAAD,KACGpJ,EAAMtE,SAAS4C,KAAI,SAAC6K,GAAD,OAClB,kBAAC,IAAD,CACAlN,MAAOkN,EAAQM,SACfhF,SAAS,MACTD,MAAOyE,EAAQE,IACf,yBAAKjF,KAAK,QAAQwF,IAAKP,EAAQQ,OAAQC,MAAM,KAAKC,OAAO,YAM/D,OAAQ,8BC6BGI,GAlDK,SAACjK,GA2BjB,OAAIA,EAAMkK,KAEF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK/P,EAAKgQ,WAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CACItB,aAAc7I,EAAMkK,KAAKrB,aAAcK,cAAelJ,EAAMkJ,cAC5DK,WAAYvJ,EAAMuJ,WAAYD,SAAUtJ,EAAMsJ,aAI1D,kBAAC,IAAD,KAxCZ,WACI,GAAItJ,EAAMsJ,SACN,OACI,kBAAC,IAAD,CAAMc,eAAa,EAAC9O,UAAU,SAC1B,kBAAC,IAAD,CAAU+O,eAAa,EAAC/O,UAAU,QAAQW,MAAO,KAAO9B,EAAK6P,KACzD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIM,SAAO,EACPrI,MAAO9H,EAAKoQ,OACZC,eAAa,EACbpN,KAAK,OACL+E,YAAY,GACZsI,aAAW,EACXrI,QAAS,SAACxB,GACNZ,EAAM0K,cAAc,CAAEC,MAAO/J,EAAEG,OAAOb,YAIlD,kBAAC,GAAD,CAAYxE,SAAUsE,EAAMtE,SAAUqO,WAAY/J,EAAM+J,gBAsB/DT,KAKL,8BCrBDQ,GA5BI,SAAC9J,GAClB,GAAIA,EAAMjE,SAAU,CAAC,IACVkN,EAAT,SAAiBlC,GACf,GAAI/G,EAAM4K,UACR,OAAQ,kBAAC,IAAD,CAAMvP,QAAS,kBAAM2E,EAAM4K,UAAU7D,EAAO7H,MAAM/E,EAAKqP,SAGnE,OACE,kBAAC,IAAD,KACGxJ,EAAMjE,SAASuC,KAAI,SAACyI,GAAD,OAClB,kBAAC,IAAD,CACE9K,MACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,aAAa0L,MAAO,CAAEC,gBAAiBF,EAAOG,YAC3D,uBAAG5L,UAAU,2BAAb,eACA,uBAAGA,UAAU,iCAEf,yBAAKA,UAAU,cAAcyL,EAAO9K,QAExCuI,MAAOyE,EAAQlC,SAMvB,OAAQ,8BC8BG8D,GAtDE,SAAC7K,GAuCd,OAAIA,EAAMkK,KAGF,kBAAC,IAAD,CAAME,eAAa,EAAC9O,UAAU,SAC1B,kBAAC,IAAD,CAAU+O,eAAa,EAAC/O,UAAU,QAC9BW,OA3CF8K,EA2Cc/G,EAAMkK,KAAKnD,OA1ChCA,EAEK,6BACA,yBAAKzL,UAAU,QACX,yBAAKA,UAAU,aAAa0L,MAAO,CAAEC,gBAAiBF,EAAOrF,QACzD,uBAAGpG,UAAU,2BAAb,eACA,uBAAGA,UAAU,iCAEjB,yBAAKA,UAAU,cAAcyL,EAAO9K,SAKzC,6BAAM9B,EAAK2Q,cAGtB,WACI,GAAI9K,EAAMsJ,SACN,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIgB,SAAO,EACPrI,MAAO9H,EAAKoQ,OACZC,eAAa,EACbpN,KAAK,OACL+E,YAAY,GACZsI,aAAW,EACXrI,QAAS,SAACxB,GACNZ,EAAM+K,aAAa,CAAEJ,MAAO/J,EAAEG,OAAOb,YAIjD,kBAAC,GAAD,CAAYnE,SAAUiE,EAAMjE,SAAU6O,UAAW5K,EAAM4K,aAWtDtB,KAKD,6BAlDZ,IAAcvC,GCqFHiE,GAvFD,SAAChL,GAEX,SAASiL,EAAKC,GACV,IAAIC,EAAS,GAsCb,OArCID,EAAKE,gBACLD,EAAOpO,KACH,0BAAMzB,UAAU,kBACZ,uBAAGkM,MAAM,eAAeC,cAAY,WAK5CyD,EAAKG,eACLF,EAAOpO,KACH,0BAAMzB,UAAU,oBACZ,uBAAGkM,MAAM,oBAAoBC,cAAY,WAIjDyD,EAAKI,cACLH,EAAOpO,KACH,0BAAMzB,UAAU,mBACZ,uBAAGkM,MAAM,qBAAqBC,cAAY,WAIlDyD,EAAKnE,OACLoE,EAAOpO,KAEH,yBAAKzB,UAAU,QACX,yBAAKA,UAAU,aAAa0L,MAAO,CAAEC,gBAAiBiE,EAAKnE,OAAOrF,QAC9D,uBAAGpG,UAAU,2BAAb,eACA,uBAAGA,UAAU,iCAEjB,yBAAKA,UAAU,cAAc4P,EAAKnE,OAAO9K,SAKjDkP,EAAOpO,KAAK5C,EAAK2Q,YAEbK,EASZ,OAAInL,EAAMkK,KAEF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK/P,EAAKoR,MAVtB,WACI,GAAIvL,EAAMsJ,SACN,OAAQ,kBAAC,IAAD,CAAMtF,KAAM,cAAgBhE,EAAMkK,KAAKhL,IAAI,uBAAG5D,UAAU,oBAAxD,IAAgFnB,EAAKqR,KASpFlC,IAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM/E,WAAS,GACVvE,EAAMkK,KAAKqB,MAAMjN,KAAI,SAAC4M,GAAD,OAClB,kBAAC,IAAD,CACI5P,UAAU,aACVE,KAAM,UAAY0P,EAAKhM,GACvBjD,MAAOiP,EAAKjP,MACZuI,MAAOyG,EAAKC,GACZxG,KAAMwG,EAAKO,eAM3B,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACInQ,UAAU,iBACVoQ,kBAAmBvR,EAAKwR,OACxBxJ,YAAahI,EAAKoQ,OAClBqB,QAAQ,MAOhB,8BCvCDC,GA7CC,SAAC7L,GACb,GAAIA,EAAMkK,KAAM,CAAC,IACJ4B,EAAT,SAAkBC,GACd,IAAIC,EAAO,IAAIC,KAAK,IAAIxR,OAAOyR,MAAMH,IACrC,OAAQ,kBAAC,KAAD,CAAQC,KAAMA,EAAMG,SAAO,KAOvC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKhS,EAAKiS,QARlB,WACI,GAAIpM,EAAMsJ,SACN,OAAQ,kBAAC,IAAD,CAAMtF,KAAM,sBAAwBhE,EAAMkK,KAAKhL,IAAI,uBAAG5D,UAAU,oBAAhE,IAAwFnB,EAAKqR,KAOhGlC,IAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM/E,WAAS,GACVvE,EAAMkK,KAAKkC,QAAQ9N,KAAI,SAAC+N,GAAD,OACpB,kBAAC,IAAD,CACI/Q,UAAU,aACVE,KAAM,YAAc6Q,EAAOnN,GAC3BjD,MAAOoQ,EAAOpQ,MACduI,MAAOsH,EAASO,EAAOC,eACvB5H,KAAM2H,EAAOE,eAM7B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjR,UAAU,iBACVoQ,kBAAmBvR,EAAKwR,OACxBxJ,YAAahI,EAAKoQ,OAClBqB,QAAQ,MAMxB,OAAQ,8BCtBCY,GAzBG,SAACxM,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa7F,EAAKsS,cAClB,kBAAC,IAAD,CAAMlM,MAAI,GACV,kBAAC,IAAD,CACI0B,MAAO9H,EAAKuS,QACZxN,GAAG,UACH9B,KAAK,WACL+E,YAAY,MACZwK,UAAU,MACVC,WAAS,EACTnC,aAAa,EACbrI,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAEgM,eAAgBjM,EAAEG,OAAOb,YAIpD,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ5E,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAKgH,WCyBrD2L,GA1CK,SAAC9M,GACjB,IAAI+M,EAAQ,GACZ,GAAI/M,EAAMgN,SAAU,CAEhB,IAFiB,IAAD,WAEPrQ,GACDqP,EAAO,IAAIC,KAAK,IAAIxR,OAAOyR,MAAMlM,EAAMgN,SAASrQ,GAAGsQ,aACnDC,EAAO,kBAAC,IAAMjS,SAAP,KAAgB,kBAAC,IAAD,CAAMI,QAAS,kBAAM2E,EAAMmN,cAAcnN,EAAMgN,SAASrQ,GAAGuC,MAAK,uBAAG5D,UAAU,yBAAiC,kBAAC,KAAD,CAAQ8R,OAAO,KAAKjB,SAAO,EAACkB,KAAG,GAAErB,GAAe7R,EAAKkT,KAC9LN,EAAMhQ,KACF,kBAAC,IAAD,CACIzB,UAAU,YACVoJ,KAAMwI,EACNzI,SAAUzE,EAAMgN,SAASrQ,GAAG4P,SAE5B,yBAAKrI,KAAK,QAAQwF,IAAK1J,EAAMgN,SAASrQ,GAAGwM,QAAQQ,OAAQC,MAAM,KAAKC,OAAO,UAT9ElN,EAAI,EAAGA,EAAIqD,EAAMgN,SAASlQ,OAAQH,IAAK,CAAC,IACzCqP,EACAkB,EAFwC,EAAvCvQ,GAeT,OACI,kBAAC,IAAM1B,SAAP,KACI,kBAAC,IAAD,KAAad,EAAK6S,UAClB,kBAAC,IAAD,CAAMzI,WAAS,EAAC/D,OAAK,GAChBuM,GAEL,kBAAC,IAAD,CAAKO,OAAK,GACN,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKhS,UAAU,UACX,uBAAGA,UAAU,aAAaD,QAAS,kBAAM2E,EAAMuN,aAC1CpT,EAAKqT,OAGd,kBAAC,IAAD,OAEJ,kBAAC,IAAD,OAKR,OAAS,kBAAC,IAAD,OCwGFC,GAxIE,SAACzN,GAChB,GAAIA,EAAMkK,MAAQlK,EAAM0N,OAAQ,CAkI9B,OAAQ,kBAAC,IAAMzS,SAAP,KAjHR,SAASyS,EAAOC,GACd,GAAgB,aAAZA,EAAwB,CAC1B,IAAIrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,cACxBtE,GAAW,GAGX,kBAAC,GAAD,CACEY,KAAMlK,EAAMkK,KAAMa,aAAc/K,EAAM+K,aAAczB,SAAUA,EAC9DvN,SAAUiE,EAAMjE,SAAU6O,UAAW5K,EAAM4K,YAIjD,GAAgB,iBAAZ+C,EAA4B,CAC1BrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,kBACxBtE,GAAW,GAGX,kBAAC,GAAD,CACEY,KAAMlK,EAAMkK,KAAMQ,cAAe1K,EAAM0K,cACvCxB,cAAelJ,EAAMkJ,cAAea,WAAY/J,EAAM+J,WACtDrO,SAAUsE,EAAMtE,SAAU6N,WAAYvJ,EAAMuJ,WAC5CD,SAAUA,IAKhB,GAAgB,UAAZqE,EAAqB,CACnBrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,WACxBtE,GAAW,GAEL,kBAAC,GAAD,CAAOY,KAAMlK,EAAMkK,KAAMZ,SAAUA,IAG7C,GAAgB,YAAZqE,EAAuB,CACrBrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,aACxBtE,GAAW,GAEL,kBAAC,GAAD,CAASY,KAAMlK,EAAMkK,KAAMZ,SAAUA,IAG/C,MAAgB,aAAZqE,GACE3N,EAAM0N,OAAOE,SAAS,YAChB,kBAAC,GAAD,CAAa5P,MAAOgC,EAAMkK,KAAM/I,OAAQnB,EAAM6N,cAAehN,aAAcb,EAAMa,eAI7E,SAAZ8M,GACE3N,EAAM0N,OAAOE,SAAS,QAChB,kBAAC,IAAD,CAAM5J,KAAM,UAAYhE,EAAMkK,KAAKhL,GAAK,SAAS,uBAAG5D,UAAU,oBAI1D,SAAZqS,GACE3N,EAAM0N,OAAOE,SAAS,QAEtB,kBAAC,IAAM3S,SAAP,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2O,MAAM,MAAMkE,YAAY,MAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACG9N,EAAMkK,KAAKjO,MACXyR,EAAO,SAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMzK,eAAA,GACJ,kBAAC,IAAD,CAAU3H,UAAU,QAAQW,MAAM,IArFpD,WACE,IAAI8R,EAAM,GAIV,OAHA/N,EAAMkK,KAAK8D,SAAS1P,KAAI,SAAC2C,GAAD,OACtB8M,EAAIhR,KAAK,kBAAC,IAAD,CAAM2H,KAAMzD,EAAIhF,YAEnB8R,EAgF8C/R,IACtC,kBAAC,IAAD,CAAUV,UAAU,QAAQW,MAAM,IA7E9C+D,EAAMkK,KAAK+D,UACL9T,EAAK+T,OAEL/T,EAAKgU,SA2EC,kBAAC,IAAD,CAAU7S,UAAU,QAAQW,MAAM,IAAI+D,EAAMkK,KAAKuB,WAIrD,kBAAC,IAAD,KACGiC,EAAO,eAKd,kBAAC,IAAD,CAAK9D,MAAM,MAAMkE,YAAY,MAC1BJ,EAAO,kBAKZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9D,MAAM,MAAMkE,YAAY,OAC1BJ,EAAO,WAIZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9D,MAAM,MAAMkE,YAAY,OAC1BJ,EAAO,aAKZ,kBAAC,IAAD,KAAavT,EAAKiU,aAEjBV,EAAO,YACR,kBAAC,GAAD,CAAaV,SAAUhN,EAAMgN,SAAUG,cAAenN,EAAMmN,cAAeI,SAAUvN,EAAMuN,iBA/CjG,EAyDuBG,CAAO,SAEhC,OAAQ,MC/HSvK,G,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK+T,WAAa,EAAKA,WAAW/T,KAAhB,gBAClB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBACrB,EAAKoQ,cAAgB,EAAKA,cAAcpQ,KAAnB,gBACrB,EAAKyP,WAAa,EAAKA,WAAWzP,KAAhB,gBAClB,EAAK4O,cAAgB,EAAKA,cAAc5O,KAAnB,gBACrB,EAAKyQ,aAAe,EAAKA,aAAazQ,KAAlB,gBACpB,EAAKsQ,UAAY,EAAKA,UAAUtQ,KAAf,gBACjB,EAAK6S,cAAgB,EAAKA,cAAc7S,KAAnB,gBACrB,EAAKuT,cAAgB,EAAKA,cAAcvT,KAAnB,gBACrB,EAAKiT,SAAW,EAAKA,SAASjT,KAAd,gBAChB,EAAKiP,WAAa,EAAKA,WAAWjP,KAAhB,gBAElB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuP,KAAM,KACNhL,GAAI,KACJiB,MAAO,KACP+C,cAAe,KACfpC,QAAS,KACTuB,aAAc,GACdE,cAAc,EACdK,QAAS,KACToK,SAAU,KACVzB,MAAO,KACPZ,MAAO,KACPjP,SAAU,GACVK,SAAU,GACV2R,OAAQ,GACRb,eAAgB,IAlCN,E,kFAuCZxJ,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAIvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD8D,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAgCtD,KAAKL,MAAMC,OAC1EgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,oCAI3D,IAAI0P,EAAO7G,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuG,GAAkB,SAAVxN,GACV9B,KAAKC,SAAS,CACZqP,KAAMA,EACNhL,GAAIgL,EAAKhL,GACTgE,cAAegH,EAAK/J,MACpBoL,MAAOrB,EAAKqB,MACZyB,SAAU9C,EAAKoE,aACfZ,OAAQxD,EAAKqE,gB,iCAMP,IAAD,OACT3T,KAAKC,SAAS,CAAEoD,KAAMrD,KAAKL,MAAM0D,KAAO,IAAK,WAC3CuF,EAAsB,QAAS,EAAKC,SAASvF,OAAd,OAAgC,EAAK3D,MAAMC,MAAO,EAAKD,MAAM0D,W,gCAK9F,IAAIzB,EAAO6G,EAAWtF,UAClBrB,EAAQ2G,EAAWM,WACnBnH,GAAkB,SAAVE,GACV9B,KAAKC,SAAS,CACZsF,MAAO3D,IAGPA,GAAkB,YAAVE,GACV9B,KAAKC,SAAS,CACZa,SAAUc,IAGVA,GAAkB,WAAVE,GACV9B,KAAKC,SAAS,CACZkB,SAAUS,M,+BAOdgH,EAAsB,oBADX,CAAEgL,QAAS5T,KAAKL,MAAM2E,GAAI4B,QAASlG,KAAKL,MAAMuG,SACRlG,KAAKL,MAAMC,S,oCAGhDuJ,GAAK,IAAD,OAChBnJ,KAAKC,SAAS,CAAEa,SAAU,KAC1Bd,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,kBAAmB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,a,mCAI5D5G,GAAK,IAAD,OACfnJ,KAAKC,SAAS,CAAEkB,SAAU,KAC1BnB,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,kBAAmB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,a,iCAI9D+D,GAETlL,EAAsB,qBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYD,GACM9T,KAAKL,MAAMC,S,gCAGrDoU,GAERpL,EAAsB,eADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIkI,UAAWwH,GACChU,KAAKL,MAAMC,S,oCAG3CkU,GAEZlL,EAAyB,qBADd,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYD,GACS9T,KAAKL,MAAMC,S,iCAGvDmU,EAAY3L,GAErBQ,EAAsB,oBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYA,EAAY3L,KAAMA,GACbpI,KAAKL,MAAMC,S,sCAK5DgJ,EAAsB,WADX,CAAEqL,iBAAkB,OAAQC,eAAgBlU,KAAKL,MAAM2E,GAAIqN,QAAS3R,KAAKL,MAAMsS,gBAClDjS,KAAKL,MAAMC,S,oCAGvC0E,GAEZsE,EAAyB,WADd,CAAEtE,GAAIA,GAC0BtE,KAAKL,MAAMC,MAAOI,KAAKL,MAAM0D,Q,wCAGxD8F,GAChBnJ,KAAKC,SAASkJ,K,4BAId,GAAInJ,KAAKL,MAAM2P,KACb,OACE,kBAAC,IAAD,CAAKlG,KAAM,UAAYpJ,KAAKL,MAAM2P,KAAKhL,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACjH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,iCAMvChB,GACT0C,EAAyB,oBAAqB,CAAE1C,QAASA,EAAS0N,QAAS5T,KAAKL,MAAM2E,IAAMtE,KAAKL,MAAMC,S,oCAG3FyB,GACZuH,EAAyB,kBAAmB,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOA,GAASrB,KAAKL,MAAMC,S,+BAGpF,IAAD,EACsGI,KAAKL,MAA1G2P,EADD,EACCA,KAAM/J,EADP,EACOA,MAAO+C,EADd,EACcA,cAAeN,EAD7B,EAC6BA,QAASlH,EADtC,EACsCA,SAAUK,EADhD,EACgDA,SAAUwP,EAD1D,EAC0DA,MAAOsB,EADjE,EACiEA,eAAgBG,EADjF,EACiFA,SAAUU,EAD3F,EAC2FA,OAClG,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzR,MAAO9B,EAAKsB,MAAO0I,SAAUhK,EAAKiK,KAAM2K,eAAe,IAC/D,kBAAC,IAAD,MACCnU,KAAKyJ,MACN,kBAAC,GAAD,CACE6F,KAAMA,EAAM/J,MAAOA,EAAOyC,QAASA,EAASlH,SAAUA,EAAUK,SAAUA,EAC1EmN,cAAetO,KAAKsO,cAAea,WAAYnP,KAAKmP,WACpDW,cAAe9P,KAAK8P,cAAe7H,cAAejI,KAAKiI,cACvDK,cAAeA,EAAeR,WAAY9H,KAAK8H,WAC/C2L,WAAYzT,KAAKyT,WAAYlN,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,kBACrE2H,aAAcnQ,KAAKmQ,aAAcH,UAAWhQ,KAAKgQ,UAAWW,MAAOA,EACnEsC,cAAejT,KAAKiT,cAAeV,cAAevS,KAAKuS,cACvDN,eAAgBA,EAAgBG,SAAUA,EAAUO,SAAU3S,KAAK2S,SACnEhE,WAAY3O,KAAK2O,WAAYmE,OAAQA,S,GA5LXrR,aCqErB2S,GAhFE,SAAChP,GAKhB,SAASiP,EAAO/E,GACd,IAAIiB,EAAS,GAsBb,OArBIjB,EAAKkB,gBACPD,EAAOpO,KACL,0BAAMzB,UAAU,kBACd,uBAAGkM,MAAM,eAAeC,cAAY,WAItCyC,EAAKoB,cACPH,EAAOpO,KACL,0BAAMzB,UAAU,mBACd,uBAAGkM,MAAM,qBAAqBC,cAAY,WAI5CyC,EAAKmB,eACPF,EAAOpO,KACL,0BAAMzB,UAAU,oBACd,uBAAGkM,MAAM,oBAAoBC,cAAY,WAIxC0D,EAGT,OAAInL,EAAMvE,MAEN,kBAAC,IAAMR,SAAP,KACE,kBAAC,IAAD,KACG+E,EAAMkP,OACP,uBAAG5T,UAAU,wCAAwC+N,eAAa,WAChE,4BAAQ3I,KAAK,YAAYC,SAAU,SAACC,GAAQZ,EAAMmP,WAAW,CAAElT,MAAO2E,EAAEG,OAAOb,UAC7E,4BAAQA,MAAM,SAAU/F,EAAKiV,UAC7B,4BAAQlP,MAAM,SAAS8I,UAAQ,GAAE7O,EAAKkV,YAExC,yBAAK/T,UAAU,gBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cAAcnB,EAAKmV,aAM1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM/K,WAAS,EAACjJ,UAAU,SACvB0E,EAAMvE,MAAM6C,KAAI,SAAC4L,GAAD,OACf,kBAAC,IAAD,CAAUjO,MAAOiO,EAAKjO,MAAOyI,KAAMwF,EAAKuB,QAASjH,MAAOyK,EAAO/E,GAAO1O,KAAM,UAAY0O,EAAKhL,UAInG,kBAAC,IAAD,OAqBI,8BCxBGqQ,GArDE,SAACvP,GAKhB,SAASiP,EAAO/D,GACd,IAAIC,EAAS,GAsBb,OArBID,EAAKE,gBACPD,EAAOpO,KACL,0BAAMzB,UAAU,kBACd,uBAAGkM,MAAM,eAAeC,cAAY,WAItCyD,EAAKI,cACPH,EAAOpO,KACL,0BAAMzB,UAAU,mBACd,uBAAGkM,MAAM,qBAAqBC,cAAY,WAI5CyD,EAAKG,eACPF,EAAOpO,KACL,0BAAMzB,UAAU,oBACd,uBAAGkM,MAAM,oBAAoBC,cAAY,WAIxC0D,EAGT,OAAInL,EAAMuL,MAEN,kBAAC,IAAMtQ,SAAP,KACE,kBAAC,IAAD,KACG+E,EAAMkP,QAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM3K,WAAS,EAACjJ,UAAU,SACvB0E,EAAMuL,MAAMjN,KAAI,SAAC4M,GAAD,OACf,kBAAC,IAAD,CAAUjP,MAAOiP,EAAKjP,MAAOyI,KAAMvK,EAAK+P,KAAO,IAAKgB,EAAKhB,KAAKjO,MAAOuI,MAAOyK,EAAO/D,GAAO1P,KAAM,UAAY0P,EAAKhM,UAIvH,kBAAC,IAAD,OAMI,8BC1BGsQ,GA3BG,SAACxP,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKsB,MAAO0I,SAAUhK,EAAKiK,OAE1C,kBAAC,IAAD,KAAajK,EAAKqC,MAClB,kBAAC,IAAD,CAAKwH,KAAK,aAAajD,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACnF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK8H,MAAM,MAAMkE,YAAY,MAC3B,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAUrS,MAAOuE,EAAMvE,MAAOyT,OAAQ/U,EAAKsV,WAAYN,WAAYnP,EAAMmP,eAG7E,kBAAC,IAAD,CAAKvF,MAAM,MAAMkE,YAAY,MAC3B,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAUvC,MAAOvL,EAAMuL,MAAO2D,OAAQ/U,EAAKuV,kBAAmBP,WAAYnP,EAAMmP,kBCfvEhM,G,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6U,WAAa,EAAKA,WAAW7U,KAAhB,gBAElB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCc,MAAO,KACP8P,MAAO,MARG,E,kFAYZlI,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAGIjI,GACT6G,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,CAAC0R,MAAOhT,EAAEV,OAAQrB,KAAKL,MAAMC,S,iCAIlDqK,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QACpET,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,OAC3DgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,gCAI3D,IAAIgC,EAAO6G,EAAWtF,UAClBrB,EAAQ2G,EAAWM,WACnBnH,GAAkB,SAAVE,GACV9B,KAAKC,SAAS,CACZY,MAAOe,IAGPA,GAAkB,SAAVE,GACV9B,KAAKC,SAAS,CACZ0Q,MAAO/O,M,+BAKH,IAAD,EACgB5B,KAAKL,MAArBkB,EADA,EACAA,MAAO8P,EADP,EACOA,MACd,OAAO,kBAAC,GAAD,CAAW9P,MAAOA,EAAO8P,MAAOA,EAAO4D,WAAYvU,KAAKuU,iB,GApD/BjK,IAAM7I,WCwF3BuT,GA3FE,SAAC5P,GAChB,GAAIA,EAAM6P,SACR,IAAIC,GAAe,OAEfA,GAAe,EAqBrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa3V,EAAK+P,MAClB,kBAAC,IAAD,CAAM3J,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MACZmB,KAAK,OACL+E,YAAahI,EAAK4V,yBAClBzN,aAActC,EAAMkK,KAAKjO,MACzB+T,UAAU,EACV5N,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,WAIzC,kBAAC,IAAD,CACE+B,MAAO9H,EAAKsR,QACZrO,KAAK,WACL+E,YAAahI,EAAK8V,8BAClB/P,MAAOF,EAAMyL,QACbrJ,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE4K,QAAS7K,EAAEG,OAAOb,WAI3C,kBAAC,IAAD,CAAUoF,OAAK,EAACpF,OAAO,EAAOqF,SAAUuK,EAAcpP,KAAK,eAAezE,MAAO9B,EAAKgU,QACpFxN,SAAU,SAACC,GACT3D,QAAQC,IAAI0D,GACZZ,EAAMa,aAAa,CAAEgP,SAAUpK,KAAKC,MAAM9E,EAAEG,OAAOb,YAGvD,kBAAC,IAAD,CAAUoF,OAAK,EAACpF,OAAO,EAAMqF,QAASuK,EAAcpP,KAAK,eAAezE,MAAO9B,EAAK+T,OAClFvN,SAAU,SAACC,GACT3D,QAAQC,IAAI0D,GACZZ,EAAMa,aAAa,CAAEgP,SAAUpK,KAAKC,MAAM9E,EAAEG,OAAOb,YAKvD,kBAAC,IAAD,CAAUjE,MA1DhB,WACE,GAAI+D,EAAMhE,KAAM,CACd,IAAIkU,EAAQ,CAAC,0BAAM5U,UAAU,SAASnB,EAAK6B,KAA9B,OAIb,OAHAgE,EAAMhE,KAAKsC,KAAI,SAAC2C,GAAD,OACbiP,EAAMnT,KAAK,kBAAC,IAAD,CAAM2H,KAAMzD,EAAIhF,MAAOkU,YAAU,EAAC9U,QAAS,kBAAM2E,EAAMqG,UAAUpF,EAAI/B,WAE3EgR,GAoDYlU,KACjB,4BACE,uBAAGV,UAAU,yBAAyB0I,KAAK,IAAI9E,GAAG,gCAEhD,yBAAK5D,UAAU,cACb,yBAAKA,UAAU,oBAAoBnB,EAAKiW,SACxC,2BAAO9U,UAAU,WACjB,yBAAKA,UAAU,mBAQvB,kBAAC,IAAD,CAAO0F,QAAM,GACX,kBAAC,IAAD,CAAKC,IAAI,KAhEf,WACE,GAAIjB,EAAM6F,QACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvK,UAAU,WAAWgP,SAAO,EAAC5I,MAAM,MAAMkE,UAAW5F,EAAM6F,QAASxK,QAAS,kBAAM2E,EAAMqQ,WAAWrQ,EAAMkK,KAAKhL,MAAM/E,EAAKmW,SA6DhIC,GACD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQjV,UAAU,MAAM4F,MAAI,EAAC0E,UAAW5F,EAAM6F,QAASxK,QAAS2E,EAAMmB,QAAShH,EAAKgH,aC9EzEqP,G,YACnB,aAAe,IAAD,8BACZ,+CACKrP,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKmW,SAAW,EAAKA,SAASnW,KAAd,gBAChB,EAAKoO,YAAc,EAAKA,YAAYpO,KAAjB,gBACnB,EAAK+L,UAAY,EAAKA,UAAU/L,KAAf,gBAEjB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuP,KAAM,GACNjO,MAAO,KACPwP,QAAS,KACTiF,SAAU,IAAIzE,KACd0E,MAAO,IAAI1E,KACX2E,UAAY,OACZC,aAAc,OACdC,aAAa,EACb9U,KAAM,GACN6T,UAAU,GApBA,E,kFA0BZxM,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,iCAI/C,IAAMiI,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAIC,aAAahJ,OAAO,CACtBK,OAAQ,QACR4I,SAAU,gCACVC,UAAU,EACVC,cAAe,KACfC,aAAc,QACdC,MAAO,GACPC,qBAAsBnX,EAAKoQ,OAC3BgH,WAAW,EACXC,OAAQ,SAAU7G,EAAO8G,GACvB,IAAIT,EAAepW,KACf8W,EAAU,GACO,IAAjB/G,EAAM7N,QAKVkU,EAAaW,gBAEbZ,EAAIa,QAAQ,CACVxS,IAAK,kBACLyS,OAAQ,MACRC,SAAU,OAEVjV,KAAM,CACJ4R,EAAG9D,GAELoH,QAAS,SAAU7P,GAEjB,IAAK,IAAIvF,EAAI,EAAGA,EAAIuF,EAAKrF,KAAKC,OAAQH,IAChCuF,EAAKrF,KAAKF,GAAGV,MAAM+V,QAAQrH,IAAU,GAAG+G,EAAQ3U,KAAKmF,EAAKrF,KAAKF,IAGrEqU,EAAaiB,gBAEbR,EAAOC,OAtBTD,EAAOC,IA0BXpO,GAAI,CACF4O,OAAQ,SAAUhS,GAMhBjD,QAAQC,IAAIgD,GACZ2H,EAAKhN,SAAS,CAAEmB,KAAM6L,EAAKtN,MAAMyB,KAAKmW,OAAO,CAAElW,MAAOiE,EAAMA,EAAMpD,OAAS,GAAGb,MAAOiD,GAAIgB,EAAMA,EAAMpD,OAAS,GAAGoC,a,oCAavHtE,KAAK6V,a,+BAIL,IAAI5T,EAAO,CACRZ,MAAOrB,KAAKL,MAAM0B,MAAOiS,OAAQtT,KAAKL,MAAMsV,SAC5CpE,QAAS7Q,KAAKL,MAAMkR,QAASzP,KAAMpB,KAAKL,MAAMyB,MAEjD,GAAIpB,KAAKL,MAAM0B,OAASrB,KAAKL,MAAM0B,MAAMa,OAAS,EAChD0G,EAAsB,QAAS3G,EAAMjC,KAAKL,MAAMC,WAC3C,CACQI,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,gCAK3CnT,GACRtE,KAAKC,SAAS,CACZmB,KAAMpB,KAAKL,MAAMyB,KAAKuW,QAAO,SAAUtR,GACrC,OAAOA,EAAI/B,KAAOA,S,wCAMN6E,GAChBnJ,KAAKC,SAASkJ,K,oCAKdnJ,KAAKoL,UAAUC,SAAS,a,+BAKhB,IAAD,EAC0BrL,KAAKL,MAA9B2P,EADD,EACCA,KAAOlO,EADR,EACQA,KAAM6T,EADd,EACcA,SACrB,OACE,kBAAC,IAAD,CAAMpH,cAAe7N,KAAK8N,YAAYpO,KAAKM,MAAOuJ,SAAUhK,EAAKiK,KAAM2K,eAAe,GACpF,kBAAC,IAAD,CAAQ9S,MAAO9B,EAAKqY,UAAWrO,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAKqY,WAClB,kBAAC,GAAD,CACCtI,KAAMA,EAAM7D,UAAWzL,KAAKyL,UAAWrK,KAAMA,EAAM6T,SAAUA,EAC7D1O,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA/IxB/G,aCUnB8J,G,YACnB,aAAe,IAAD,gCACZ,+CACKhF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKoO,YAAc,EAAKA,YAAYpO,KAAjB,gBACnB,EAAKmW,SAAW,EAAKA,SAASnW,KAAd,gBAChB,EAAK+L,UAAY,EAAKA,UAAU/L,KAAf,gBAEjB,EAAKC,OAAL,GACEC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuP,KAAM,GACNhL,GAAI,KACJjD,MAAO,KACPwP,QAAS,KACTqF,aAAa,GANf,wBAOW,MAPX,qBAQQ,IARR,0BASY,GATZ,8BAUgB,GAVhB,GAVY,E,kFAyBZzN,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,aACnCyD,EAAWC,GAAG,mBAAoB1I,KAAK6X,kB,6CAIvCpP,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,aAC/CyD,EAAWE,eAAe,mBAAoB3I,KAAK6X,kB,oCAKnD7X,KAAK6V,a,iCAIL,IAAM5I,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAIC,aAAahJ,OAAO,CACtBK,OAAQ,QACR4I,SAAU,gCACVC,UAAU,EACVC,cAAe,KACfC,aAAc,QACdC,MAAO,GACPC,qBAAsBnX,EAAKoQ,OAC3BgH,WAAW,EACXC,OAAQ,SAAU7G,EAAO8G,GACvB,IAAIT,EAAepW,KACf8W,EAAU,GACO,IAAjB/G,EAAM7N,QAKVkU,EAAaW,gBAEbZ,EAAIa,QAAQ,CACVxS,IAAK,kBACLyS,OAAQ,MACRC,SAAU,OAEVjV,KAAM,CACJ4R,EAAG9D,GAELoH,QAAS,SAAU7P,GAEjB,IAAK,IAAIvF,EAAI,EAAGA,EAAIuF,EAAKrF,KAAKC,OAAQH,IAChCuF,EAAKrF,KAAKF,GAAGV,MAAM+V,QAAQrH,IAAU,GAAG+G,EAAQ3U,KAAKmF,EAAKrF,KAAKF,IAGrEqU,EAAaiB,gBAEbR,EAAOC,OAtBTD,EAAOC,IA0BXpO,GAAI,CACF4O,OAAQ,SAAUhS,GAMhB2H,EAAKhN,SAAS,CAAEmB,KAAM6L,EAAKtN,MAAMyB,KAAKmW,OAAO,CAAElW,MAAOiE,EAAMA,EAAMpD,OAAS,GAAGb,MAAOiD,GAAIgB,EAAMA,EAAMpD,OAAS,GAAGoC,a,+BAevH,IAAIrC,EAAO,CACTqC,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAOiS,OAAQtT,KAAKL,MAAMsV,SAC/DpE,QAAS7Q,KAAKL,MAAMkR,QAASzP,KAAMpB,KAAKL,MAAMyB,MAEhD,GAAIpB,KAAKL,MAAM0B,OAASrB,KAAKL,MAAM0B,MAAMa,OAAS,EAChD0G,EAAyB,QAAS3G,EAAMjC,KAAKL,MAAMC,WAC9C,CACQI,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,0CAMnDzX,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,QACFsF,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAgCtD,KAAKL,MAAMC,S,oCAK/D,IAAD,OACR0P,EAAO7G,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuG,GAAkB,SAAVxN,GACV9B,KAAKC,SAAS,CACZoB,MAAOiO,EAAKjO,MACZwP,QAASvB,EAAKuB,QACdvM,GAAIgL,EAAKhL,GACTgL,KAAMA,EACNwI,YAAaxI,EAAKyI,aAClB3W,KAAMkO,EAAK8D,SACX6B,SAAU3F,EAAK+D,YACd,kBAAM,EAAKwC,gB,gCAKRvR,GACRtE,KAAKC,SAAS,CACZmB,KAAMpB,KAAKL,MAAMyB,KAAKuW,QAAO,SAAUtR,GACrC,OAAOA,EAAI/B,KAAOA,S,wCAKN6E,GAChBnJ,KAAKC,SAASkJ,K,iCAGL7E,GAETsE,EAAyB,QADd,CAAEtE,GAAIA,GACuBtE,KAAKL,MAAMC,MAAOI,KAAKL,MAAM0D,Q,8EASrE,IAAIiM,EAAO7G,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuG,GAAkB,SAAVxN,GACV9B,KAAKoL,UAAUC,SAAS,UAAYiE,EAAKhL,M,+BAKnC,IAAD,EACqEtE,KAAKL,MAAzE2P,EADD,EACCA,KAAMwI,EADP,EACOA,YAAazW,EADpB,EACoBA,MAAOwP,EAD3B,EAC2BA,QAASoE,EADpC,EACoCA,SAAU7T,EAD9C,EAC8CA,KAAM4W,EADpD,EACoDA,aAC3D,OACE,kBAAC,IAAD,CAAMnK,cAAe7N,KAAK8N,YAAYpO,KAAKM,MAAOuJ,SAAUhK,EAAKiK,KAAM2K,eAAe,GACpF,kBAAC,IAAD,CAAQ9S,MAAO9B,EAAKqY,UAAWrO,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAKqY,WAClB,kBAAC,GAAD,CACEtI,KAAMA,EAAMjO,MAAOA,EAAO4T,SAAUA,EACpC7T,KAAMA,EAAMqK,UAAWzL,KAAKyL,UAAWuM,aAAcA,EACrDnH,QAASA,EAASiH,YAAaA,EAAavR,OAAQvG,KAAKuG,OACzD0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GA/LA/G,aCwC7BuM,GApDS,SAAC5I,GACvB,GAAIA,EAAM6I,aAAc,CAAC,IAYdC,EAAT,SAAgB9F,EAAM+F,GACpB,IAAIC,GAAW,EAIf,OAHID,EAAY/F,MAAQA,IACtBgG,GAAW,GAEL,4BAAQ9I,MAAO8C,EAAMgG,SAAUA,GAAW7O,EAAK6I,KAEhDiG,EAAT,SAAiBF,GACf,GAAI/I,EAAMkJ,cACR,OACE,yBAAK5N,UAAU,UACb,uBAAGA,UAAU,wCAAwC+N,eAAa,WAtB1E,SAAgBN,GACd,GAAyB,YAArBA,EAAY/F,MAAsBhD,EAAMsJ,SAC1C,OACE,4BAAQ5I,KAAK,OAAOC,SAAU,SAACC,GAAQZ,EAAMuJ,WAAWR,EAAYI,QAAQjK,GAAI0B,EAAEG,OAAOb,SACtF4I,EAAO,QAASC,GAChBD,EAAO,YAAaC,GACpBD,EAAO,WAAYC,IAiBjBS,CAAOT,GACR,yBAAKzN,UAAU,gBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cAAcnB,EAAK6I,MAClC,yBAAKwE,MAAM,mBAAmBrN,EAAK4O,EAAY/F,YAQ7D,OACE,kBAAC,IAAD,CAAM1H,UAAU,SACb0E,EAAM6I,aAAavK,KAAI,SAACyK,GAAD,OACtB,kBAAC,IAAD,CACE9M,MAAO8M,EAAYI,QAAQM,SAC3BjF,MAAOyE,EAAQF,IACf,yBAAK7E,KAAK,QAAQwF,IAAKX,EAAYI,QAAQQ,OAAQC,MAAM,KAAKC,OAAO,YAM7E,OAAQ,8BCEGI,GAjDK,SAACjK,GA2BjB,OAAIA,EAAMkL,KAEF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK/Q,EAAKgQ,WAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CACItB,aAAc7I,EAAMkL,KAAKrC,aAAcK,cAAelJ,EAAMkJ,cAC5DK,WAAYvJ,EAAMuJ,WAAYD,SAAUtJ,EAAMsJ,aAG1D,kBAAC,IAAD,OAMA,8BCODuB,GAtDE,SAAC7K,GAuCd,OAAIA,EAAMkL,KAGF,kBAAC,IAAD,CAAMd,eAAa,EAAC9O,UAAU,SAC1B,kBAAC,IAAD,CAAU+O,eAAa,EAAC/O,UAAU,QAC9BW,OA3CF8K,EA2Cc/G,EAAMkL,KAAKnE,OA1C/BA,EAEI,6BACI,yBAAKzL,UAAU,QACX,yBAAKA,UAAU,aAAa0L,MAAO,CAAEC,gBAAiBF,EAAOrF,QACzD,uBAAGpG,UAAU,2BAAb,eACA,uBAAGA,UAAU,iCAEjB,yBAAKA,UAAU,cAAcyL,EAAO9K,SAKxC,6BAAM9B,EAAK2Q,cAG3B,WACI,GAAI9K,EAAMsJ,SACN,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIgB,SAAO,EACPrI,MAAO9H,EAAKoQ,OACZC,eAAa,EACbpN,KAAK,OACL+E,YAAY,GACZsI,aAAW,EACXrI,QAAS,SAACxB,GACNZ,EAAM+K,aAAa,CAAEJ,MAAO/J,EAAEG,OAAOb,YAIjD,kBAAC,GAAD,CAAYnE,SAAUiE,EAAMjE,SAAU6O,UAAW5K,EAAM4K,aAWtDtB,KAKL,6BAlDZ,IAAcvC,GCsCH8E,GAxCC,SAAC7L,GACb,GAAIA,EAAMkL,KAAM,CAAC,IACJY,EAAT,SAAkBC,GACd,IAAIC,EAAO,IAAIC,KAAK,IAAIxR,OAAOyR,MAAMH,IACrC,OAAO,kBAAC,KAAD,CAAQC,KAAMA,EAAMG,SAAO,KAOtC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKhS,EAAKiS,QARhB,WACE,GAAIpM,EAAMsJ,SACN,OAAS,kBAAC,IAAD,CAAMtF,KAAM,sBAAwBhE,EAAMkL,KAAKhM,IAAI,uBAAG5D,UAAU,oBAAhE,IAAwFnB,EAAKqR,KAOjGlC,IAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM/E,WAAS,GACVvE,EAAMkL,KAAKkB,QAAQ9N,KAAI,SAAC+N,GAAD,OACpB,kBAAC,IAAD,CACI/Q,UAAU,aACVE,KAAM,YAAc6Q,EAAOnN,GAC3BjD,MAAOoQ,EAAOpQ,MACduI,MAAOsH,EAASO,EAAOC,eACvB5H,KAAM2H,EAAOE,eAM7B,kBAAC,IAAD,WAMR,OAAQ,8BCyEDsG,GA1GE,SAAC7S,GAoGhB,OAAIA,EAAMkL,MAAQlL,EAAM0N,OACd,kBAAC,IAAMzS,SAAP,KApGV,SAASyS,EAAOC,GACd,GAAgB,aAAZA,EAAwB,CAC1B,IAAIrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,cACxBtE,GAAW,GAGX,kBAAC,GAAD,CACE4B,KAAMlL,EAAMkL,KAAMH,aAAc/K,EAAM+K,aAAczB,SAAUA,EAC9DvN,SAAUiE,EAAMjE,SAAU6O,UAAW5K,EAAM4K,YAKjD,GAAgB,iBAAZ+C,EAA4B,CAC1BrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,kBACxBtE,GAAW,GAGX,kBAAC,GAAD,CACE4B,KAAMlL,EAAMkL,KAAMR,cAAe1K,EAAM0K,cACvCxB,cAAelJ,EAAMkJ,cAAea,WAAY/J,EAAM+J,WACtDrO,SAAUsE,EAAMtE,SAAU6N,WAAYvJ,EAAMuJ,WAC5CD,SAAUA,IAKhB,GAAgB,YAAZqE,EAAuB,CACrBrE,GAAW,EAIf,OAHItJ,EAAM0N,OAAOE,SAAS,aACxBtE,GAAW,GAEL,kBAAC,GAAD,CAAS4B,KAAMlL,EAAMkL,KAAM5B,SAAUA,IAG/C,MAAgB,aAAZqE,GACE3N,EAAM0N,OAAOE,SAAS,YAChB,kBAAC,GAAD,CAAa5P,MAAOgC,EAAMkL,KAAM/J,OAAQnB,EAAM6N,cAAehN,aAAcb,EAAMa,eAI7E,SAAZ8M,GACE3N,EAAM0N,OAAOE,SAAS,QAChB,kBAAC,IAAD,CAAM5J,KAAM,UAAYhE,EAAMkL,KAAKhM,GAAK,SAAS,uBAAG5D,UAAU,oBAK1D,SAAZqS,GACE3N,EAAM0N,OAAOE,SAAS,QAEtB,kBAAC,IAAM3S,SAAP,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2O,MAAM,MAAMkE,YAAY,MAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACG9N,EAAMkL,KAAKjP,MACXyR,EAAO,SAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMzK,eAAA,GACJ,kBAAC,IAAD,CAAU3H,UAAU,QAAQW,MAAO9B,EAAK+P,KAAO,KAAOlK,EAAMkL,KAAKhB,KAAKjO,MAAO+H,KAAM,UAAYhE,EAAMkL,KAAKhB,KAAKhL,KAC/G,kBAAC,IAAD,CAAU5D,UAAU,QAAQW,MAAO9B,EAAK2Y,WAAa,KAAO9S,EAAMkL,KAAK6H,eACvE,kBAAC,IAAD,CAAUzX,UAAU,QAAQW,MAAO9B,EAAKuW,SAAW,KAAO1Q,EAAMkL,KAAK8H,kBAErE,kBAAC,IAAD,CAAU1X,UAAU,QAAQW,MAAM,MAEpC,0BAAMX,UAAU,SAAS0E,EAAMkL,KAAKO,UAGtC,kBAAC,IAAD,KACGiC,EAAO,eAKd,kBAAC,IAAD,CAAK9D,MAAM,MAAMkE,YAAY,MAC1BJ,EAAO,kBAIZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9D,MAAM,MAAMkE,YAAY,OAC1BJ,EAAO,aAGXA,EAAO,YAER,kBAAC,GAAD,CAAaV,SAAUhN,EAAMgN,SAAUG,cAAenN,EAAMmN,cAAeI,SAAUvN,EAAMuN,iBAxCjG,EAkDyBG,CAAO,SAExB,MChGSvK,G,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK2Y,WAAa,EAAKA,WAAW3Y,KAAhB,gBAClB,EAAKoI,WAAa,EAAKA,WAAWpI,KAAhB,gBAClB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBACrB,EAAKoQ,cAAgB,EAAKA,cAAcpQ,KAAnB,gBACrB,EAAKyP,WAAa,EAAKA,WAAWzP,KAAhB,gBAClB,EAAK4O,cAAgB,EAAKA,cAAc5O,KAAnB,gBACrB,EAAKyQ,aAAe,EAAKA,aAAazQ,KAAlB,gBACpB,EAAKsQ,UAAY,EAAKA,UAAUtQ,KAAf,gBACjB,EAAK6S,cAAgB,EAAKA,cAAc7S,KAAnB,gBACrB,EAAKuT,cAAgB,EAAKA,cAAcvT,KAAnB,gBACrB,EAAKiT,SAAW,EAAKA,SAASjT,KAAd,gBAChB,EAAKiP,WAAa,EAAKA,WAAWjP,KAAhB,gBAGlB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuQ,KAAM,KACNhM,GAAI,KACJiB,MAAO,KACP+C,cAAe,KACfpC,QAAS,KACTuB,aAAc,GACdE,cAAc,EACdK,QAAS,KACT+H,MAAO,KACPjP,SAAU,GACVK,SAAU,GACV8Q,eAAgB,GAChBa,OAAQ,KACRV,SAAU,MAnCA,E,kFAwCZ3J,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAIvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD8D,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAgCtD,KAAKL,MAAMC,OAC1EgJ,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,oCAI3D,IAAI0Q,EAAO7H,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuH,GAAkB,SAAVxO,GACV9B,KAAKC,SAAS,CACZqQ,KAAMA,EACNhM,GAAIgM,EAAKhM,GACTgE,cAAegI,EAAK/K,MACpByC,QAASsI,EAAKtI,QACdoK,SAAU9B,EAAKoD,aACfZ,OAAQxC,EAAKqD,cAGjBtR,QAAQC,IAAIgO,K,gCAKZ,IAAI1O,EAAO6G,EAAWtF,UAClBrB,EAAQ2G,EAAWM,WACnBnH,GAAkB,SAAVE,GACV9B,KAAKC,SAAS,CACZsF,MAAO3D,IAGPA,GAAkB,YAAVE,GACV9B,KAAKC,SAAS,CACZa,SAAUc,IAGVA,GAAkB,WAAVE,GACV9B,KAAKC,SAAS,CACZkB,SAAUS,M,+BAOdgH,EAAsB,oBADX,CAAE0P,QAAStY,KAAKL,MAAM2E,GAAI4B,QAASlG,KAAKL,MAAMuG,SACRlG,KAAKL,MAAMC,S,oCAGhDuJ,GAAK,IAAD,OAChBnJ,KAAKC,SAAS,CAAEa,SAAU,KAC1Bd,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,kBAAmB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,a,mCAI5D5G,GAAK,IAAD,OACfnJ,KAAKC,SAAS,CAAEkB,SAAU,KAC1BnB,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,kBAAmB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,a,iCAI9D+D,GAETlL,EAAsB,qBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYD,GACM9T,KAAKL,MAAMC,S,gCAGrDoU,GAERpL,EAAsB,eADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIkI,UAAWwH,GACChU,KAAKL,MAAMC,S,oCAG3CkU,GAEZlL,EAAyB,qBADd,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYD,GACS9T,KAAKL,MAAMC,S,mCAKhEgJ,EAAsB,kBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAI2E,cAAejJ,KAAKL,MAAM8H,aAAcyB,cAAelJ,KAAKL,MAAMgI,cACnD3H,KAAKL,MAAMC,S,iCAGjDmU,EAAY3L,GAErBQ,EAAsB,oBADX,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIyP,WAAYA,EAAY3L,KAAMA,GACbpI,KAAKL,MAAMC,S,iCAIlD,IAAD,OACTI,KAAKC,SAAS,CAAEoD,KAAMrD,KAAKL,MAAM0D,KAAO,IAAK,WAC3CuF,EAAsB,QAAS,EAAKC,SAASvF,OAAd,OAAgC,EAAK3D,MAAMC,MAAO,EAAKD,MAAM0D,W,sCAO9FuF,EAAsB,WADX,CAAEqL,iBAAkB,OAAQC,eAAgBlU,KAAKL,MAAM2E,GAAIqN,QAAS3R,KAAKL,MAAMsS,gBAClDjS,KAAKL,MAAMC,S,oCAGvC0E,GAEZsE,EAAyB,WADd,CAAEtE,GAAIA,GAC0BtE,KAAKL,MAAMC,MAAOI,KAAKL,MAAM0D,Q,wCAGxD8F,GAChBnJ,KAAKC,SAASkJ,K,4BAId,GAAInJ,KAAKL,MAAM2Q,KACb,OACE,kBAAC,IAAD,CAAKlH,KAAM,UAAYpJ,KAAKL,MAAM2Q,KAAKhM,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACjH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,iCAMvChB,GACT0C,EAAyB,oBAAqB,CAAE1C,QAASA,EAASoS,QAAStY,KAAKL,MAAM2E,IAAMtE,KAAKL,MAAMC,S,oCAG3FyB,GACZuH,EAAyB,kBAAmB,CAAEtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOA,GAASrB,KAAKL,MAAMC,S,+BAGpF,IAAD,EAC+FI,KAAKL,MAAnG2Q,EADD,EACCA,KAAM/K,EADP,EACOA,MAAO+C,EADd,EACcA,cAAeN,EAD7B,EAC6BA,QAASlH,EADtC,EACsCA,SAAUK,EADhD,EACgDA,SAAUiR,EAD1D,EAC0DA,SAAUH,EADpE,EACoEA,eAAgBa,EADpF,EACoFA,OAC3F,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzR,MAAO9B,EAAKoR,MAAOwD,eAAe,EAAM5K,SAAUhK,EAAKiK,OAC/D,kBAAC,IAAD,MACCxJ,KAAKyJ,MACN,kBAAC,GAAD,CACE6G,KAAMA,EAAM/K,MAAOA,EAAOyC,QAASA,EAASlH,SAAUA,EAAUK,SAAUA,EAC1EmN,cAAetO,KAAKsO,cAAea,WAAYnP,KAAKmP,WACpDW,cAAe9P,KAAK8P,cAAe7H,cAAejI,KAAKiI,cACvDK,cAAeA,EAAeR,WAAY9H,KAAK8H,WAC/CuQ,WAAYrY,KAAKqY,WAAY9R,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,kBACrE2H,aAAcnQ,KAAKmQ,aAAcH,UAAWhQ,KAAKgQ,UACjDiD,cAAejT,KAAKiT,cAAeV,cAAevS,KAAKuS,cACvDN,eAAgBA,EAAgBG,SAAUA,EAAUO,SAAU3S,KAAK2S,SACnEhE,WAAY3O,KAAK2O,WAAYmE,OAAQA,S,GArMXrR,aCQrBkT,GAnBE,SAACvP,GAChB,SAAS/D,EAAM8P,GACb,IAAIC,EAAO,IAAIC,KAAK,IAAIxR,OAAOyR,MAAMH,IACrC,OAAO,kBAAC,KAAD,CAAQC,KAAMA,EAAMG,SAAO,IAEpC,OAAInM,EAAMuL,OACRtO,QAAQC,IAAI8C,EAAMuL,OAGhB,kBAAC,IAAD,KACGvL,EAAMuL,MAAMjN,KAAI,SAAC4M,GAAD,OACjB,kBAAC,IAAD,CAAUgE,OAAQhE,EAAKjP,MAAOA,MAAOA,EAAMiP,EAAKiI,eAAgB3X,KAAM,UAAU0P,EAAKhM,UAKjF,8BCNGkU,GAdG,SAACpT,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKoR,MAAOpH,SAAUhK,EAAKiK,OAE1C,kBAAC,IAAD,KAAajK,EAAKqC,MAClB,kBAAC,IAAD,CAAKwH,KAAK,aAAajD,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACnF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,GAAD,CAAUyJ,MAAOvL,EAAMuL,UCNRpI,G,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnC4Q,MAAO,MALG,E,kFASZlI,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QACpET,EAAkB,QAAS5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,gCAI3D,IAAI+Q,EAAQlI,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnB4H,GAAmB,SAAV7O,GACX9B,KAAKC,SAAS,CACZ0Q,MAAOA,M,+BAKH,IACDA,EAAS3Q,KAAKL,MAAdgR,MACP,OAAO,kBAAC,GAAD,CAAWA,MAAOA,Q,GAvCOrG,IAAM7I,WCuF3BgX,GA1FE,SAACrT,GAChB,GAAIA,EAAMsT,kBAKV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAanZ,EAAK+Q,MAClB,kBAAC,IAAD,CAAM3K,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MACZmB,KAAK,OACL+E,YAAahI,EAAK4V,yBAClBzN,aAActC,EAAMkL,KAAKjP,MACzB+T,UAAU,EACV5N,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,WAIzC,kBAAC,IAAD,CACE+B,MAAO9H,EAAKsR,QACZrO,KAAK,WACL+E,YAAahI,EAAK8V,8BAClB/P,MAAOF,EAAMuM,QACbnK,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE4K,QAAS7K,EAAEG,OAAOb,WAK3C,4BACE,yBAAKsH,MAAM,2BACT,yBAAKA,MAAM,cACT,yBAAKA,MAAM,yBAAyBrN,EAAK2Y,YACzC,yBAAKtL,MAAM,mBACT,2BAAOpK,KAAK,OAAO+E,YAAahI,EAAKoZ,cAAe7L,SAAS,WAAWxI,GAAG,uBAMnF,4BACE,yBAAKsI,MAAM,2BACT,yBAAKA,MAAM,cACT,yBAAKA,MAAM,yBAAyBrN,EAAKqZ,YACzC,yBAAKhM,MAAM,mBACT,2BAAOpK,KAAK,OAAO+E,YAAahI,EAAKsZ,cAAevT,MAAOF,EAAM4Q,UAAWlJ,SAAS,WAAWxI,GAAG,0BAK3G,4BACE,yBAAKsI,MAAM,6BAIb,4BACE,yBAAKA,MAAM,2BACT,yBAAKA,MAAM,cACT,yBAAKA,MAAM,yBAAyBrN,EAAKuW,UACzC,yBAAKlJ,MAAM,mBACT,2BAAOpK,KAAK,OAAO+E,YAAahI,EAAKoZ,cAAe7L,SAAS,WAAWxI,GAAG,0BAMnF,4BACE,yBAAKsI,MAAM,2BACT,yBAAKA,MAAM,cACT,yBAAKA,MAAM,yBAAyBrN,EAAKuZ,eACzC,yBAAKlM,MAAM,mBACT,2BAAOpK,KAAK,OAAO+E,YAAahI,EAAKsZ,cAAevT,MAAOF,EAAM6Q,aAAcnJ,SAAS,WAAWxI,GAAG,8BAOhH,kBAAC,IAAD,CAAO8B,QAAM,GACX,kBAAC,IAAD,CAAKC,IAAI,KACP,kBAAC,IAAD,CAAQ3F,UAAU,MAAM4F,MAAI,EAAC0E,UAAW5F,EAAM6F,QAASxK,QAAS2E,EAAMmB,QAAShH,EAAKgH,YC9EzEwS,G,YACnB,aAAe,IAAD,8BACZ,+CACKxS,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKsZ,aAAe,EAAKA,aAAatZ,KAAlB,gBACpB,EAAKoO,YAAc,EAAKA,YAAYpO,KAAjB,gBAEnB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuQ,KAAM,GACNjP,MAAO,KACPwP,QAAS,KACTiF,SAAU,IAAIzE,KACd0E,MAAO,IAAI1E,KACX2E,UAAY,OACZC,aAAc,OACdyC,aAAa,GAjBH,E,kFAuBZjQ,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,iFAQ/ChF,KAAKgZ,eACLhZ,KAAKiZ,a,iCAIO,IAAI5H,KAAhB,IACMpE,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAI+C,OAAO9L,OAAO,CAChBC,QAAS,qBACP8L,cAAc,EACdzQ,GAAI,CACFiF,OAAQ,SAAUuL,GAChBjM,EAAKhN,SAAS,CAAE+V,UAAWkD,EAAO5T,MAAM,GAAG,IAAI4T,EAAO5T,MAAM,OAGhE8T,KAAM,CACJ,CACEC,OAAS,cAAeC,MAAM,MAEhC,CACEC,UAAW,OACXF,OAAS,gEAAiEC,MAAM,SAKxFnD,EAAI+C,OAAO9L,OAAO,CAChBC,QAAS,wBACP8L,cAAc,EAAazQ,GAAI,CAC7BiF,OAAQ,SAAUuL,GAChBjM,EAAKhN,SAAS,CAAEgW,aAAciD,EAAO5T,MAAM,GAAG,IAAI4T,EAAO5T,MAAM,OAGnE8T,KAAM,CACJ,CACEC,OAAS,cAAeC,MAAM,MAEhC,CACEC,UAAW,OACXF,OAAS,gEAAiEC,MAAM,W,qCAQxF,IAAMrM,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAIqD,SAASpM,OAAO,CAClBC,QAAS,kBACT/H,MAAO,CAAC,IAAI+L,MACZoI,eAAe,EACfC,SAAU,EACVC,YAAa,CAAC,EAAG,GACjBC,WAAY,CAAC,6CAAW,mDAAY,iCAAS,qBAAO,iCAAS,uCAAU,qBAAO,2BAAQ,qBAAO,eAAM,2BAAQ,kCAC3GC,SAAU,CAAC,uCAAU,uCAAU,wCAAW,mDAAY,mDAAY,2BAAQ,4BAC1EC,cAAe,CAAC,eAAM,eAAM,gBAAO,2BAAQ,2BAAQ,2BAAQ,4BAC3DpR,GAAI,CACFiF,OAAQ,SAAUC,GAChBvL,QAAQC,IAAIsL,EAAEtI,MAAM,GAAGyU,GACvB9M,EAAKhN,SAAS,CAAE8V,MAAOnI,EAAEtI,MAAM,GAAGyU,QAKxC5D,EAAIqD,SAASpM,OAAO,CAClBC,QAAS,qBACToM,eAAe,EACfnU,MAAO,CAAC,IAAI+L,MACZqI,SAAU,EACVC,YAAa,CAAC,EAAG,GACjBC,WAAY,CAAC,6CAAW,mDAAY,iCAAS,qBAAO,iCAAS,uCAAU,qBAAO,2BAAQ,qBAAO,eAAM,2BAAQ,kCAC3GC,SAAU,CAAC,uCAAU,uCAAU,wCAAW,mDAAY,mDAAY,2BAAQ,4BAC1EC,cAAe,CAAC,eAAM,eAAM,gBAAO,2BAAQ,2BAAQ,2BAAQ,4BAC3DpR,GAAI,CACFiF,OAAQ,SAAUC,GAChBX,EAAKhN,SAAS,CAAE6V,SAAUlI,EAAEtI,MAAM,GAAGyU,U,+BAQ3C,IAAI9X,EAAO,CACTZ,MAAOrB,KAAKL,MAAM0B,MAAOwP,QAAS7Q,KAAKL,MAAMkR,QAC7CkF,MAAO/V,KAAKL,MAAMoW,MAAO6C,WAAY5Y,KAAKL,MAAMqW,UAChDF,SAAU9V,KAAKL,MAAMmW,SAAUgD,cAAe9Y,KAAKL,MAAMsW,aACzDrC,QAAS5T,KAAK6I,SAASvF,OAAd,QAEX,GAAItD,KAAKL,MAAM0B,OAASrB,KAAKL,MAAM0B,MAAMa,OAAS,EAChD0G,EAAsB,QAAS3G,EAAMjC,KAAKL,MAAMC,WAC3C,CACQI,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,wCAMnCtO,GAChBnJ,KAAKC,SAASkJ,K,oCAId,IAAImH,EAAO7H,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuH,GAAkB,SAAVxO,EACV9B,KAAKoL,UAAUC,SAAS,UAAUiF,EAAKhM,IAEvCtE,KAAKoL,UAAUC,SAAS,a,+BAOlB,IACAiF,EAAStQ,KAAKL,MAAd2Q,KACR,OACE,kBAAC,IAAD,CAAMzC,cAAe7N,KAAK8N,YAAYpO,KAAKM,OACzC,kBAAC,IAAD,CAAQqB,MAAO9B,EAAKya,UAAWzQ,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAKya,WAClB,kBAAC,GAAD,CAAU1J,KAAMA,EAAM/J,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GAnK7C/G,aCUnB8J,G,YACnB,aAAe,IAAD,8BACZ,+CACKhF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKuZ,SAAW,EAAKA,SAASvZ,KAAd,gBAChB,EAAKsZ,aAAe,EAAKA,aAAatZ,KAAlB,gBACpB,EAAKoO,YAAc,EAAKA,YAAYpO,KAAjB,gBAGnB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuQ,KAAM,GACNhM,GAAI,KACJjD,MAAO,KACPwP,QAAS,KACTiF,SAAU,IAAIzE,KACd0E,MAAO,IAAI1E,KACX2E,UAAW,OACXC,aAAc,OACdyC,aAAa,GArBH,E,kFA0BZjQ,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,e,oCAK/ChF,KAAKiZ,a,iCAIO,IAAI5H,KAAhB,IACMpE,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAI+C,OAAO9L,OAAO,CAChBC,QAAS,qBACT8L,cAAc,EACdzQ,GAAI,CACFiF,OAAQ,SAAUuL,GAChBjM,EAAKhN,SAAS,CAAE+V,UAAWkD,EAAO5T,MAAM,GAAK,IAAM4T,EAAO5T,MAAM,OAGpE8T,KAAM,CACJ,CACEC,OAAS,cAAeC,MAAM,MAEhC,CACEC,UAAW,OACXF,OAAS,gEAAiEC,MAAM,SAKtFnD,EAAI+C,OAAO9L,OAAO,CAChBC,QAAS,wBACT8L,cAAc,EAAMzQ,GAAI,CACtBiF,OAAQ,SAAUuL,GAChBjM,EAAKhN,SAAS,CAAEgW,aAAciD,EAAO5T,MAAM,GAAK,IAAM4T,EAAO5T,MAAM,OAGvE8T,KAAM,CACJ,CACEC,OAAS,cAAeC,MAAM,MAEhC,CACEC,UAAW,OACXF,OAAS,gEAAiEC,MAAM,W,qCAQtF,IAAMrM,EAAOjN,KACPmW,EAAMlJ,EAAKC,IAEjBiJ,EAAIqD,SAASpM,OAAO,CAClBC,QAAS,kBACT/H,MAAO,CAACtF,KAAKL,MAAMoW,OACnB0D,eAAe,EACfC,SAAU,EACVC,YAAa,CAAC,EAAG,GACjBC,WAAY,CAAC,6CAAW,mDAAY,iCAAS,qBAAO,iCAAS,uCAAU,qBAAO,2BAAQ,qBAAO,eAAM,2BAAQ,kCAC3GC,SAAU,CAAC,uCAAU,uCAAU,wCAAW,mDAAY,mDAAY,2BAAQ,4BAC1EC,cAAe,CAAC,eAAM,eAAM,gBAAO,2BAAQ,2BAAQ,2BAAQ,4BAC3DpR,GAAI,CACFiF,OAAQ,SAAUC,GAChBX,EAAKhN,SAAS,CAAE8V,MAAOnI,EAAEtI,MAAM,GAAGyU,QAKxC5D,EAAIqD,SAASpM,OAAO,CAClBC,QAAS,qBACToM,eAAe,EACfnU,MAAO,CAACtF,KAAKL,MAAMmW,UACnB4D,SAAU,EACVC,YAAa,CAAC,EAAG,GACjBC,WAAY,CAAC,6CAAW,mDAAY,iCAAS,qBAAO,iCAAS,uCAAU,qBAAO,2BAAQ,qBAAO,eAAM,2BAAQ,kCAC3GC,SAAU,CAAC,uCAAU,uCAAU,wCAAW,mDAAY,mDAAY,2BAAQ,4BAC1EC,cAAe,CAAC,eAAM,eAAM,gBAAO,2BAAQ,2BAAQ,2BAAQ,4BAC3DpR,GAAI,CACFiF,OAAQ,SAAUC,GAEhBX,EAAKhN,SAAS,CAAE6V,SAAUlI,EAAEtI,MAAM,GAAGyU,U,+BAU3C,IAAI9X,EAAO,CAAEqC,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAOwP,QAAS7Q,KAAKL,MAAMkR,QAASkF,MAAO/V,KAAKL,MAAMoW,MAAO6C,WAAY5Y,KAAKL,MAAMqW,UAAWF,SAAU9V,KAAKL,MAAMmW,SAAUgD,cAAe9Y,KAAKL,MAAMsW,cAC1M,GAAIjW,KAAKL,MAAM0B,OAASrB,KAAKL,MAAM0B,MAAMa,OAAS,EAChD0G,EAAyB,QAAS3G,EAAMjC,KAAKL,MAAMC,WAC9C,CACQI,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,0CAMnDzX,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,QACFsF,EAAsB,QAAS5I,KAAK6I,SAASvF,OAAd,OAAgCtD,KAAKL,MAAMC,S,oCAK/D,IAAD,OACR0Q,EAAO7H,EAAWK,aAClBhH,EAAQ2G,EAAWM,WACnBuH,GAAkB,SAAVxO,GACV9B,KAAKC,SAAS,CACZoB,MAAOiP,EAAKjP,MACZsQ,QAASrB,EAAKO,QACdvM,GAAIgM,EAAKhM,GACTgM,KAAMA,EACNyF,MAAO,IAAIlW,OAAOyR,MAAMhB,EAAK4H,YAC7BpC,SAAU,IAAIjW,OAAOyR,MAAMhB,EAAKiI,eAChCvC,UAAW1F,EAAKsI,WAChB3C,aAAc3F,EAAKwI,cACnBmB,YAAa3J,EAAK4J,eACjB,kBAAM,EAAKlB,oB,wCAIA7P,GAChBnJ,KAAKC,SAASkJ,K,oCAMdnJ,KAAKoL,UAAUC,SAAS,a,+BAIhB,IAAD,EACgErL,KAAKL,MAApE2Q,EADD,EACCA,KAAM2J,EADP,EACOA,YAAa5Y,EADpB,EACoBA,MAAOsQ,EAD3B,EAC2BA,QAASqE,EADpC,EACoCA,UAAWC,EAD/C,EAC+CA,aACtD,OACE,kBAAC,IAAD,CAAMpI,cAAe7N,KAAK8N,YAAYpO,KAAKM,OACzC,kBAAC,IAAD,CAAQqB,MAAO9B,EAAKya,UAAWzQ,SAAUhK,EAAKiK,OAC9C,kBAAC,IAAD,KAAajK,EAAKya,WAClB,kBAAC,GAAD,CAAU1J,KAAMA,EAAMjP,MAAOA,EAAO2U,UAAWA,EAAWC,aAAcA,EAActE,QAASA,EAASsI,YAAaA,EAAa1T,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMhF,aAAcjG,KAAKwI,yB,GAzLrJ/G,aCgB7B0Y,I,cA7BO,SAAC/U,GAEnB,OAAIA,EAAMgV,UACFhV,EAAMsJ,SAEF,kBAAC,IAAD,CAAKgE,OAAK,GACLtN,EAAMgV,UAAU1W,KAAI,SAAC2W,GAAD,OACjB,uBAAG5Z,QAAS,kBAAM2E,EAAMkV,gBAAgBD,KACpC,kBAAC,IAAD,CAAMvQ,KAAMuQ,EAAQE,aAAa,UAC7B,kBAAC,IAAD,CAAMjR,KAAK,QAAQrC,OAAO,mBAQ1C,kBAAC,IAAD,CAAKyL,OAAK,GACLtN,EAAMgV,UAAU1W,KAAI,SAAC2W,GAAD,OACjB,uBAAGjR,KAAM,cAAciR,GAAQ,kBAAC,IAAD,CAAMvQ,KAAMuQ,SAOnD,OC0EDG,GArGK,SAACpV,GACNkF,IAAMmQ,SACjB,iBAAM,CACJ,CACEpT,MAAO,WACPpF,KAAM,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAE7C,CACEoF,MAAO,WACPpF,KAAM,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,QAG/C,IAGWqI,IAAMmQ,SACjB,iBAAM,CACJ,CAAEC,SAAS,EAAMlY,KAAM,SAAU6G,SAAU,UAC3C,CAAE7G,KAAM,SAAU6G,SAAU,WAE9B,IAGF,OAAIjE,EAAMmJ,QAGN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjK,GAAG,QAAQ5D,UAAU,eAAeia,WAAS,GAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3L,MAAM,MAAMkE,YAAY,MAE3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKpE,IAAK1J,EAAMmJ,QAAQQ,OAAQC,MAAM,KAAKC,OAAO,OAClD,yBAAKvO,UAAU,gBAAgB0E,EAAMmJ,QAAQM,WAE/C,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAeuL,UAAWhV,EAAMmJ,QAAQ6L,eAK9C,kBAAC,IAAD,CAAKpL,MAAM,MAAMkE,YAAY,SAMjC,kBAAC,IAAD,CAAK5O,GAAG,QAAQ5D,UAAU,gBACxB,kBAAC,IAAD,CAAKgS,OAAK,GACR,kBAAC,IAAD,CAAK1D,MAAM,MAAMkE,YAAY,MAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,CAAaxS,UAAU,kBAQ/B,kBAAC,IAAD,CAAK4D,GAAG,QAAQ5D,UAAU,gBACxB,yBAAKA,UAAU,eAAf,4BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsO,MAAM,MAAMkE,YAAY,OAC3B,yBAAKxS,UAAU,2BACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBAAf,MAAuC,uCACvC,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,sBAAf,SACA,yBAAKA,UAAU,uBAAf,SACA,yBAAKA,UAAU,0BAAf,YACA,yBAAKA,UAAU,sBAAf,WAIN,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBAAf,MAAuC,uCACvC,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,sBAAf,SACA,yBAAKA,UAAU,uBAAf,SACA,yBAAKA,UAAU,0BAAf,YACA,yBAAKA,UAAU,sBAAf,gBAYV,MCrFS6H,G,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKkb,OAAS,EAAKA,OAAOlb,KAAZ,gBAEd,EAAKC,MAAQ,CACX4O,QAAS,KACTjK,GAAI,KACJuW,QAAS,KACT3Z,MAAO,KACP4Z,SAAU,MAVA,E,kFAeZrS,EAAWC,GAAG,eAAgB1I,KAAK8E,e,6CAInC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,e,0CAI/C8D,EAAsB,WAAY5I,KAAK6I,SAASvF,OAAd,a,oCAIlC,IAAIiL,EAAU9F,EAAWK,aACrBhH,EAAQ2G,EAAWM,WACnBwF,GAAqB,YAAVzM,GACb9B,KAAKC,SAAS,CACZsO,QAASA,EACTjK,GAAIiK,EAAQjK,GACZuW,QAAStM,EAAQsM,QACjB3Z,MAAOqN,EAAQrN,MACf4Z,SAAUvM,EAAQuM,a,4BAMtB,GAAI9a,KAAKL,MAAM4O,QACb,OACE,kBAAC,IAAD,CAAKnF,KAAM,aAAepJ,KAAKL,MAAM4O,QAAQjK,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACvH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,+BAOhD7E,QAAQC,IAAI,S,+BAGJ,IAAD,EACuCtC,KAAKL,MAA3C4O,EADD,EACCA,QAASsM,EADV,EACUA,QAAS3Z,EADnB,EACmBA,MAAO4Z,EAD1B,EAC0BA,SACjC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzZ,MAAO9B,EAAKuB,SAAUyI,SAAUhK,EAAKiK,OAC7C,kBAAC,IAAD,CAASuR,QAAM,EAACC,QAAM,GACpB,kBAAC,IAAD,CAAMC,QAAQ,SAASC,eAAa,GAAC,uBAAGxa,UAAU,+BAClD,kBAAC,IAAD,CAAMua,QAAQ,UAAS,uBAAGva,UAAU,6BACpC,kBAAC,IAAD,CAAMua,QAAQ,UAAS,uBAAGva,UAAU,yBAErCV,KAAKyJ,MACN,kBAAC,GAAD,CAAa8E,QAASA,EAASsM,QAASA,EAASC,SAAUA,EAAU5Z,MAAOA,EAAO0Z,OAAQ5a,KAAK4a,c,GAnEpEnZ,aCYrB0Z,GAvBK,SAAC/V,GAEnB,OAAIA,EAAMtE,SAEN,kBAAC,IAAD,CAAM6I,WAAS,GACZvE,EAAMtE,SAAS4C,KAAI,SAAC6K,GAAD,OAClB,kBAAC,IAAD,CACA5K,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,IACjCjG,KAAM,aAAe2N,EAAQjK,GAC7BjD,MAAOkN,EAAQM,SACfjF,MAAM,GACNC,SAAS,GACTC,KAAK,IAEC,yBAAKR,KAAK,QAAQwF,IAAKP,EAAQQ,OAAQC,MAAM,KAAKC,OAAO,YAM7D,8BCGGmM,GA3BM,SAAChW,GACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKuB,SAAUyI,SAAUhK,EAAKiK,MAC3C,kBAAC,IAAD,CAAM6R,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,UAEX,kBAAC,IAAD,CAAWC,OAAO,GAChB,kBAAC,IAAD,CACEzK,kBAAmBvR,EAAKwR,OACxBxJ,YAAahI,EAAKoQ,OAClB5J,SAAU,SAACC,GACTZ,EAAMuK,OAAO,CAAEI,MAAO/J,EAAEG,OAAOb,aAKvC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAK8D,KAAK,gBAAgBjD,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACtF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,GAAD,CAAapG,SAAUsE,EAAMtE,aClBdyH,G,YACnB,aAAe,IAAD,8BACZ,+CACKpF,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKiQ,OAAS,EAAKA,OAAOjQ,KAAZ,gBAEd,EAAKC,MAAQ,CACXmB,SAAU,KACViP,MAAO,MAPG,E,kFAWZtH,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAILpB,EAAkB,WAAY5I,KAAKL,MAAM0D,Q,6BAGpC8F,GAAK,IAAD,OACTnJ,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,kBAAmB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,a,gCAKvE,IAAIjP,EAAW2H,EAAWtF,UACtBrB,EAAQ2G,EAAWM,WACnBjI,GAAsB,YAAVgB,GACd9B,KAAKC,SAAS,CACZa,SAAUA,M,+BAKN,IACDA,EAAYd,KAAKL,MAAjBmB,SACP,OAAO,kBAAC,GAAD,CAAcA,SAAUA,EAAU6O,OAAQ3P,KAAK2P,a,GA7CtBrF,IAAM7I,W,qBCoF3B+Z,GAvFK,SAACpW,GAEnB,OADA/C,QAAQC,IAAI8C,GACRA,EAAMU,MAAQV,EAAMlE,MAEpB,kBAAC,IAAMb,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAad,EAAKkc,cAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM9V,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAKmc,UACZlZ,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAMU,KACpB0B,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAEH,KAAME,EAAEG,OAAOb,WAIxC,kBAAC,IAAD,CACE+B,MAAO9H,EAAKoc,SACZnZ,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAMuW,SACpBnU,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE0V,SAAU3V,EAAEG,OAAOb,aAKhD,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ5E,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAKgH,UAI9D,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAahH,EAAK6a,WAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAeA,UAAWhV,EAAMgV,UAAW1L,UAAU,EAAM4L,gBAAiBlV,EAAMkV,oBAItF,kBAAC,IAAD,CAAM3U,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAKqc,cACZpZ,KAAK,OACL+E,YAAY,MACZG,aAActC,EAAMiV,OACpB7S,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAEoU,OAAQrU,EAAEG,OAAOb,aAM9C,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ5E,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMyW,iBAAkBtc,EAAKgH,UAKvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKuI,IAAK1J,EAAM2J,OAAQC,MAAM,QAEhC,kBAAC,KAAD,CACE8M,UAAU,EACVC,WAAYxc,EAAKyc,aACjBjW,SAAUX,EAAM6W,OAChBC,gBAAgB,aAChBC,aAAc,CAAC,OAAQ,QAAS,QAChCC,YAAa,YAQb,MCpESC,G,YACnB,aAAe,IAAD,8BACZ,+CACK9V,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK4c,wBAA0B,EAAKA,wBAAwB5c,KAA7B,gBAC/B,EAAK6c,aAAe,EAAKA,aAAa7c,KAAlB,gBACpB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8c,aAAe,EAAKA,aAAa9c,KAAlB,gBACpB,EAAKuc,OAAS,EAAKA,OAAOvc,KAAZ,gBACd,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBAGf,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBAEf,EAAKC,MAAQ,CACX4O,QAAS,GACTrN,MAAO,KACPtB,MAAOC,OAAOC,aAAaC,QAAQ,SACnC0c,OAAQ,GACR3W,KAAM,KACN6V,SAAU,GACVe,SAAU,GACV3N,OAAQ,MAvBE,E,kFA6BZtG,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,mBAAoB1I,KAAK8E,aACvC2D,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,mBAAoB3I,KAAK8E,aACnD2D,EAAWE,eAAe,WAAY3I,KAAKmD,W,0CAI3CnD,KAAKgK,a,iCAKLpB,EAAkB,QAAS5I,KAAKL,MAAM0D,Q,6BAGjCsZ,GACLta,QAAQC,IAAIqa,EAAQ,IACpB/T,EAAqB,WAAY5I,KAAKL,MAAM2E,GAAIqY,EAAQ,GAAI3c,KAAKL,MAAMC,S,+BAMvEgJ,EAAyB,WADd,CAACtE,GAAItE,KAAKL,MAAM2E,GAAIwB,KAAM9F,KAAKL,MAAMmG,KAAM6V,SAAU3b,KAAKL,MAAMgc,UAChC3b,KAAKL,MAAMC,S,qCAKtDgJ,EAAsB,UADX,CAACgU,QAAS5c,KAAKL,MAAMkd,OAAQlL,QAAS3R,KAAKL,MAAM8c,QACrBzc,KAAKL,MAAMC,S,wCAIlCuJ,GAChBnJ,KAAKC,SAASkJ,K,8CAGQxF,EAAK2B,EAAOuX,GAClC,IAAIJ,EAASzc,KAAKL,MAAM8c,OACxB,GAAIA,EAAOva,OAAS,EAClB,IAAK,IAAIH,EAAI,EAAGA,EAAI0a,EAAOva,OAAQH,IACjC,GAAI0a,EAAO1a,GAAG+a,KAAOL,EAAO1a,GAAG+a,MAAQnZ,EAAK,CAC1C,IAAIoZ,EAAWvZ,OAAOwZ,OAAO,GAAIhd,KAAKL,OACtCod,EAASN,OAAO1a,GAAK,CAAE+a,IAAKnZ,EAAK2B,MAAOA,EAAOuX,OAAQA,GACvD7c,KAAKC,SAAS8c,QAEd/c,KAAKC,SAAS,CAAEwc,OAAQzc,KAAKL,MAAM8c,OAAOlF,OAAO,CAAEuF,IAAKnZ,EAAK2B,MAAOA,EAAQuX,OAAOA,WAIvF7c,KAAKC,SAAS,CAAEwc,OAAQzc,KAAKL,MAAM8c,OAAOlF,OAAO,CAAEuF,IAAKnZ,EAAK2B,MAAOA,EAAOuX,OAAOA,Q,oCAMpF7c,KAAKoL,UAAUC,SAAS,gB,oCAIxB,IAAIkD,EAAU9F,EAAWK,aACrBhH,EAAQ2G,EAAWM,WACnBwF,GAAqB,YAAVzM,GACb9B,KAAKC,SAAS,CACZiB,MAAOqN,EAAQrN,MACfqN,QAASA,M,mCAMF0O,GACXrU,EAAyB,UAAW,CAACqU,KAAMA,M,gCAI3C,IAAI/b,EAAQuH,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnB7H,GAAmB,SAAVY,GACX9B,KAAKC,SAAS,CACZiB,MAAOA,M,+BAOH,IAAD,EAC0ClB,KAAKL,MAAtCuB,GADT,EACAqN,QADA,EACSrN,OAAO4E,EADhB,EACgBA,KAAMiJ,EADtB,EACsBA,OAAQ4M,EAD9B,EAC8BA,SACrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQta,MAAO9B,EAAK2d,aAAc3T,SAAUhK,EAAKiK,OACjD,kBAAC,IAAD,KAAajK,EAAK2d,cAClB,kBAAC,GAAD,CAAapX,KAAMA,EAAMiJ,OAAQA,EAAQ4M,SAAUA,EAAUza,MAAOA,EAAO+a,OAAQjc,KAAKic,OAAQM,aAAcvc,KAAKuc,aAAcC,aAAcxc,KAAKwc,aAAcjW,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMqR,wBAAyBtc,KAAKsc,wBAAyBrW,aAAcjG,KAAKwI,yB,GAjI7O/G,aCTtB4a,G,YACnB,aAAe,IAAD,8BACZ,+CACK9V,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAK4c,wBAA0B,EAAKA,wBAAwB5c,KAA7B,gBAC/B,EAAK6c,aAAe,EAAKA,aAAa7c,KAAlB,gBACpB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8c,aAAe,EAAKA,aAAa9c,KAAlB,gBACpB,EAAKuc,OAAS,EAAKA,OAAOvc,KAAZ,gBACd,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKmc,gBAAkB,EAAKA,gBAAgBnc,KAArB,gBACvB,EAAK4a,gBAAkB,EAAKA,gBAAgB5a,KAArB,gBAKvB,EAAKC,MAAQ,CACXmG,KAAM,KACN6V,SAAU,KACVza,MAAO,KACP2b,OAAQ,KACRhC,QAAS,KACTT,UAAW,KACXC,OAAQ,KACRza,MAAOC,OAAOC,aAAaC,QAAQ,SACnC0c,OAAQ,GACRnY,GAAI,KACJoY,SAAU,GACV3N,OAAQ,MA7BE,E,kFAmCZtG,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,mBAAoB1I,KAAK8E,aACvC2D,EAAWC,GAAG,cAAe1I,KAAK8E,e,6CAIlC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,mBAAoB3I,KAAK8E,aACnD2D,EAAWE,eAAe,cAAe3I,KAAK8E,e,0CAI9C9E,KAAKgK,a,iCAIDhK,KAAK6I,SAASvF,OAAd,WACFsF,EAAsB,WAAY5I,KAAK6I,SAASvF,OAAd,a,6BAI/BqZ,GACLta,QAAQC,IAAIqa,EAAQ,IACpB/T,EAAqB,WAAY5I,KAAKL,MAAM2E,GAAIqY,EAAQ,GAAI3c,KAAKL,MAAMC,S,+BAMvEgJ,EAAyB,WADd,CAACtE,GAAItE,KAAKL,MAAM2E,GAAIwB,KAAM9F,KAAKL,MAAMmG,KAAM6V,SAAU3b,KAAKL,MAAMgc,UAChC3b,KAAKL,MAAMC,S,qCAKtDgJ,EAAsB,UADX,CAACgU,QAAS5c,KAAKL,MAAMkd,OAAQlL,QAAS3R,KAAKL,MAAM8c,QACrBzc,KAAKL,MAAMC,S,wCAIlD,IAAIqC,EAAO,CAACqC,GAAItE,KAAKL,MAAM2E,GAAI8V,UAAWpa,KAAKL,MAAM0a,QACrDzR,EAAsB,0BAA0B5I,KAAK6I,SAASvF,OAAd,UAAmCrB,EAAMjC,KAAKL,MAAMC,S,sCAGtFwa,GACd,IAAInY,EAAO,CAACqC,GAAItE,KAAKL,MAAM2E,GAAI8V,UAAWA,GAC1CxR,EAAsB,6BAA6B5I,KAAK6I,SAASvF,OAAd,UAAmCrB,EAAMjC,KAAKL,MAAMC,S,wCAIvFuJ,GAChBnJ,KAAKC,SAASkJ,K,8CAGQxF,EAAK2B,EAAOuX,GAClC,IAAIJ,EAASzc,KAAKL,MAAM8c,OACxB,GAAIA,EAAOva,OAAS,EAClB,IAAK,IAAIH,EAAI,EAAGA,EAAI0a,EAAOva,OAAQH,IACjC,GAAI0a,EAAO1a,GAAG+a,KAAOL,EAAO1a,GAAG+a,MAAQnZ,EAAK,CAC1C,IAAIoZ,EAAWvZ,OAAOwZ,OAAO,GAAIhd,KAAKL,OACtCod,EAASN,OAAO1a,GAAK,CAAE+a,IAAKnZ,EAAK2B,MAAOA,EAAOuX,OAAQA,GACvD7c,KAAKC,SAAS8c,QAEd/c,KAAKC,SAAS,CAAEwc,OAAQzc,KAAKL,MAAM8c,OAAOlF,OAAO,CAAEuF,IAAKnZ,EAAK2B,MAAOA,EAAQuX,OAAOA,WAIvF7c,KAAKC,SAAS,CAAEwc,OAAQzc,KAAKL,MAAM8c,OAAOlF,OAAO,CAAEuF,IAAKnZ,EAAK2B,MAAOA,EAAOuX,OAAOA,Q,oCAOpF7c,KAAKoL,UAAUC,SAAS,gB,oCAIxB,IAAIkD,EAAU9F,EAAWK,aACrBhH,EAAQ2G,EAAWM,WACnBwF,GAAqB,YAAVzM,GACb9B,KAAKC,SAAS,CACZqE,GAAIiK,EAAQjK,GACZpD,MAAOqN,EAAQrN,MACf4E,KAAMyI,EAAQzI,KACd6V,SAAWpN,EAAQoN,SACnB5M,OAAQR,EAAQQ,OAChBqL,UAAW7L,EAAQ6L,c,mCAMZ6C,GACXrU,EAAyB,UAAW,CAACqU,KAAMA,M,gCAI3C,IAAI/b,EAAQuH,EAAWtF,UACnBrB,EAAQ2G,EAAWM,WACnB7H,GAAmB,SAAVY,GACX9B,KAAKC,SAAS,CACZiB,MAAOA,M,+BAOH,IAAD,EACoDlB,KAAKL,MAAzDmG,EADA,EACAA,KAAM6V,EADN,EACMA,SAAU5M,EADhB,EACgBA,OAAO7N,EADvB,EACuBA,MAAgBkZ,GADvC,EAC8BS,QAD9B,EACuCT,WAC9C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/Y,MAAO9B,EAAK2d,aAAc3T,SAAUhK,EAAKiK,OACjD,kBAAC,IAAD,KAAajK,EAAK2d,cAClB,kBAAC,GAAD,CAAapX,KAAMA,EAAMiJ,OAAQA,EAAQ4M,SAAUA,EAAUza,MAAOA,EAAOkZ,UAAWA,EAAW6B,OAAQjc,KAAKic,OAAQM,aAAcvc,KAAKuc,aAAcC,aAAcxc,KAAKwc,aAAcjW,OAAQvG,KAAKuG,OAAQ0E,SAAS,EAAMqR,wBAAyBtc,KAAKsc,wBAAyBrW,aAAcjG,KAAKwI,kBAAmBqT,gBAAiB7b,KAAK6b,gBAAiBvB,gBAAiBta,KAAKsa,uB,GAvJnV7Y,a,2BCqE5B0b,GApEI,SAAC/X,GAElB,GADA/C,QAAQC,IAAI8C,GACRA,EAAMqM,QAAUrM,EAAMqM,OAAO2L,MAAO,CAAC,IACjCC,EAAeC,0BAAelY,EAAMqM,OAAO2L,OAC3CG,EAAcC,eAAYC,kBAAkBJ,GAclD,OACE,kBAAC,IAAMhd,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAIF,kBAAC,IAAD,CAAMgI,eAAA,GAnBLjD,EAAMqM,OAAOiM,SACN,kBAAC,IAAD,CAAUrc,MAAO+D,EAAMqM,OAAOiM,SAASrc,MAAO+H,KAAM,UAAUhE,EAAMqM,OAAOiM,SAASpZ,KAE3Fc,EAAMqM,OAAOkM,SACN,kBAAC,IAAD,CAAUtc,MAAO+D,EAAMqM,OAAOkM,SAAStc,MAAO+H,KAAM,UAAUhE,EAAMqM,OAAOkM,SAASrZ,UAD9F,GAsBE,kBAAC,IAAD,KAAa/E,EAAK8B,OAClB,kBAAC,IAAD,CAAMgH,eAAA,GACJ,kBAAC,IAAD,KAAWjD,EAAMqM,OAAOpQ,QAG1B,kBAAC,IAAD,KAAa9B,EAAKoS,SAClB,kBAAC,UAAD,CAAQ4L,YAAaA,EACnBK,QAAS,CAAEvY,QAAS,IACpBwY,UAAU,IAEZ,kBAAC,IAAD,CAAMxV,eAAA,GACN,kBAAC,IAAD,CAAUhH,MA5Bd,SAAkB8P,GAChB,IAAIC,EAAO,IAAIC,KAAK,IAAIxR,OAAOyR,MAAMH,IACrC,OAAO,kBAAC,KAAD,CAAQC,KAAMA,EAAMG,SAAO,IA0BfL,CAAS9L,EAAMqM,OAAOC,kBAGvC,kBAAC,IAAD,KAAanS,EAAKue,aAClB,kBAAC,IAAD,KACG1Y,EAAMqM,OAAOqM,YAAYpa,KAAI,SAACqa,GAAD,OAC5B,wBAAIrd,UAAU,IACZ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,gBAAgByF,OAAO,SAAUiD,KAAM2U,EAAWnd,MAC7D,uBAAGF,UAAU,4BAA4BmM,cAAY,SACpDkR,EAAWC,mBAW9B,OAAQ,MCzDSzV,G,YACnB,aAAe,IAAD,8BACZ,+CACKzD,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKue,YAAc,EAAKA,YAAYve,KAAjB,gBACnB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKuT,cAAgB,EAAKA,cAAcvT,KAAnB,gBACrB,EAAK6S,cAAgB,EAAKA,cAAc7S,KAAnB,gBACrB,EAAKiT,SAAW,EAAKA,SAASjT,KAAd,gBAKhB,EAAKC,MAAQ,CACX8R,OAAQ,KACRnN,GAAI,KACJjB,KAAM,EACN6a,gBAAiB,KACjBC,aAAa,EACblM,eAAgB,GAChBG,SAAU,KACVxS,MAAOC,OAAOC,aAAaC,QAAQ,UAvBzB,E,kFA6BZ0I,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,aACnCyD,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,mBAAoB1I,KAAK8E,e,6CAKvC2D,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,aAC/CyD,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,mBAAoB3I,KAAK8E,e,0CAInD9E,KAAKoe,GAAG,cAAc1V,GAAG,WAAW,SAAU4S,GAC5CA,EAAG9D,OAAOC,MAAM,sBAElB7O,EAAsB,UAAW5I,KAAK6I,SAASvF,OAAd,SAAkCtD,KAAKL,MAAMC,S,oCAI9E,IAAI6R,EAAShJ,EAAWK,aACpBhH,EAAQ2G,EAAWM,WACnB0I,GAAoB,WAAV3P,GACZ9B,KAAKC,SAAS,CACZwR,OAAQA,EACRnN,GAAImN,EAAOnN,GACX8N,SAAUX,EAAOW,WAGrB/P,QAAQC,IAAImP,K,uEAQZ,IAAIA,EAAShJ,EAAWK,aACpBhH,EAAQ2G,EAAWM,WACnB0I,GAAoB,WAAV3P,GACZ9B,KAAKC,SAAS,CACZwR,OAAQA,EACRW,SAAUX,EAAOW,SACjB/O,KAAM,M,iCAKA,IAAD,OACTrD,KAAKC,SAAS,CAAEoD,KAAMrD,KAAKL,MAAM0D,KAAO,IAAK,WAC3CuF,EAAsB,UAAW,EAAKC,SAASvF,OAAd,SAAkC,EAAK3D,MAAMC,MAAO,EAAKD,MAAM0D,W,4BAKlG,GAAIrD,KAAKL,MAAM8R,OACb,OACE,kBAAC,IAAD,CAAKrI,KAAM,YAAcpJ,KAAKL,MAAM8R,OAAOnN,GAAK,QAAS6B,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,QACrH,kBAAC,IAAD,CAAME,IAAI,UAAUC,OAAO,UAAUC,GAAG,kBACxC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,sB,wCAMhCiC,GAChBnJ,KAAKC,SAASkJ,K,kCAIJkV,EAAkBC,EAAoBC,GAA6D,IAAvCC,EAAsC,uDAAxB,KAAMC,EAAkB,uDAAN,KAClGxc,EAAO,CAAEoc,iBAAkBA,EAAkBC,mBAAoBA,EAAoBC,qBAAsBA,EAAsBC,YAAaA,EAAaC,UAAWA,GAC1K7V,EAAsB,eAAgB3G,EAAMjC,KAAKL,MAAMC,S,+BAKvDgJ,EAAsB,SADX,CAAE8V,UAAW1e,KAAKL,MAAM2E,GAAIqa,WAAY3e,KAAKL,MAAMue,iBACxBle,KAAKL,MAAMC,OACpCI,KACRkN,IAAI0R,MAAMC,MAAM,iB,sCAKrBjW,EAAsB,WADX,CAAE8V,UAAW1e,KAAKL,MAAM2E,GAAIqN,QAAS3R,KAAKL,MAAMsS,gBACnBjS,KAAKL,MAAMC,S,oCAGvC0E,GAEZsE,EAAyB,WADd,CAAEtE,GAAIA,GAC0BtE,KAAKL,MAAMC,MAAOI,KAAKL,MAAM0D,Q,+BAGhE,IAAD,EAC6CrD,KAAKL,MAAjD8R,EADD,EACCA,OAAqBqJ,GADtB,EACSqD,YADT,EACsBrD,UAAU1I,EADhC,EACgCA,SACvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/Q,MAAO9B,EAAKiS,UACpB,kBAAC,IAAD,MACCxR,KAAKyJ,MACN,kBAAC,GAAD,CAAYgI,OAAQA,EAAQW,SAAUA,EAAU0I,SAAUA,EAAU7H,cAAejT,KAAKiT,cAAeV,cAAevS,KAAKuS,cAAehM,OAAQvG,KAAKuG,OAAQ0X,YAAaje,KAAKie,YAAahY,aAAcjG,KAAKwI,kBAAmBmK,SAAU3S,KAAK2S,gB,GAnIvNlR,aCgCrBqd,GA/CI,SAAC1Z,GAClB,OAAIA,EAAMoM,SAAWpM,EAAMoM,QAAQtP,OAAS,EAExC,kBAAC,IAAM7B,SAAP,KACE,kBAAC,IAAD,CAAKqS,OAAK,GACPtN,EAAMoM,QAAQ9N,KAAI,SAAC+N,GAAD,OACjB,kBAAC,IAAD,CAAKzC,MAAM,MAAMkE,YAAY,KAAKvP,IAAK+C,IAAOC,IAAIC,UAAUC,OAAO,KACjE,kBAAC,IAAD,CAAMnG,UAAU,sBACd,kBAAC,IAAD,CAAYA,UAAU,aACtB,yBAAKA,UAAU,wBAAuB,kBAAC,IAAD,CAAMqe,QAAStN,EAAOlD,QAAQM,SAAUzF,KAAM,aAAeqI,EAAOlD,QAAQjK,IAAI,yBAAKwK,IAAK2C,EAAOlD,QAAQQ,OAAQE,OAAO,SAC5J,yBAAKvO,UAAU,uBACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAAMA,UAAU,aAAa0I,KAAM,aAAeqI,EAAOlD,QAAQjK,IAAKmN,EAAOlD,QAAQM,SAASmQ,UAAU,EAAG,MAE7G,kBAAC,IAAD,CAAMD,QAASxf,EAAKgB,KAAMG,UAAU,aAAa0I,KAAM,YAAcqI,EAAOnN,IAAKmN,EAAOpQ,MAAM2d,UAAU,EAAG,IAAM,OACnH,yBAAKte,UAAU,wBAIjB,kBAAC,IAAD,CAAaA,UAAU,yBACpB+Q,EAAOE,QAAQqN,UAAU,EAAG,KAAO,MACpC,yBAAKte,UAAU,sBACb,kBAAC,IAAD,CAAMA,UAAU,aAAa0I,KAAM,YAAcqI,EAAOnN,IACrD/E,EAAKgB,KACN,uBAAGG,UAAU,sCAQ3B,kBAAC,IAAD,CAAKgS,OAAK,GACR,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKhS,UAAU,gBACf,uBAAGA,UAAU,aAAaD,QAAS,kBAAM2E,EAAMuN,aAC5CpT,EAAKqT,OAGR,kBAAC,IAAD,QAKE,8BCIGqM,GAjDK,SAAC7Z,GACnB,OACE,kBAAC,IAAD,CAAM8Z,aAAa,GACjB,kBAAC,IAAD,CAAQ7d,MAAO9B,EAAKiS,SAClB,kBAAC,IAAD,CAAM6J,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,UAEX,kBAAC,IAAD,CAAWC,OAAO,GAChB,kBAAC,IAAD,CACEzK,kBAAmBvR,EAAKwR,OACxBxJ,YAAahI,EAAKoQ,OAClB5J,SAAU,SAACC,GACTZ,EAAMuK,OAAO,CAAEI,MAAO/J,EAAEG,OAAOb,aAKvC,kBAAC,IAAD,CAASyV,QAAM,EAACC,QAAM,GAClB,kBAAC,IAAD,CAAMC,QAAQ,SAASC,eAAa,GAAC,uBAAGxa,UAAU,wBAClD,kBAAC,IAAD,CAAMua,QAAQ,UAAS,uBAAGva,UAAU,wBACpC,kBAAC,IAAD,CAAMua,QAAQ,UAAS,uBAAGva,UAAU,2BAExC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAK0I,KAAK,eAAejD,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,cACrF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,oBAE5C,kBAAC,IAAD,CAAMiY,WAAS,GACb,kBAAC,IAAD,CAAK7a,GAAG,QAAQ5D,UAAU,eAAeia,WAAS,GAChD,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYnJ,QAASpM,EAAMoM,QAASyM,YAAa7Y,EAAM6Y,YAAatL,SAAUvN,EAAMuN,aAIxF,kBAAC,IAAD,CAAKrO,GAAG,QAAQ5D,UAAU,gBACxB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAY8Q,QAASpM,EAAMoM,QAASyM,YAAa7Y,EAAM6Y,YAAatL,SAAUvN,EAAMuN,aAIxF,kBAAC,IAAD,CAAKrO,GAAG,QAAQ5D,UAAU,gBACxB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAY8Q,QAASpM,EAAMoM,QAASyM,YAAa7Y,EAAM6Y,YAAatL,SAAUvN,EAAMuN,gBC9CzF,SAASyM,KAGZ,GAFF/c,QAAQC,IAAI,yBACEzC,OAAOC,aAAaC,QAAQ,SAEtC,OAAO,EAEPC,KAAKoL,UAAUC,SAAS,W,ICCTgU,G,YACnB,aAAe,IAAD,8BACZ,+CACKlc,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAK0f,SAAWA,GAAS1f,KAAT,gBAChB,EAAKue,YAAc,EAAKA,YAAYve,KAAjB,gBACnB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKiQ,OAAS,EAAKA,OAAOjQ,KAAZ,gBACd,EAAKiT,SAAW,EAAKA,SAASjT,KAAd,gBAGhB,EAAKC,MAAQ,CACXC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyR,QAAS,GACTzB,MAAO,KACP1M,KAAM,GAdI,E,kFAkBZoF,EAAWC,GAAG,WAAY1I,KAAKmD,SAC/BsF,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,WAAY3I,KAAKmD,SAC3CsF,EAAWE,eAAe,eAAgB3I,KAAKgF,e,0CAI/ChF,KAAKof,WACLpf,KAAKgK,a,iCAILpB,EAAkB,UAAW5I,KAAKL,MAAM0D,KAAM,GAAIrD,KAAKL,MAAMC,S,6BAGxDuJ,GAAM,IAAD,OACVnJ,KAAKC,SAAS,CAAEuR,QAAS,GAAInO,KAAM,IACnCrD,KAAKC,SAASkJ,GAAK,WACjBP,EAAkB,iBAAkB,EAAKjJ,MAAM0D,KAAM,CAAEwQ,EAAG,EAAKlU,MAAMoQ,a,oCAMvE,IAAI0B,EAAShJ,EAAWK,aACpB2I,GACFzR,KAAKC,SAAS,CAAEuR,QAASxR,KAAKL,MAAM6R,QAAQ9N,KAAI,SAAA4b,GAAE,OAAKA,EAAGhb,KAAOmN,EAAOnN,GAAKd,OAAOwZ,OAAO,GAAIsC,EAAI7N,GAAU6N,S,iCAKrG,IAAD,OACLtf,KAAKL,MAAMoQ,OAAS/P,KAAKL,MAAMoQ,MAAM7N,OAAS,EAChDlC,KAAKC,SAAS,CAAEoD,KAAMrD,KAAKL,MAAM0D,KAAO,IAAK,WAC3CuF,EAAkB,iBAAkB,EAAKjJ,MAAM0D,KAAM,CAACwQ,EAAG,EAAKlU,MAAMoQ,OAAS,EAAKpQ,MAAMC,UAG1FI,KAAKC,SAAS,CAAEoD,KAAMrD,KAAKL,MAAM0D,KAAO,IAAK,WAC3CuF,EAAkB,UAAW,EAAKjJ,MAAM0D,KAAM,GAAI,EAAK1D,MAAMC,Y,gCAMjE,IAAI4R,EAAU/I,EAAWtF,UACrBrB,EAAQ2G,EAAWM,WACnByI,EAAQtP,OAAS,GAAe,WAAVJ,GACxB9B,KAAKC,SAAS,CACZuR,QAASxR,KAAKL,MAAM6R,QAAQ+F,OAAO/F,O,kCAK7B6M,EAAkBC,EAAoBC,GAA6D,IAAvCC,EAAsC,uDAAxB,KAAMC,EAAkB,uDAAN,KAClGxc,EAAO,CAAEoc,iBAAkBA,EAAkBC,mBAAoBA,EAAoBC,qBAAsBA,EAAsBC,YAAaA,EAAaC,UAAWA,GAC1K7V,EAAsB,eAAgB3G,EAAMjC,KAAKL,MAAMC,S,+BAG/C,IACA4R,EAAYxR,KAAKL,MAAjB6R,QACR,OAAQ,kBAAC,GAAD,CAAayM,YAAaje,KAAKie,YAAatL,SAAU3S,KAAK2S,SAAUnB,QAASA,EAAS7B,OAAQ3P,KAAK2P,a,GAlF5ErF,IAAM7I,W,qCC8B3B8d,GA9BI,SAACna,GAalB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa7F,EAAKwe,YAClB,kBAAC,IAAD,KACF,kBAAC,KAAD,CACEyB,gBAhBoB,SAAC,GAAa,EAAXC,KAAa,MAAO,CAAEhD,OAAO,CAAC,gBAAgBrX,EAAM/D,MAAO,eAAgB+D,EAAM6X,MAAOzY,IAAKtB,qCAiBpHwc,eAduB,SAAC,EAAgBvT,GAAY,IAA1BsT,EAAyB,EAAzBA,KAAMlb,EAAmB,EAAnBA,KAAqBlC,QAAQC,IAAI6J,EAAQsT,EAAMlb,IAe/Eob,SAZiB,SAACC,EAAOC,GAC3Bxd,QAAQC,IAAIsd,EAAMlc,KAAI,SAAAoc,GAAC,OAAIA,EAAEL,SAC7BI,EAASE,SAAQ,SAAAD,GAAC,OAAIA,EAAEtR,aAWtBwR,YAAY,EACZC,sBAAsB,EACtBC,aAAc3gB,EAAK4gB,oB,qBC2BVC,GAjDI,SAAChb,GAClB,OAAIA,EAAMqM,OAEN,kBAAC,IAAMpR,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAad,EAAK8gB,YAClB,kBAAC,IAAD,CAAM1a,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAK8B,MAAQ,IACpBmB,KAAK,OACL+E,YAAY,MACZwK,UAAU,KACVzM,MAAOF,EAAMqM,OAAOpQ,MACpBmG,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE5E,MAAO2E,EAAEG,OAAOb,WAGzC,kBAAC,UAAD,CACEiY,YAAanY,EAAMmY,YACnBhW,YAAahI,EAAKoS,QAClB2O,aAAc,CACZ9N,OAAQ,KACR+N,aAAcC,MAEhB5C,QAAS,CACPvY,QAAS,CAAC,SAAU,OAAQ,QAC5B2L,OAAQ,CAAE3L,QAAS,CAAC,OAAQ,SAAU,cACtCob,MAAO,CACLC,eAAgBtb,EAAMub,oBACtBC,cAAc,IAGlBC,oBAAqBzb,EAAMyb,uBAI/B,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQngB,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAKgH,UAG9D,kBAAC,GAAD,CAAYua,eAAe,SAAS7D,KAAM7X,EAAM6X,QAK5C,MCvDL,SAAS0D,GAAoBpc,GAClC,OAAO,IAAIwc,SACT,SAACC,EAASC,GACR,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,oCACjBF,EAAIG,iBAAiB,gBAAiB,6BACtC,IAAMpf,EAAO,IAAIyC,SACjBzC,EAAK0C,OAAO,gBAAiBJ,GAC7B2c,EAAII,KAAKrf,GACTif,EAAIK,iBAAiB,QAAQ,WAC3B,IAAMtd,EAAW4G,KAAKC,MAAMoW,EAAIM,cAChCR,EAAQ/c,MAEVid,EAAIK,iBAAiB,SAAS,WAC5B,IAAMnd,EAAQyG,KAAKC,MAAMoW,EAAIM,cAC7BP,EAAO7c,S,ICUMqd,G,YACnB,aAAe,IAAD,8BACZ,+CACKlb,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKmhB,oBAAsB,EAAKA,oBAAoBnhB,KAAzB,gBAC3B,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKihB,oBAAsBA,GAAoBjhB,KAApB,gBAG3B,EAAKC,MAAQ,CACX8R,OAAQ,GACR8L,YAAaC,eAAYkE,cACzB9hB,MAAOC,OAAOC,aAAaC,QAAQ,SACnCsB,MAAO,KACP4c,YAAa,KACbhB,KAAMvW,IAAOib,IAAIC,OAAOC,UAAUnb,IAAOC,IAAIC,UAAUC,OAAO,KAC9DxD,KAAM,GAjBI,E,kFAuBZoF,EAAWC,GAAG,eAAgB1I,KAAKgF,aACnCyD,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,eAAgB3I,KAAKgF,aAC/CyD,EAAWE,eAAe,WAAY3I,KAAKmD,W,+BAM3C,IACMmC,EADSwc,wBAAa9hB,KAAKL,MAAM4d,YAAYwE,qBAAqBC,OACnDte,KAAI,SAAAue,GAAK,OAAMA,EAAMnY,KAAKoY,OAAmBD,EAAMnY,KAAf,QAAqBlG,KAAK,MAC/Eue,EAAS,KACTC,EAAS,KAC6B,SAAtCpiB,KAAK6I,SAASvF,OAAd,aACF6e,EAASniB,KAAK6I,SAASvF,OAAd,UAE+B,SAAtCtD,KAAK6I,SAASvF,OAAd,aACF8e,EAASpiB,KAAK6I,SAASvF,OAAd,UAEX,IAAIrB,EAAO,CAAE2R,QAASuO,EAAQ7J,QAAS8J,EAAQnF,KAAMjd,KAAKL,MAAMsd,KAAM5b,MAAOrB,KAAKL,MAAM0B,MAAOsQ,QAASrM,EAAO8X,MAAO0E,wBAAa9hB,KAAKL,MAAM4d,YAAYwE,sBAC1J,GAAI/hB,KAAKL,MAAM0B,MACbuH,EAAsB,UAAW3G,EAAMjC,KAAKL,MAAMC,WAC7C,CACQI,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,0CAIjC8F,GAClBvd,KAAKC,SAAS,CACZsd,kB,wCAKcpU,GAChBnJ,KAAKC,SAASkJ,K,0CAKdnJ,KAAKgK,WACL3H,QAAQC,IAAItC,KAAKL,MAAMsd,Q,6EAONoF,EAAMC,M,uEAQvB,IAAI7Q,EAAShJ,EAAWK,aACpBhH,EAAQ2G,EAAWM,WACnB0I,GAAoB,WAAV3P,GACZ9B,KAAKoL,UAAUC,SAAS,YAAaoG,EAAOnN,M,+BAStC,IAAD,EAC+BtE,KAAKL,MAAnC8R,EADD,EACCA,OAAQ8L,EADT,EACSA,YAAaN,EADtB,EACsBA,KAC7B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ5b,MAAO9B,EAAKgjB,cACpB,kBAAC,GAAD,CAAY9Q,OAAQA,EAAQwL,KAAMA,EAAMM,YAAaA,EAAasD,oBAAqB7gB,KAAK6gB,oBAAqBta,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,kBAAmBmY,oBAAqB3gB,KAAK2gB,2B,GArGpKlf,aCDrB+gB,G,YACnB,aAAe,IAAD,8BACZ,+CACKjc,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKmhB,oBAAsB,EAAKA,oBAAoBnhB,KAAzB,gBAC3B,EAAKyD,QAAU,EAAKA,QAAQzD,KAAb,gBACf,EAAKihB,oBAAsBA,GAAoBjhB,KAApB,gBAG3B,EAAKC,MAAQ,CACX8R,OAAQ,CAACpQ,MAAO,GAAI+b,MAAO,IAC3BG,YAAaC,eAAYkE,cACzB9hB,MAAOC,OAAOC,aAAaC,QAAQ,SACnCuE,GAAI,KACJjD,MAAO,KACP+b,MAAO,KACP/Z,KAAM,GAlBI,E,kFAuBZoF,EAAWC,GAAG,eAAgB1I,KAAK8E,aACnC2D,EAAWC,GAAG,eAAgB1I,KAAKgF,aACnCyD,EAAWC,GAAG,WAAY1I,KAAKmD,W,6CAI/BsF,EAAWE,eAAe,eAAgB3I,KAAK8E,aAC/C2D,EAAWE,eAAe,eAAgB3I,KAAKgF,aAC/CyD,EAAWE,eAAe,WAAY3I,KAAKmD,W,+BAK3CyF,EAAyB,UADd,CAACtE,GAAItE,KAAKL,MAAM2E,GAAIjD,MAAOrB,KAAKL,MAAM0B,MAAO+b,MAAM0E,wBAAa9hB,KAAKL,MAAM4d,YAAYwE,sBACxD/hB,KAAKL,MAAMC,S,0CAIrDI,KAAKgK,a,iCAIkBC,IAAWpI,SAC/BqI,MAAMC,KAAK,CAAEL,KAAMvK,EAAK6K,UAAWC,aAAc,IAAMhB,SAAU,QAChErJ,KAAK6I,SAASvF,OAAd,UACFsF,EAAsB,UAAW5I,KAAK6I,SAASvF,OAAd,SAAkCtD,KAAKL,MAAMC,S,uEAShF,IAAI6R,EAAShJ,EAAWK,aAExB,GAAI2I,EAAO,CACT,IAAM4L,EAAeC,0BAAe7L,EAAO2L,OACrCG,EAAcC,eAAYC,kBAAkBJ,GAClDrd,KAAKC,SAAS,CACZwR,OAAQA,EACRpQ,MAAOoQ,EAAOpQ,MACdiD,GAAImN,EAAOnN,GACXiZ,YAAaA,IAGjBlb,QAAQC,IAAImP,K,wCAGItI,GAChBnJ,KAAKC,SAASkJ,K,0CAGIoU,GAChBvd,KAAKC,SAAS,CACdsd,kB,oCAOFvd,KAAKoL,UAAUC,SAAS,e,+BAIhB,IAAD,EACwBrL,KAAKL,MAA5B8R,EADD,EACCA,OAAQ8L,EADT,EACSA,YAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQlc,MAAM,OAAOkI,SAAUhK,EAAKiK,OACpC,kBAAC,IAAD,KAAajK,EAAKkjB,eAClB,kBAAC,GAAD,CAAYhR,OAAQA,EAAS8L,YAAaA,EAAasD,oBAAqB7gB,KAAK6gB,oBAAqBta,OAAQvG,KAAKuG,OAASN,aAAcjG,KAAKwI,kBAAmBmY,oBAAqB3gB,KAAK2gB,2B,GA/F1Jlf,aCsB3BihB,GAzCG,SAACtd,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKojB,SAClB,kBAAC,IAAD,CAAMtH,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,WAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa/b,EAAK+B,OAClB,kBAAC,IAAD,CAAaZ,UAAU,WACrB,kBAAC,IAAD,CAAMiF,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAKiG,MACZhD,KAAK,OACLogB,WAAW,EACXrb,YAAahI,EAAKsjB,iBAClBvd,MAAOF,EAAMI,MACbgC,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAET,MAAOQ,EAAEG,OAAOb,aAc7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM8D,KAAK,YAAY0Z,SAAS,EAAO9hB,aAAa,GAAOzB,EAAKwjB,gBAAhE,KACA,kBAAC,IAAD,CAAQriB,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAK+B,W,eChBlE,aAAe,IAAD,8BACZ,+CACKiF,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBAEnB,EAAKC,MAAQ,CACX6F,MAAO,GACPwd,SAAU,IARA,E,kFAaZva,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,0CAGlChF,KACRoe,GAAG,SAAS6E,Y,+BAKjBra,EAAsB,cADX,CAACpD,MAAOxF,KAAKL,MAAM6F,MAAOwd,SAAUhjB,KAAKL,MAAMqjB,a,oCAM5C,UADFva,EAAWM,YAErB/I,KAAKoL,UAAUC,SAAS,iBAAiBrL,KAAKL,MAAM6F,S,wCAKtC2D,GAChBnJ,KAAKC,SAASkJ,K,+BAGN,IAAD,EACsBnJ,KAAKL,MAD3B,EACAujB,SADA,EACUF,SACjB,OACE,kBAACG,GAAD,CAAW5c,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,wB,GA7C5B8B,IAAM7I,WC0DpB2hB,GA5EI,SAAChe,GAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKojB,SAClB,kBAAC,IAAD,CAAMtH,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,WAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa/b,EAAKojB,SAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMhd,MAAI,GACR,kBAAC,IAAD,CACE0B,MAAO9H,EAAKmc,UAAY,KACxBnU,YAAahI,EAAK8jB,gBAClB7gB,KAAK,OACLsD,KAAMY,IAAOC,IAAIC,UAAUC,OAAO,IAClCW,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAEH,KAAME,EAAEG,OAAOb,WAIxC,kBAAC,IAAD,CACE+B,MAAO9H,EAAKoc,SAAW,KACvBpU,YAAahI,EAAK+jB,oBAClB9gB,KAAK,OACLsD,KAAMY,IAAOC,IAAIC,UAAUC,OAAO,IAClCW,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE0V,SAAU3V,EAAEG,OAAOb,WAK5C,kBAAC,IAAD,CACE+B,MAAO,MAAQ9H,EAAKiG,MACpBhD,KAAK,QACL+gB,UAAQ,EACRhc,YAAahI,EAAKsjB,iBAClBniB,UAAU,MACV4E,MAAOF,EAAMI,MACbgC,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAET,MAAOQ,EAAEG,OAAOb,aA2B7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM8D,KAAK,WAAW7J,EAAKikB,cAAe,OAAUjkB,EAAKkkB,cAAzD,KACA,kBAAC,IAAD,CAAQ/iB,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAKojB,a,eCnDlE,aAAe,IAAD,8BACZ,+CACKpc,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBAEnB,EAAKC,MAAQ,CACX6F,MAAO,GACPM,KAAM,GACN6V,SAAU,IATA,E,kFAcZlT,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,+BAK/C,IAAI/C,EAAO,CACTuD,MAAOxF,KAAKL,MAAM6F,MACjBM,KAAM9F,KAAKL,MAAMmG,KACjB6V,SAAU3b,KAAKL,MAAMgc,UACxB,GACG3b,KAAKL,MAAM6F,OAASxF,KAAKL,MAAM6F,MAAMtD,OAAS,GAC9ClC,KAAKL,MAAMmG,MAAQ9F,KAAKL,MAAMmG,KAAK5D,OAAS,GAC5ClC,KAAKL,MAAMgc,UAAY3b,KAAKL,MAAMgc,SAASzZ,OAAS,EAErD0G,EAAsB,gBAAiB3G,OAClC,CACQjC,KACRkN,IAAIsK,OAAOC,MAAMlY,EAAKmY,gBAAiBnY,EAAKkY,U,oCAMrC,WADFhP,EAAWM,YAErB/I,KAAKoL,UAAUC,SAAS,iBAAiBrL,KAAKL,MAAM6F,S,wCAKtC2D,GAChBnJ,KAAKC,SAASkJ,GACd9G,QAAQC,IAAI6G,K,+BAGJ,IAAD,EACwBnJ,KAAKL,MAD7B,EACCujB,SADD,EACWF,SAClB,OACE,kBAACU,GAAD,CAAYnd,OAAQvG,KAAKuG,OAAQN,aAAcjG,KAAKwI,wB,GAxD7B8B,IAAM7I,WCsBpBihB,GAxCG,SAACtd,GACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/D,MAAO9B,EAAKokB,cAClB,kBAAC,IAAD,CAAMtI,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,WAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa/b,EAAK+B,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMqE,MAAI,GACV,kBAAC,IAAD,CACI0B,MAAO9H,EAAKiG,MACZhD,KAAK,OACLogB,WAAW,EACXrb,YAAahI,EAAKsjB,iBAClBvd,MAAOF,EAAMI,MACbgC,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAET,MAAOQ,EAAEG,OAAOb,WAGzC,kBAAC,IAAD,CACE+B,MAAO9H,EAAKqkB,kBACZphB,KAAK,OACL+E,YAAahI,EAAKskB,wBAClBrc,QAAS,SAACxB,GACRZ,EAAMa,aAAa,CAAE6d,iBAAkB9d,EAAEG,OAAOb,aAKxD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM8D,KAAK,YAAY0Z,SAAS,EAAO9hB,aAAa,GAAOzB,EAAKwjB,gBAAhE,KACA,kBAAC,IAAD,CAAQriB,UAAU,MAAM4F,MAAI,EAAC7F,QAAS2E,EAAMmB,QAAShH,EAAK+B,WCSrD,IACb,CACEyiB,KAAM,IACNC,UChCW,kBACb,kBAAC,IAAD,CAAMtjB,UAAU,kBACd,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM2a,UAAU,SACd,kBAAC,IAAD,CAAMC,GAAG,YAIf,kBAAC,IAAD,CAASN,QAAM,GACb,kBAAC,IAAD,kBACA,kBAAC,IAAD,oBAEF,kBAAC,IAAD,CAAO5U,QAAM,GACX,6BAEF,kBAAC,IAAD,MACA,kBAAC,IAAD,MAGA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOA,QAAM,IAGb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOA,QAAM,IAGb,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAKgD,KAAK,kBAAkBjD,OAAO,aAAakD,SAAS,cAAcC,KAAK,QAAQxC,MAAM,UACxF,kBAAC,IAAD,CAAME,IAAI,SAASC,OAAO,SAASC,GAAG,iBACtC,kBAAC,IAAD,CAAMF,IAAI,WAAWC,OAAO,WAAWC,GAAG,uBDC9C,CACE6c,KAAM,UACNC,UAAWb,IAEb,CACEY,KAAM,YACNC,UAAWN,IAEb,CACEK,KAAM,uBACNC,U,YEvCF,aAAe,IAAD,8BACZ,+CACKzd,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBACzB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBAEnB,EAAKC,MAAQ,CACXmkB,iBAAkB,GAClBte,MAAO,IARG,E,kFAaZiD,EAAWC,GAAG,eAAgB1I,KAAKgF,e,6CAInCyD,EAAWE,eAAe,eAAgB3I,KAAKgF,e,0CAI/ChF,KAAKC,SAAS,CAACuF,MAAOxF,KAAK6I,SAASvF,OAAd,U,+BAKtBsF,EAAsB,eADX,CAACgb,kBAAmB5jB,KAAKL,MAAMmkB,qB,oCAK1C,IAAIG,EAAOxb,EAAWK,aAClBmb,IACFpkB,OAAOC,aAAaokB,QAAQ,QAASD,EAAKrkB,OAC1CI,KAAKoL,UAAUC,SAAS,WACxBxL,OAAOM,SAASgkB,Y,wCAKFhb,GAChBnJ,KAAKC,SAASkJ,K,+BAGN,IAAD,EACmBnJ,KAAKL,MAAd6F,GADV,EACA0d,SADA,EACU1d,OACjB,OACE,kBAAC4e,GAAD,CAAkB7d,OAAQvG,KAAKuG,OAAQf,MAAOA,EAAOS,aAAcjG,KAAKwI,wB,GA/CjD8B,IAAM7I,YF0CjC,CACEsiB,KAAM,gBACNC,UAAWxkB,GAIb,CACEukB,KAAM,UACNC,UAAWja,GAEb,CACEga,KAAM,sBACNC,UAAWK,GAEb,CACEN,KAAM,aACNC,UAAW9Y,GAEb,CACE6Y,KAAM,iBACNC,UAAW7b,GAGb,CACE4b,KAAM,aACNC,UAAWtX,IAEb,CACEqX,KAAM,2BACNC,UAAWM,IAEb,CACEP,KAAM,gBACNC,UAAWjX,IAEb,CACEgX,KAAM,sBACNC,UAAW9X,IAIb,CACE6X,KAAM,UACNC,UAAWpP,IAEb,CACEmP,KAAM,sBACNC,UAAWO,IAEb,CACER,KAAM,aACNC,UAAWpO,IAEb,CACEmO,KAAM,iBACNC,UAAWnR,IAIb,CACEkR,KAAM,SACNC,UAAWpY,GAEb,CACEmY,KAAM,oBACNC,UAAWQ,IAEb,CACET,KAAM,YACNC,UAAWjY,GAEb,CACEgY,KAAM,eACNC,UAAWxY,GAKb,CACEuY,KAAM,YACNC,UAAW/E,IAEb,CACE8E,KAAM,0BACNC,UAAWxB,IAEb,CACEuB,KAAM,qCACNC,UAAWvC,IAEb,CACEsC,KAAM,qBACNC,UAAW7G,IAGb,CACE4G,KAAM,UACNC,UAAWxL,IAEb,CACEuL,KAAM,sBACNC,UAAWS,IAEb,CACEV,KAAM,qBACNC,UAAWjL,IAEb,CACEgL,KAAM,iBACNC,UAAW/L,IAGb,CACE8L,KAAM,aACNC,UAAW5I,IAEb,CACE2I,KAAM,4BACNC,UAAWU,IAEb,CACEX,KAAM,gBACNC,UAAW3H,IAEb,CACE0H,KAAM,uBACNC,UAAWxJ,IAEb,CACEuJ,KAAM,OACNC,UGhMW,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3iB,MAAM,YAAYkI,SAAS,SACnC,kBAAC,IAAD,CAAOnD,QAAM,GACX,oCACA,gE,0CCIcue,QACW,cAA7B9kB,OAAOM,SAASykB,UAEe,UAA7B/kB,OAAOM,SAASykB,UAEhB/kB,OAAOM,SAASykB,SAASC,MACvB,2DCUN5a,IAAW6a,IAAIC,KAGfC,IAASnO,OAAOvM,IAAM2a,eCTP,SAAU7f,GAGvB,IAAM8f,EAAW,CACf5gB,GAAI,wBACJwB,KAAM,aACNqf,MAAO,SACPC,MAAO,CACLC,gBAAiB,KAEnB9kB,KAAM,GAKN+kB,WAGF,OACE,kBAAC,IAAD,CAAKhiB,OAAQ4hB,GAEX,kBAAC,IAAD,MAGA,kBAAC,IAAD,CAAOK,MAAI,EAACC,OAAK,EAAEC,WAAS,GAC1B,kBAAC,IAAD,CAAMjhB,IAAI,kBAIZ,kBAAC,IAAD,CAAOkhB,OAAK,EAACC,QAAM,EAACF,WAAS,GAC3B,kBAAC,IAAD,CAAMjhB,IAAI,mBAIZ,kBAAC,IAAD,CAAMF,GAAG,YAAYE,IAAI,OAAOohB,WAAW,EAAOC,MAAI,EAACnlB,UAAU,mBDxBrEolB,SAASC,eAAe,SDiGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMliB,MAAK,SAAAmiB,GACjCA,EAAaC,kB","file":"static/js/main.8abce8d0.chunk.js","sourcesContent":["module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما'\n};\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n\n  logout(){\n    this.setState({token: null});\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n            <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List>\n            <ListItem link=\"/tasks/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-tasks\"></i>\n              <span>{dict.tasks}</span>\n            </ListItem>\n            \n            <ListItem link=\"/profiles/\"  view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profiles}</span>\n            </ListItem>\n            \n            </List>\n            <BlockTitle> <i className=\"va ml-5 fa fa-cogs\"></i>{dict.settings}</BlockTitle>\n            <List>\n            <ListItem link=\"/roles/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-shield\"></i>\n              <span>{dict.roles}</span>\n            </ListItem>\n            <ListItem link=\"/metas/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-th\"></i>\n              <span>{dict.metas}</span>\n            </ListItem>\n            <ListItem link=\"/statuses/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-circle-o\"></i>\n              <span>{dict.statuses}</span>\n            </ListItem>\n            <ListItem link=\"/tags/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-tags\"></i>\n              <span>{dict.tags}</span>\n            </ListItem>\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment> \n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.tavan} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\n//const server='http://localhost:3001/v1';\nconst server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.assignment_form}</BlockTitle>\n        <List form inset>\n          <ListItem\n            title={dict.email}\n            smartSelect\n            >\n            <select name=\"content\"\n              onChange={(e) => {  props.handleChange({ user_id: e.target.value}) }}>\n              <UserOptions users={props.users}/>\n            </select>\n          </ListItem>\n        </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n      </React.Fragment>\n    )\n  }\n  export default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Icon, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List form inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                    <Button className=\"col\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      default_role: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('tags/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeTag(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, tag_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('tags/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { tag, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow tag={tag} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeTag={this.removeTag} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n  if (props.defaultTag) {\n    var isDefaultTag = true;\n  } else {\n    var isDefaultTag = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      default_tag: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_tag: this.state.defaultTag}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm tag={tag} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      defaultTag: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_tag: this.state.defaultTag}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        defaultTag: tag.default_tag\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, defaultTag} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm tag={tag} defaultTag={defaultTag} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst StatusShow = (props) => {\n  if (props.status){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.status.title}</ListItem>\n        </List>\n\n        <List simple-list>\n          <ListItem style={{backgroundColor: props.status.the_color}}>{props.status.the_color}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default StatusShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusShow from \"../../containers/statuses/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeStatus = this.removeStatus.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('statuses', this.$f7route.params['statusId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status') {\n      this.setState({\n        status: status,\n        id: status.id,\n        assignedUsers: status.users,\n        ability: status.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { status_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('statuses/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.status) {\n      return (\n        <Fab href={\"/statuses/\" + this.state.status.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeStatus(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, status_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('statuses/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { status, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.statuses} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <StatusShow status={status} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeStatus={this.removeStatus} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst StatusList = (props) => {\n\n  if (props.statuses) {\n    return (\n      <List mediaList>\n        {props.statuses.map((status) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/statuses/\" + status.id}\n            ignoreCache={true}\n            title={status.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default StatusList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport StatusList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst StatusIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.statuses} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/statuses/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <StatusList statuses={props.statuses}/>\n    </Page>\n  )\n}\nexport default StatusIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport StatusIndex from \"../../containers/statuses/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      statuses: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('statuses', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var statuses = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (statuses && klass === 'Status'){\n      this.setState({\n        statuses: statuses,\n      });\n    }\n  }\n\n  render() {\n    const {statuses} = this.state;\n    return(<StatusIndex statuses={statuses}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst StatusForm = (props) => {\n  if (props.status) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.status}</BlockTitle>\n        <List form>\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            defaultValue={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value })\n            }}\n          />\n  \n        </List>\n  \n        <div className=\"list \">\n          <ul>\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-media\">\n                <i class=\"fa fa-2x fa-circle-o demo-list-icon\" aria-hidden=\"true\" id=\"demo-color-picker-spectrum-value\"></i>\n                </div>\n                <div className=\"item-inner\">\n                  <div className=\"item-input-wrap\">\n                    <input type=\"text\" placeholder=\"Color\" value={props.color} readonly=\"readonly\" id=\"demo-color-picker-spectrum\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n  \n        <Block strong>\n          <Row tag=\"p\">\n            <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n\n}\nexport default StatusForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class StatusCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: {},\n      title: '',\n      color: '',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    const self = this;\n    const app = self.$f7;\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: '#ff0000',\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n  submit(){\n    var data = {title: this.state.title, color: this.state.color}\n    MyActions.setInstance('statuses', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n\n  render() {\n    const {status} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm status={status} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadPalette = this.loadPalette.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status : {},\n      title: null,\n      id: '',\n      color: '#fff',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    \n    const self = this;\n    const app = self.$f7;\n\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: this.state.color,\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, color: this.state.color}\n    MyActions.updateInstance('statuses', data,  this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['statusId']) {\n      MyActions.getInstance('statuses', this.$f7route.params['statusId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status'){\n      this.setState({\n        title: status.title,\n        id: status.id,\n        color: status.the_color,\n        status: status,\n      }, () => this.loadPalette());\n    } \n    console.log(status)\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n  render() {\n        const {status, title, color} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm status={status} title={title} color={color} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  if (props.participants) {\n    function select(participant) {\n      if (participant.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(participant.profile.id, e.target.value) }}>\n            {option('Admin', participant)}\n            {option('Colleague', participant)}\n            {option('Observer', participant)}\n          </select>\n        )\n      }\n    }\n    function option(role, participant) {\n      var selected = false\n      if (participant.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(participant) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n            <Link className=\"mt-4\" onClick={() => props.removeProfile(participant.profile.id)}>{dict.remove}</Link>\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(participant)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div class=\"item-after mt-2\">{dict[participant.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.participants.map((participant) =>\n          <ListItem\n            title={participant.profile.fullname}\n            after={addLink(participant)}>\n            <img slot=\"media\" src={participant.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.profiles) {\n    function addLink(profile){\n        if (props.addProfile){\n            return(<Link onClick={()=> props.addProfile(profile.id)}>{dict.add}</Link>)\n        } \n        if (props.removeProfile){\n            return(<Link onClick={()=> props.removeProfile(profile.id)}>{dict.remove}</Link>)\n        } \n    }\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          after={addLink(profile)}>\n          <img slot=\"media\" src={profile.avatar} width=\"27\" height=\"27\"/>\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ParticipantList from \"./participantList\";\nimport SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                    <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                        <AccordionContent>\n                            <List >\n                                <ListInput\n                                    outline\n                                    label={dict.search}\n                                    floatingLabel\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    clearButton\n                                    onInput={(e) => {\n                                        props.searchProfile({ query: e.target.value })\n                                    }}\n                                />\n                            </List>\n                            <SimpleList profiles={props.profiles} addProfile={props.addProfile} />\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n                )\n        }\n    }\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <ParticipantList \n                            participants={props.task.participants} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { List, ListItem, Link, Icon, Chip } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.statuses) {\n    function addLink(status) {\n      if (props.addStatus) {\n        return (<Link onClick={() => props.addStatus(status.id)}>{dict.select}</Link>)\n      }\n    }\n    return (\n      <List>\n        {props.statuses.map((status) =>\n          <ListItem\n            title={\n              <div className=\"chip\" >\n                <div className=\"chip-media\" style={{ backgroundColor: status.the_color }} >\n                  <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                  <i className=\"icon material-icons md-only\"></i>\n                </div>\n                <div className=\"chip-label\">{status.title}</div>\n              </div>}\n            after={addLink(status)}\n          />\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status){\n        if(status) {\n            return(\n                <div>\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{status.title}</div>\n                </div>\n            </div>\n            )\n        } else {\n        return(<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                <List >\n                    <ListInput\n                        outline\n                        label={dict.search}\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"\"\n                        clearButton\n                        onInput={(e) => {\n                            props.searchStatus({ query: e.target.value })\n                        }}\n                    />\n                </List>\n                <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n            </AccordionContent>)\n        }\n    }\n    if (props.task) {\n        \n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.task.status)}\n                >\n                {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, Row, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Works = (props) => {\n\n    function chip(work) {\n        var result = []\n        if (work.deadline_alert) {\n            result.push(\n                <span className='color-red ml-5'>\n                    <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n\n        if (work.comment_alert) {\n            result.push(\n                <span className='color-green ml-5'>\n                    <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.report_alert) {\n            result.push(\n                <span className='color-blue ml-5'>\n                    <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.status) {\n            result.push(\n\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: work.status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{work.status.title}</div>\n                </div>\n            )\n\n        } else {\n            result.push(dict.add_stauts)\n        }\n        return (result)\n    }\n\n    function editable() {\n        if (props.editable) {\n            return (<Link href={'/works/new/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n        }\n    }\n\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.works}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.works.map((work) =>\n                            <ListItem\n                                className='work-media'\n                                link={\"/works/\" + work.id}\n                                title={work.title}\n                                after={chip(work)}\n                                text={work.details}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Works;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.task) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return (<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return (<Link href={'/reports/new/tasks/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.reports.map((report) =>\n                            <ListItem\n                                className='work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter} from 'framework7-react';\nimport { dict} from '../../Dict';\n\nconst CommentForm = (props) => {\n    return (\n      <Card>\n        <CardHeader>{dict.comment_form}</CardHeader>\n        <List form>\n        <ListInput\n            label={dict.comment}\n            id=\"cm-form\"\n            type=\"textarea\"\n            placeholder='...'\n            maxlength='300'\n            resizable\n            clearButton={true}\n            onInput={(e) => {\n              props.handleChange({ commentContent: e.target.value})\n            }}\n            />\n        </List>\n        <CardFooter>\n          <Link></Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  export default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var date = new Date(new window.ODate(props.comments[i].created_at))\n            var time = <React.Fragment><Link onClick={() => props.removeComment(props.comments[i].id)}><i className=\"va ml-5 fa fa-trash\"></i></Link><Moment locale=\"fa\" fromNow ago>{date}</Moment>{dict.ago}</React.Fragment>\n            items.push(\n                <ListItem\n                    className='some-link'\n                    text={time}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" height=\"44\"/>\n                </ListItem>\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <BlockTitle></BlockTitle>\n            </React.Fragment>\n        )\n    }\n    else {\n        return ( <BlockTitle></BlockTitle>)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Participants from './participants';\nimport Statuses from \"./status\";\nimport Works from \"./works\";\nimport Reports from \"./reports\";\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskShow = (props) => {\n  if (props.task && props.access) {\n    function tags() {\n      var arr = []\n      props.task.the_tags.map((tag) =>\n        arr.push(<Chip text={tag.title} />)\n      )\n      return (arr)\n    }\n\n    function isPublic() {\n      if (props.task.is_public) {\n        return (dict.public)\n      } else {\n        return (dict.private)\n      }\n    }\n\n    function access(segment) {\n      if (segment === 'statuses') {\n        var editable = false\n        if (props.access.includes('statuses')) {\n          editable = true\n        }\n        return (\n          <Statuses\n            task={props.task} searchStatus={props.searchStatus} editable={editable}\n            statuses={props.statuses} addStatus={props.addStatus}\n          />)\n      }\n\n      if (segment === 'participants') {\n        var editable = false\n        if (props.access.includes('participants')) {\n          editable = true\n        }\n        return (\n          <Participants\n            task={props.task} searchProfile={props.searchProfile}\n            removeProfile={props.removeProfile} addProfile={props.addProfile}\n            profiles={props.profiles} changeRole={props.changeRole}\n            editable={editable}\n          />)\n      }\n\n\n      if (segment === 'works') {\n        var editable = false\n        if (props.access.includes('works')) {\n          editable = true\n        }\n        return (<Works task={props.task} editable={editable} ></Works>)\n      }\n\n      if (segment === 'reports') {\n        var editable = false\n        if (props.access.includes('reports')) {\n          editable = true\n        }\n        return (<Reports task={props.task} editable={editable} ></Reports>)\n      }\n\n      if (segment === 'comments') {\n        if (props.access.includes('comments')) {\n          return (<CommentForm model={props.task} submit={props.submitComment} handleChange={props.handleChange} />)\n        }\n      }\n\n      if (segment === 'edit') {\n        if (props.access.includes('edit')) {\n          return (<Link href={'/tasks/' + props.task.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n        }\n      }\n\n      if (segment === 'view') {\n        if (props.access.includes('view')) {\n          return (\n            <React.Fragment>\n            <Row>\n              <Col width='100' tabletWidth='50'>\n                <Card>\n                  <CardHeader>\n                    {props.task.title}\n                    {access('edit')}\n                  </CardHeader>\n                  <CardContent>\n                    <List simple-list>\n                      <ListItem className='fs-11' title=''>{tags()}</ListItem>\n                      <ListItem className='fs-11' title=''>{isPublic()}</ListItem>\n                      <ListItem className='fs-11' title=''>{props.task.details}</ListItem>\n                    </List>\n    \n                  </CardContent>\n                  <CardFooter>\n                    {access('statuses')}\n                  </CardFooter>\n                </Card>\n              </Col>\n    \n              <Col width='100' tabletWidth='50'>\n                {access('participants')}\n              </Col>\n            </Row>\n    \n    \n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('works')}\n              </Col>\n            </Row>\n    \n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('reports')}\n              </Col>\n            </Row>\n    \n    \n            <BlockTitle>{dict.discussions}</BlockTitle>\n    \n            {access('comments')}\n            <CommentList comments={props.comments} removeComment={props.removeComment} loadMore={props.loadMore} />\n          </React.Fragment>\n\n          )\n        }\n      }\n\n    }\n\n\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default TaskShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskShow from \"../../containers/tasks/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      comments: null,\n      works: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      access: [],\n      commentContent: '',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        task: task,\n        id: task.id,\n        assignedUsers: task.users,\n        works: task.works,\n        comments: task.the_comments,\n        access: task.user_access\n      });\n    }\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token, this.state.page);\n    });\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    var data = { task_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('tasks/participants', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('tasks/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('tasks/participants', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('tasks/change_role', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'Task' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.task) {\n      return (\n        <Fab href={\"/tasks/\" + this.state.task.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeTask(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, task_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('tasks/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { task, users, assignedUsers, ability, profiles, statuses, works, commentContent, comments, access } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tasks} backLink={dict.back} backLinkForce={true}/>\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TaskShow \n          task={task} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeTask={this.removeTask} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus} works={works}\n          submitComment={this.submitComment} removeComment={this.removeComment}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(task) {\n    var result = []\n    if (task.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.tasks) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n          <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n            <select name=\"superhero\" onChange={(e) => { props.sortChange({ title: e.target.value }) }}>\n              <option value=\"title\" >{dict.by_title}</option>\n              <option value=\"events\" selected>{dict.by_events}</option>\n            </select>\n            <div className=\"item-content\">\n              <div className=\"item-inner\">\n                <div className=\"item-title\">{dict.sort_by}</div>\n              </div>\n            </div>\n          </a>\n\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.tasks.map((task) =>\n              <ListItem title={task.title} text={task.details} after={alerts(task)} link={'/tasks/' + task.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n         {/* <span className='fs-10'>\n            <span className='color-red ml-5'>\n              <i class=\"fa fa-bell-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.deadline_near}\n            </span>\n            <span className='color-blue ml-5'>\n              <i class=\"fa fa-file-text-o  ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_report}\n            </span>\n            <span className='color-green mr-5'>\n              <i class=\"fa fa-comments-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_comments}\n            </span>\n            </span>*/}\n\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TaskList;\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(work) {\n    var result = []\n    if (work.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.works) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.works.map((work) =>\n              <ListItem title={work.title} text={dict.task + ':'+ work.task.title} after={alerts(work)} link={'/works/' + work.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Block } from 'framework7-react';\nimport TaskList from \"./list\"\nimport WorkList from \"./workList\"\nimport { dict } from '../../Dict';\n\nconst TaskIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.tasks} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tasks/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n\n      </Row>\n\n    </Page>\n  )\n}\nexport default TaskIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TaskIndex from \"../../containers/tasks/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  sortChange(i){\n    MyActions.getList('tasks', this.state.page, {order: i.title}, this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tasks', this.state.page, {}, this.state.token);\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'Task'){\n      this.setState({\n        tasks: list,\n      });\n    }\n    if (list && klass === 'Work'){\n      this.setState({\n        works: list,\n      });\n    }\n  }\n\n  render() {\n    const {tasks, works} = this.state;\n    return(<TaskIndex tasks={tasks} works={works} sortChange={this.sortChange}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Chip, ListInput, Block, Row, Button, BlockTitle, Card, ListItem , Col} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TaskForm = (props) => {\n  if (props.isPublic) {\n    var isPublicTask = true;\n  } else {\n    var isPublicTask = false;\n  }\n  function tags() {\n    if (props.tags) {\n      var chips = [<span className='fs-11'>{dict.tags}: </span>]\n      props.tags.map((tag) =>\n        chips.push(<Chip text={tag.title} deleteable onClick={() => props.removeTag(tag.id)} />)\n      )\n      return chips\n    }\n  }\n\n  function deleteButton() {\n    if (props.editing){\n      return(\n        <Col>\n          <Button className=\"col ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteTask(props.task.id)}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.task}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.task.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.details}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListItem radio value={false} checked={!isPublicTask} name=\"selectedMode\" title={dict.private}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isPublicTask} name=\"selectedMode\" title={dict.public}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n\n\n        <ListItem title={tags()}></ListItem>\n        <li>\n          <a className=\"item-link item-content\" href=\"#\" id=\"autocomplete-standalone-ajax\">\n\n            <div className=\"item-inner\">\n              <div className=\"item-title fs-11\">{dict.new_tag}</div>\n              <input className=\"hidden\" />\n              <div className=\"item-after\"></div>\n            </div>\n          </a>\n        </li>\n      </List>\n\n\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Col>\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Col>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default TaskForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\n\nexport default class TaskCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateTask: true,\n      tags: [],\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: '/v1/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          var itemText = [],\n            inputValue = [];\n          // for (var i = 0; i < value.length; i++) {\n          //itemText.push(value[i].title);\n          //inputValue.push(value[i].id);\n          console.log(value)\n          self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          // }\n\n          // Add item text value to item-after\n          //self.$$('#autocomplete-standalone-ajax').find('.item-after').text(itemText.join(', '));\n          // Add item value to input value\n          //self.$$('#autocomplete-standalone-ajax').find('input').val(inputValue.join(', '));\n        },\n      },\n    });\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  submit() {\n    var data = { \n       title: this.state.title, public: this.state.isPublic,\n       details: this.state.details, tags: this.state.tags\n     }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    const self = this;\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n\n  render() {\n    const { task , tags, isPublic} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm \n         task={task} removeTag={this.removeTag} tags={tags} isPublic={isPublic}\n         submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      id: null,\n      title: null,\n      details: null,\n      privateTask: true,\n      details: null,\n      tags: [],\n      isPublic: false,\n      selectedMode: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: '/v1/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          var itemText = [],\n            inputValue = [];\n          // for (var i = 0; i < value.length; i++) {\n          //itemText.push(value[i].title);\n          //inputValue.push(value[i].id);\n          self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          // }\n\n          // Add item text value to item-after\n          //self.$$('#autocomplete-standalone-ajax').find('.item-after').text(itemText.join(', '));\n          // Add item value to input value\n          //self.$$('#autocomplete-standalone-ajax').find('input').val(inputValue.join(', '));\n        },\n      },\n    });\n  }\n\n\n\n  submit() {\n    var data = {\n      id: this.state.id, title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['taskId']) {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        title: task.title,\n        details: task.details,\n        id: task.id,\n        task: task,\n        defaultTask: task.default_task,\n        tags: task.the_tags,\n        isPublic: task.is_public,\n      }, () => this.loadTags());\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  deleteTask(id){\n    var data = { id: id }\n    MyActions.removeInstance('tasks', data, this.state.token, this.state.page);\n  }\n\n  deleteInstance(){\n    \n  }\n\n\n  setInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.$f7router.navigate('/tasks/' + task.id);\n    }\n  }\n\n\n  render() {\n    const { task, defaultTask, title, details, isPublic, tags, selectedMode } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} title={title} isPublic={isPublic}\n          tags={tags} removeTag={this.removeTag} selectedMode={selectedMode}\n          details={details} defaultTask={defaultTask} submit={this.submit}\n          editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  if (props.participants) {\n    function select(participant) {\n      if (participant.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(participant.profile.id, e.target.value) }}>\n            {option('Admin', participant)}\n            {option('Colleague', participant)}\n            {option('Observer', participant)}\n          </select>\n        )\n      }\n    }\n    function option(role, participant) {\n      var selected = false\n      if (participant.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(participant) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(participant)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div class=\"item-after mt-2\">{dict[participant.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.participants.map((participant) =>\n          <ListItem\n            title={participant.profile.fullname}\n            after={addLink(participant)}>\n            <img slot=\"media\" src={participant.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ParticipantList from \"./participantList\";\nimport  SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                    <AccordionContent>\n                        <List >\n                            <ListInput\n                                outline\n                                label={dict.search}\n                                floatingLabel\n                                type=\"text\"\n                                placeholder=\"\"\n                                clearButton\n                                onInput={(e) => {\n                                    props.searchProfile({ query: e.target.value })\n                                  }}\n                            />\n                        </List>\n                        <SimpleList profiles={props.profiles} addProfile={props.addProfile}  />\n                    </AccordionContent>\n                </ListItem>\n            </List>\n                )\n        }\n    }\n    if (props.work) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <ParticipantList \n                            participants={props.work.participants} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable} />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    \n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status) {\n        if (status) {\n            return (\n                <div>\n                    <div className=\"chip\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                    <List >\n                        <ListInput\n                            outline\n                            label={dict.search}\n                            floatingLabel\n                            type=\"text\"\n                            placeholder=\"\"\n                            clearButton\n                            onInput={(e) => {\n                                props.searchStatus({ query: e.target.value })\n                            }}\n                        />\n                    </List>\n                    <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n                </AccordionContent>)\n        }\n    }\n    if (props.work) {\n\n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.work.status)}\n                >\n                    {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Block, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.work) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return(<Moment date={date} fromNow></Moment>)\n          }\n          function editable() {\n            if (props.editable) {\n                return ( <Link href={'/reports/new/works/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.work.reports.map((report) =>\n                            <ListItem\n                                className='work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    +\n              </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Participants from './participants';\nimport Statuses from \"./status\";\nimport Reports from \"./reports\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\nconst WorkShow = (props) => {\n  function access(segment) {\n    if (segment === 'statuses') {\n      var editable = false\n      if (props.access.includes('statuses')) {\n        editable = true\n      }\n      return (\n        <Statuses\n          work={props.work} searchStatus={props.searchStatus} editable={editable}\n          statuses={props.statuses} addStatus={props.addStatus}\n        />\n      )\n    }\n\n    if (segment === 'participants') {\n      var editable = false\n      if (props.access.includes('participants')) {\n        editable = true\n      }\n      return (\n        <Participants\n          work={props.work} searchProfile={props.searchProfile}\n          removeProfile={props.removeProfile} addProfile={props.addProfile}\n          profiles={props.profiles} changeRole={props.changeRole}\n          editable={editable} />\n      )\n    }\n\n\n    if (segment === 'reports') {\n      var editable = false\n      if (props.access.includes('reports')) {\n        editable = true\n      }\n      return (<Reports work={props.work} editable={editable} ></Reports>)\n    }\n\n    if (segment === 'comments') {\n      if (props.access.includes('comments')) {\n        return (<CommentForm model={props.work} submit={props.submitComment} handleChange={props.handleChange} />)\n      }\n    }\n\n    if (segment === 'edit') {\n      if (props.access.includes('edit')) {\n        return (<Link href={'/works/' + props.work.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n      }\n    }\n\n\n    if (segment === 'view') {\n      if (props.access.includes('view')) {\n        return (\n          <React.Fragment>\n          <Row>\n            <Col width='100' tabletWidth='50'>\n              <Card>\n                <CardHeader>\n                  {props.work.title}\n                  {access('edit')}\n                </CardHeader>\n                <CardContent>\n                  <List simple-list>\n                    <ListItem className='fs-11' title={dict.task + ': ' + props.work.task.title} href={'/tasks/' + props.work.task.id}></ListItem>\n                    <ListItem className='fs-11' title={dict.start_date + ': ' + props.work.start_date_j}></ListItem>\n                    <ListItem className='fs-11' title={dict.deadline + ': ' + props.work.deadline_date_j}></ListItem>\n  \n                    <ListItem className='fs-11' title=''></ListItem>\n                  </List>\n                  <span className='fs-11'>{props.work.details}</span>\n  \n                </CardContent>\n                <CardFooter>\n                  {access('statuses')}\n                </CardFooter>\n              </Card>\n            </Col>\n  \n            <Col width='100' tabletWidth='50'>\n              {access('participants')}\n            </Col>\n          </Row>\n  \n          <Row>\n            <Col width='100' tabletWidth='100'>\n              {access('reports')}\n            </Col>\n          </Row>\n          {access('comments')}\n          \n          <CommentList comments={props.comments} removeComment={props.removeComment} loadMore={props.loadMore} />\n  \n        </React.Fragment>\n        )\n      }\n    }\n\n  }\n\n  if (props.work && props.access) {\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default WorkShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkShow from \"../../containers/works/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      commentContent: '',\n      access: null,\n      comments: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        work: work,\n        id: work.id,\n        assignedUsers: work.users,\n        ability: work.ability,\n        comments: work.the_comments,\n        access: work.user_access\n      });\n    }\n    console.log(work)\n    //this.$$('#cm-form').clear()\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    var data = { work_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('works/participants', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('works/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('works/participants', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('works/abilities', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('works/change_role', data, this.state.token);\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token, this.state.page);\n    });\n  }\n\n\n  submitComment() {\n    var data = { commentable_type: 'Work' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.work) {\n      return (\n        <Fab href={\"/works/\" + this.state.work.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeWork(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, work_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('works/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { work, users, assignedUsers, ability, profiles, statuses, comments, commentContent, access } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.works} backLinkForce={true} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <WorkShow \n          work={work} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeWork={this.removeWork} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus}\n          submitComment={this.submitComment} removeComment={this.removeComment}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return(<Moment date={date} fromNow></Moment>)\n  }\n  if (props.works) {\n    console.log(props.works)\n    \n    return (\n      <List>\n        {props.works.map((work) =>\n        <ListItem header={work.title} title={title(work.deadline_date)} link={'/works/'+work.id}></ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport WorkList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst WorkIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.works} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/works/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <WorkList works={props.works}/>\n    </Page>\n  )\n}\nexport default WorkIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport WorkIndex from \"../../containers/works/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var works = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (works && klass === 'Work'){\n      this.setState({\n        works: works,\n      });\n    }\n  }\n\n  render() {\n    const {works} = this.state;\n    return(<WorkIndex works={works}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst WorkForm = (props) => {\n  if (props.privateWork) {\n    var isPrivateWork = true;\n  } else {\n    var isPrivateWork = false\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.work}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.work.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.content}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_date}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"start-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.startTime} readonly=\"readonly\" id=\"start-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n            \n          </div>\n          </li>\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"deadline-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.deadlineTime} readonly=\"readonly\" id=\"deadline-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default WorkForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\n\nexport default class WorkCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateWork: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadTime();\n  }\n\n  loadTime(){\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n    \n    app.picker.create({\n      inputEl: '#start-time-picker',\n        rotateEffect: true,\n        on: {\n          closed: function (picker) {\n            self.setState({ startTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n        rotateEffect: true,        on: {\n          closed: function (picker) {\n            self.setState({ deadlineTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n  }\n\n  loadCalender(){\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          console.log(c.value[0].a)\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [new Date()],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n  submit() {\n    var data = { \n      title: this.state.title, details: this.state.details, \n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      task_id: this.$f7route.params['taskId']\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.$f7router.navigate('/works/'+work.id);\n    } else {\n      this.$f7router.navigate('/tasks/');\n    }\n    \n  }\n\n\n\n  render() {\n    const { work } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTime = this.loadTime.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      id: null,\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0 00',\n      deadlineTime: '0 00',\n      privateWork: true,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTime();\n  }\n\n  loadTime() {\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n\n    app.picker.create({\n      inputEl: '#start-time-picker',\n      rotateEffect: true,\n      on: {\n        closed: function (picker) {\n          self.setState({ startTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n      rotateEffect: true, on: {\n        closed: function (picker) {\n          self.setState({ deadlineTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n  }\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [this.state.start],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [this.state.deadline],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          //console.log(c.value[0].a)\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n\n\n  submit() {\n    var data = { id: this.state.id, title: this.state.title, details: this.state.details, start: this.state.start, start_time: this.state.startTime, deadline: this.state.deadline, deadline_time: this.state.deadlineTime }// start: new Date(this.state.start.setHours(startTime[0], startTime[1], 0, 0)).toISOString(), deadline:  new Date(this.state.deadline.setHours(deadlineTime[0], deadlineTime[1], 0, 0)).toISOString() }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['workId']) {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        title: work.title,\n        content: work.details,\n        id: work.id,\n        work: work,\n        start: new window.ODate(work.start_date),\n        deadline: new window.ODate(work.deadline_date),\n        startTime: work.start_time,\n        deadlineTime: work.deadline_time,\n        defaultWork: work.default_work,\n      }, () => this.loadCalender());\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance() {\n    const self = this;\n    this.$f7router.navigate('/works/');\n  }\n\n\n  render() {\n    const { work, defaultWork, title, content, startTime, deadlineTime } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} title={title} startTime={startTime} deadlineTime={deadlineTime} content={content} defaultWork={defaultWork} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ExpertiesList = (props) => {\n\n    if (props.experties) {\n        if (props.editable) {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a onClick={() => props.removeExperties(expert)}>\n                            <Chip text={expert} mediaBgColor=\"orange\">\n                                <Icon slot=\"media\" aurora=\"fa:times\"></Icon>\n                            </Chip>\n                        </a>\n                    )}\n                </Row>\n            )\n        } else {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a href={'/experties/'+expert}><Chip text={expert} /></a>\n                    )}\n                </Row>\n            )\n        }\n\n    } else {\n        return (null)\n    }\n}\nexport default ExpertiesList;\n","import React from \"react\";\nimport { Card, Chip, CardContent, CardHeader, Col, Row, Tab, Tabs, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport ExpertiesList from \"./experties\";\n\nconst ProfileShow = (props) => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  if (props.profile) {\n    return (\n\n      <Tabs>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"50\">\n\n              <Card>\n                <CardHeader>\n                  <img src={props.profile.avatar} width=\"80\" height=\"80\"></img>\n                  <div className='profile-card'>{props.profile.fullname}</div>\n                </CardHeader>\n                <CardContent>\n                  <ExpertiesList experties={props.profile.experties} />\n                </CardContent>\n              </Card>\n            </Col>\n\n            <Col width=\"100\" tabletWidth=\"50\">\n\n            </Col>\n          </Row>\n\n        </Tab>\n        <Tab id=\"tab-2\" className=\"page-content\">\n          <Row noGap>\n            <Col width=\"100\" tabletWidth=\"50\">\n              <Card>\n                <CardHeader>Chart</CardHeader>\n                <CardContent className='ta-center'>\n\n                </CardContent>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\">\n          <div className=\"block-title\">Only Tablet Side By Side</div>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"100\">\n              <div className=\"timeline timeline-sides\">\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs>\n\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.addTag = this.addTag.bind(this);\n    \n    this.state = {\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n        actuals: profile.actuals,\n        metas: profile.metas,\n        channels: profile.channels,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  addTag(){\n    console.log('hey');\n  }\n\n  render() {\n    const { profile, actuals, metas, channels } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-user-circle\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-bar-chart\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-list\"></i></Link>\n        </Toolbar>\n        {this.fab()}\n        <ProfileShow profile={profile} actuals={actuals} channels={channels} metas={metas} addTag={this.addTag}/>\n\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  console.log(props)\n  if (props.name && props.metas) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List form>\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n        <Card>\n          <CardHeader>{dict.experties}</CardHeader>\n          <CardContent>\n            <List>\n              <ListItem>\n                <ExpertiesList experties={props.experties} editable={true} removeExperties={props.removeExperties}/>\n              </ListItem>\n            </List>\n\n            <List form>\n              <ListInput\n                label={dict.new_experties}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.expert}\n                onInput={(e) => {\n                  props.handleChange({ expert: e.target.value })\n                }}\n              />\n\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submitExperties}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"80\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    this.submitExperties = this.submitExperties.bind(this);\n    this.removeExperties = this.removeExperties.bind(this);\n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      metas: null,\n      metaId: null,\n      actuals: null,\n      experties: null,\n      expert: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  submitExperties(){\n    var data = {id: this.state.id, experties: this.state.expert}\n    MyActions.setInstance('profiles/add_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n  removeExperties(experties){\n    var data = {id: this.state.id, experties: experties}\n    MyActions.setInstance('profiles/remove_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        metas: profile.metas,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n        experties: profile.experties\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {name, surename, avatar,metas, actuals, experties} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} experties={experties} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue} submitExperties={this.submitExperties} removeExperties={this.removeExperties}/>\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { List, BlockTitle, ListItem, Block, Row, Col, Button, Link } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\n\nconst ReportShow = (props) => {\n  console.log(props)\n  if (props.report && props.report.draft) {\n    const contentState = convertFromRaw(props.report.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    function parent(){\n      if(props.report.the_work){\n        return( <ListItem title={props.report.the_work.title} href={'/works/'+props.report.the_work.id}></ListItem>)\n      }\n      if(props.report.the_task){\n        return( <ListItem title={props.report.the_task.title} href={'/tasks/'+props.report.the_task.id}></ListItem>)\n      }\n    }\n\n    function creation(t) {\n      var date = new Date(new window.ODate(t))\n      return(<Moment date={date} fromNow></Moment>)\n    }\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n\n          </Row>\n        </Block>\n        <List simple-list>\n          {parent()}\n        </List>\n\n\n\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.report.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true}\n        />\n        <List simple-list>\n        <ListItem title={creation(props.report.creation_date)}></ListItem>\n        </List>\n\n        <BlockTitle>{dict.attachments}</BlockTitle>\n        <List>\n          {props.report.attachments.map((attachment) =>\n            <li className=\"\">\n              <div className=\"item-content\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title\">\n                    <a className=\"link external\" target=\"_blank\"  href={attachment.link}>\n                      <i className=\"fa ml-5 fa-cloud-download\" aria-hidden=\"true\"></i>\n                      {attachment.filename}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </li>\n          )}\n        </List>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportShow from \"../../containers/reports/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      report: null,\n      id: null,\n      page: 1,\n      selectedChannel: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.$$('.some-link').on('taphold', function (f7) {\n      f7.dialog.alert('Tap hold fired!');\n    });\n    MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n  }\n\n  getInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        id: report.id,\n        comments: report.comments\n      });\n    }\n    console.log(report)\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        comments: report.comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.report) {\n      return (\n        <Fab href={\"/reports/\" + this.state.report.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  submit() {\n    var data = { report_id: this.state.id, channel_id: this.state.selectedChannel }\n    MyActions.setInstance('shares', data, this.state.token);\n    const self = this;\n    self.$f7.sheet.close('.demo-sheet')\n  }\n\n  submitComment() {\n    var data = { report_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { report, sheetOpened, channels, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.reports} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <ReportShow report={report} comments={comments} channels={channels} submitComment={this.submitComment} removeComment={this.removeComment} submit={this.submit} interaction={this.interaction} handleChange={this.handleChangeValue} loadMore={this.loadMore} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\n  if (props.reports && props.reports.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.reports.map((report) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={report.profile.fullname} href={'/profiles/' + report.profile.id}><img src={report.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + report.profile.id}>{report.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/reports/' + report.id}>{report.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    \n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {report.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/reports/' + report.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport ReportList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ReportIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/reports/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ReportIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ReportIndex from \"../../containers/reports/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Report extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      reports: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('reports', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ reports: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('reports/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    if (report) {\n      this.setState({ reports: this.state.reports.map(el => (el.id === report.id ? Object.assign({}, el, report) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var reports = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (reports.length > 0 && klass === 'Report') {\n      this.setState({\n        reports: this.state.reports.concat(reports),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { reports } = this.state;\n    return (<ReportIndex interaction={this.interaction} loadMore={this.loadMore} reports={reports} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from 'framework7-react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../../css/upload.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { dict } from \"../../Dict\";\nconst server='http://localhost:3001/v1'\n\nconst UploadForm = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { fields:{'upload[title]':props.title, 'upload[uuid]': props.uuid}, url: server+'/uploads' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => f.remove())\n  }\n\n  return (\n    <Card>\n      <CardHeader>{dict.attachment}</CardHeader>\n      <CardContent>\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      autoUpload={true}\n      submitButtonDisabled={true}\n      inputContent={dict.drag_or_browse}\n    />\n    </CardContent>\n    </Card>\n  )\n}\n\nexport default UploadForm;\n","import React from \"react\";\nimport { List, ListItem, ListInput, Link, CardFooter, Button, Card, CardHeader } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport UploadForm from \"../uploads/form\"\n\nimport fa from '../../js/fa.js';\nconst ReportForm = (props) => {\n  if (props.report) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_report}</CardHeader>\n          <List form>\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              value={props.report.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n          \n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n        <UploadForm uploadableType='Report' uuid={props.uuid} />\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportForm;\n","export function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'http://localhost:3001/v1/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\";\nimport crypto from 'crypto-js';\n\nexport default class ReportCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      interaction: null,\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.$f7route.params['callerType'] == 'tasks'){\n      taskId = this.$f7route.params['callerId']\n    }\n    if (this.$f7route.params['callerType'] == 'works'){\n      workId = this.$f7route.params['callerId']\n    }\n    var data = { task_id: taskId, work_id: workId, uuid: this.state.uuid, title: this.state.title, content: value, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('reports', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n    console.log(this.state.uuid)\n  }\n\n  loadData() {\n    \n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n\n\n\n  render() {\n    const { report, editorState, uuid } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report_form} />\n        <ReportForm report={report} uuid={uuid} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class ReportUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {title: '', draft: ''},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      id: null,\n      title: null,\n      draft: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, draft:convertToRaw(this.state.editorState.getCurrentContent())}\n    MyActions.updateInstance('reports', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['reportId']) {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var report = ModelStore.getIntance()\n\n    if (report){\n      const contentState = convertFromRaw(report.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        report: report,\n        title: report.title,\n        id: report.id,\n        editorState: editorState\n      });\n    }\n    console.log(report);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/reports/');\n  }\n\n\n  render() {\n    const { report, editorState} = this.state;\n    return (\n      <Page>\n        <Navbar title=\"Form\" backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <ReportForm report={report}  editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List form>\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    const self = this;\n    self.$$('input').focusin()\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List form>\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List form>\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport StatusShow from './components/statuses/show';\nimport StatusIndex from './components/statuses/index';\nimport StatusCreate from './components/statuses/create';\nimport StatusUpdate from './components/statuses/update';\n\nimport TaskShow from './components/tasks/show';\nimport TaskIndex from './components/tasks/index';\nimport TaskCreate from './components/tasks/create';\nimport TaskUpdate from './components/tasks/update';\n\nimport WorkShow from './components/works/show';\nimport WorkIndex from './components/works/index';\nimport WorkCreate from './components/works/create';\nimport WorkUpdate from './components/works/update';\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport ReportShow from './components/reports/show';\nimport ReportIndex from './components/reports/index';\nimport ReportCreate from './components/reports/create';\nimport ReportUpdate from './components/reports/update';\n\n\nimport Login from './components/users/Login';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/statuses/',\n    component: StatusIndex,\n  },\n  {\n    path: '/statuses/:statusId/edit',\n    component: StatusUpdate,\n  },\n  {\n    path: '/statuses/new',\n    component: StatusCreate,\n  },\n  {\n    path: '/statuses/:statusId',\n    component: StatusShow,\n  },\n\n\n  {\n    path: '/tasks/',\n    component: TaskIndex,\n  },\n  {\n    path: '/tasks/:taskId/edit',\n    component: TaskUpdate,\n  },\n  {\n    path: '/tasks/new',\n    component: TaskCreate,\n  },\n  {\n    path: '/tasks/:taskId',\n    component: TaskShow,\n  },\n\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n\n\n  {\n    path: '/reports/',\n    component: ReportIndex,\n  },\n  {\n    path: '/reports/:reportId/edit',\n    component: ReportUpdate,\n  },\n  {\n    path: '/reports/new/:callerType/:callerId',\n    component: ReportCreate,\n  },\n  {\n    path: '/reports/:reportId',\n    component: ReportShow,\n  },\n\n  {\n    path: '/works/',\n    component: WorkIndex,\n  },\n  {\n    path: '/works/:workId/edit',\n    component: WorkUpdate,\n  },\n  {\n    path: '/works/new/:taskId',\n    component: WorkCreate,\n  },\n  {\n    path: '/works/:workId',\n    component: WorkShow,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n    <Toolbar bottom>\n      <Link>Left Link</Link>\n      <Link>Right Link</Link>\n    </Toolbar>\n    <Block strong>\n      <p></p>\n    </Block>\n    <BlockTitle></BlockTitle>\n    <List>\n\n    </List>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <List>\n    </List>\n    <Fab href=\"/document_form/\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"orange\">\n      <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n      <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n    </Fab>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    if (user){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter\n} from 'framework7-react';\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'io.framework7.testapp', // App bundle ID\n    name: 'Framework7', // App name\n    theme: 'aurora', // Automatic theme detection\n    panel: {\n      rightBreakpoint: 960,\n    },\n    view: {\n      //ignoreCache: true,\n      //reloadCurrent: true\n    },\n    // App routes\n    routes,\n  };\n\n  return (\n    <App params={f7params}>\n      {/* Statusbar */}\n      <Statusbar />\n\n      {/* Left Panel */}\n      <Panel left cover  themeDark>\n        <View url=\"/panel-left/\" />\n      </Panel>\n\n      {/* Right Panel */}\n      <Panel right reveal themeDark>\n        <View url=\"/panel-right/\"/>\n      </Panel>\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/app\" pushState={true}  main className=\"safe-areas\"/>\n\n    </App>\n  );\n};\n"],"sourceRoot":""}