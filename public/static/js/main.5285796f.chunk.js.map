{"version":3,"sources":["dispatcher.js","stores/ModelStore.js","actions/MyActions.js","conf.jsx","init-fcm.js","Dict.jsx","containers/layouts/PanelRightPage.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/items/form.jsx","containers/items/list.jsx","containers/shortners/show.jsx","components/shortners/show.jsx","containers/shortners/list.jsx","containers/shortners/index.jsx","components/shortners/index.jsx","containers/shortners/form.jsx","components/shortners/create.jsx","components/shortners/update.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","components/users/LoginJwt.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","components/users/Verification.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","components/users/loggedIn.js","routes.js","containers/layouts/HomePage.jsx","components/notifications/index.jsx","containers/layouts/NotFoundPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Dispatcher","modelStore","list","multipleList","instance","klass","this","i","len","data","length","push","emit","console","log","action","type","listModel","listMultipleModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","bind","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","initializedFirebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","isSupported","usePublicVapidKey","dict","PanelRightPage","logout","check_ability","state","window","localStorage","getItem","ability","setState","removeItem","location","replace","ModelStore","on","removeListener","MyActions","user","getIntance","getKlass","the_ability","a","link","icon","result","ab","title","value","ignoreCache","view","panelClose","className","Fragment","dashboard","reloadCurrent","shortners","onClick","user_settings","login","behran","logged_in","Component","TagShow","props","tag","simple-list","confirmed","Layout","submit","handleChangeValue","users","user_id","editable","$f7route","assignedUsers","tag_id","obj","href","target","position","slot","color","ios","aurora","md","tags","backLink","back","fab","handleChange","TagList","mediaList","crypto","lib","WordArray","random","after","subtitle","text","TagIndex","loadData","Framework7","toast","show","receiving","closeTimeout","React","TagForm","isConfirmed","isConfirmedTag","label","placeholder","defaultValue","onInput","e","confirmable","radio","checked","name","not_confirmed","onChange","JSON","parse","confirm","strong","fill","disabled","editing","TagCreate","$f7router","navigate","tag_form","DocumentUpdate","CommentForm","new_address","inputId","rnd","resizable","clearButton","description","maxlength","submitItem","CommentList","items","inset","external","src","screencap","width","ShortnerShow","shortner","deleteItemConfirm","deleteItem","the_items","$$","val","shortner_id","self","$f7","dialog","are_you_sure","alert","panelOpen","f7","ShortnerList","ShortnerIndex","ShortnerForm","ShortnerCreate","shortner_form","ProfileShow","profile","fullname","avatar","height","actuals","metas","channels","profiles","ProfileList","ProfileIndex","inner","disableButtonText","cancel","search","query","q","ProfileForm","profile_info","firstname","surename","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","content","fid","newState","assign","concat","uuid","profile_form","LoginForm","sign_up","email","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","reload","username","Login","setItem","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","incomplete_data","SignUp","verification","verification_code","enter_verification_code","verificationCode","Verification","NotificationList","notifications","colorClass","notification","seen","target_type","target_id","notification_text","NotificationIndex","loadMore","loggedIn","path","component","LoginJwt","interaction","el","interaction_type","interactionable_id","interactionable_type","source_type","source_id","TagUpdate","ShortnerUpdate","ProfileUpdate","app","requestPermission","getToken","err","navigator","serviceWorker","addEventListener","message","create","firebaseMessaging","payload","titleRightText","cssClass","body","open","f7params","theme","panel","rightBreakpoint","routes","createContext","left","cover","themeDark","right","reveal","pushState","main","Boolean","hostname","match","registration","scope","use","Framework7React","ReactDOM","render","createElement","App","document","getElementById"],"mappings":"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","file":"static/js/main.5285796f.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.multipleList = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  listMultipleModel(list){\n    this.multipleList = list.data;\n    this.klass = list.klass\n    this.emit(\"got_multiple_list\");\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getMutipleList(){\n    return this.multipleList\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"MULTIPLE_LIST_MODEL_SUCCESS\": {\n        this.listMultipleModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\n\nconst server= conf.server;\nconsole.log(server)\n//const server='http://localhost:3001/v1';\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","export const conf = { \n'server' : 'http://localhost:3001/v1'\n};","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nconst initializedFirebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbQ1NDkKB_E_SbfgHY3w-esVWhjwj9DeE\",\n    authDomain: \"tavan-e768d.firebaseapp.com\",\n    databaseURL: \"https://tavan-e768d.firebaseio.com\",\n    projectId: \"tavan-e768d\",\n    storageBucket: \"tavan-e768d.appspot.com\",\n    messagingSenderId: \"498708095861\",\n    appId: \"1:498708095861:web:00428b1330b24e1eece93c\",\n    measurementId: \"G-55DLXZ4VZY\"\n \n});\n//const messaging = initializedFirebaseApp.messaging();\nvar messaging = null;\nif (firebase.messaging.isSupported()){\n  messaging = initializedFirebaseApp.messaging();\n  messaging.usePublicVapidKey(\n    // Project Settings => Cloud Messaging => Web Push certificates\n    \"BGtSQdySGVQOeOwFha6rSVdmtfIUo_V33Eq-RTRb5kUNLvvwM7AVGCLtChjnGlD50fudRx8D4Aw-7br71Qfefrc\"\n  );\n  \n} else {\n \n}\nexport { messaging }; ","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما',\n  'todo_list': 'تقسیم بندی کار',\n  'todo_participants': 'افراد',\n  'new_todo_participants': 'افراد جدید',\n  'not_found': 'چیزی یافت نشد',\n  'are_you_sure': 'مطمئن هستید؟',\n  'Confirmer': 'تایید کننده',\n  'time_sheets': 'کارنما',\n  'morning_report':'گزارش پیش از ظهر',\n  'afternoon_report':'گزارش بعد از ظهر',\n  'extra_report':'گزارش اضافه کاری',\n  'write_appropriate_details':'شرحی کامل بنویسید',\n  'associations':'مرتبط با',\n  'sheet_date':'تاریخ جدول',\n  'recipients':'دریافت کنندگان',\n  'sent_by_me': 'ارسال شده ها',\n  'sent_to_me':'دریافت شده ها',\n  'priority':'لولویت',\n  'normal':'عادی',\n  'high':'فوری',\n  'urgent':'بسیار فوری',\n  'archived': 'آرشیو شده',\n  'write_archive_note' : 'متن جمع بندی به منظور آرشیو سازی بنویسید',\n  'user_groups': 'گروه بندی کاربران',\n  'user_settings': 'تنظیمات شخصی',\n  'add_involvement_to_tasks':'افزودن همکاران به وظایف',\n  'remove_involvement_from_tasks':'حذف همکاران از وظایف',\n  'change_status_tasks':'تغییر وضعیت وظایف',\n  'add_works_to_tasks':'افزودن کار به وظایف',\n  'add_reports_to_tasks':'افزودن گزارش به وظایف',\n  'add_comments_to_tasks':'افزودن نظر به وظایف',\n  'add_involvement_to_works':'افزودن همکاران به کارها',\n  'remove_involvement_from_works':'حذف همکاران از کارها',\n  'change_status_works':'تغییر وضعیت کارها',\n  'add_todos_to_works':'افزودن تقسیم کار به کارها',\n  'add_reports_to_works':'افزودن گزارش به کارها',\n  'add_comments_to_works':'افزودن نظر به کارها',\n  'add_involvement_to_todos':'افزودن همکار به تقسیم کار',\n  'remove_involvement_from_todos':'حذف همکار از تقسیم کار',\n  'add_involvement_to_time_sheets':'افزودن گیرنده به کارنما',\n  'remove_involvement_from_timesheets':'حذف گیرنده از کارنما',\n  'notification_type':'شیوه اطلاع رسانی',\n  'mail_notification':'ایمیل',\n  'push_notification':'آگاهسازی وب',\n  'sms':'پیامک',\n  'if_someone_adds_you_youll_be_asked': 'چنانچه کسی شما را به یک فعالیت بیافزاید شما باید تایید کنید.',\n  'previous_attachments':'پیوست های قبلا آپلود شده',\n  'cas': 'احراز هویت مرکزی' ,\n  'profile': 'پروفایل',\n  'groups' : 'گروهبندی همکاران',\n  'confirmed':'تایید شده',\n  'not_confirmed': 'تایید نشده',\n  'blocked_list': 'کاربران مسدود شده',\n  'notifications': 'اطلاع رسانی',\n  'privacy':'حریم خصوصی',\n  'shortners' : 'نشانک ها',\n  'url': 'آدرس',\n  'new_address': 'آدرس جدید',\n  'href': 'آدرس',\n  'behran': 'بهران'\n}\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\n\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.check_ability = this.check_ability.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      ability: null,\n    }\n  }\n\n  logout() {\n    this.setState({ token: null });\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n      MyActions.getInstance('users', 'role', this.state.token);\n    }\n  }\n\n  getInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (user && klass === 'UserRole') {\n      console.log(user)\n      this.setState({\n        ability: user.the_ability\n      });\n    }\n\n  }\n\n  check_ability(a, link, icon) {\n    var result = []\n    if (this.state.ability) {\n      this.state.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <ListItem link={\"/\" + link + \"/\"} ignoreCache={true} key={'panel' + link} view=\"#main-view\" panelClose>\n              <i className={\"va ml-5 fa fa-\" + icon}></i>\n              <span>{dict[link]}</span>\n            </ListItem>\n          )\n        }\n      })\n    }\n    return result\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List className='fs-13'>\n\n            <ListItem link=\"/shortners/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-address-card-o\"></i>\n              <span>{dict.shortners}</span>\n            </ListItem>\n\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n              <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.behran} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.tag.confirmed]}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      user_id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability,\n        editable: tag.editable\n      });\n    }\n  }\n\n\n  submit() {\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag && this.state.editable) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { tag, editable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow \n          tag={tag} editable={editable} \n           submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n\n  if (props.isConfirmed) {\n    var isConfirmedTag = true;\n  } else {\n    var isConfirmedTag = false\n  }\n\n  function confirm() {\n    if (props.confirmable) {\n      return (\n        <List>\n          <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n            }}>\n          </ListItem>\n          <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n            }}>\n          </ListItem>\n        </List>\n      )\n    }\n\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n      {confirm()}\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} submit={this.submit} editing={true} confirmable={confirmable}\n          handleChange={this.handleChangeValue} isConfirmed={isConfirmed}\n          />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {\n      id:this.state.id, title: this.state.title, \n      confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        isConfirmed: tag.confirmed,\n        confirmable: tag.confirmable\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} isConfirmed={isConfirmed} submit={this.submit} confirmable={confirmable}\n          editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListInput, Chip, Block, Link, Button, Card, CardHeader, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InputTrigger from 'react-input-trigger';\n\n\nconst CommentForm = (props) => {\n\n  return (\n    <Card>\n      <CardHeader>{dict.new_address}</CardHeader>\n      <List >\n        <ListInput\n          label={dict.title}\n          inputId={\"title-\" + props.rnd}\n          type=\"text\"\n          className=\"form-element\"\n          placeholder='...'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.description}\n          inputId={\"description-\" + props.rnd}\n          type=\"textarea\"\n          className=\"form-element\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ description: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label='url'\n          className=\"form-element\"\n          inputId={\"href-\" + props.rnd}\n          type=\"text\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ href: e.target.value })\n          }}\n        />\n      </List>\n      <CardFooter>\n        <Link></Link>\n        <Link className=\"btn-notice\"></Link>\n        <Button className=\"col btn\" fill onClick={props.submitItem}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    function editLink(item) {\n        var result = []\n        if (item.editable) {\n            result.push(\n                <Link onClick={() => props.deleteCommentConfirm(item.id)}>\n                    <i className=\"va ml-5 fa fa-trash\"></i>\n                </Link>\n            )\n        }\n        result.push(\n            <Link onClick={() => props.replyToComment(item.id)}>\n                <i className=\"va ml-5 fa fa-reply\"></i>\n            </Link>\n        )\n        return (result)\n    }\n\n    function title(item) {\n        var result = [<span>{item.profile.fullname}: </span>]\n        if (item.reply_to) {\n            result.push(<span className='fs-10 f-color-gray'>{dict.in_reply_to} {item.reply_to}</span>)\n        }\n        return (result)\n    }\n    if (props.items) {\n\n        for (let i = 0; i < props.items.length; i++) {\n            items.push(\n                <Card>\n                    <List mediaList inset>\n                        <ListItem\n                            href={props.items[i].href}\n                            key={'item' + props.items[i].id}\n                            target='_blank'\n                            external={true}\n                            id={'cm-' + props.items[i].id}\n                            title={props.items[i].title}\n                            subtitle={props.items[i].description}\n                        >\n                            <img slot=\"media\" src={props.items[i].screencap} width=\"100\" />\n                        </ListItem>\n                    </List>\n                </Card>\n\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {items}\n            </React.Fragment >\n        )\n    }\n    else {\n    return (<BlockTitle></BlockTitle>)\n}\n}\nexport default CommentList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon, Preloader, Block, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ItemForm from \"../items/form\"\nimport ItemList from \"../items/list\"\n\n\nconst ShortnerShow = (props) => {\n  function editable() {\n    if (props.editable) {\n      return (\n        <React.Fragment>\n          <List simple-list className='mb-20'>\n            \n            <ItemForm handleChange={props.handleChange} submitItem={props.submitItem} rnd={props.rnd} />\n            <ListItem><Link href={'https://r.ut.ac.ir/' + props.shortner.url}>https://r.ut.ac.ir/{props.shortner.url}</Link></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n  if (props.shortner) {\n    return (\n      <React.Fragment>\n        <ItemList items={props.items} />\n        {editable()}\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ShortnerShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ShortnerShow from \"../../containers/shortners/show\"\nimport crypto from 'crypto-js';\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submitItem = this.submitItem.bind(this);\n    this.deleteItemConfirm = this.deleteItemConfirm.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      shortner: null,\n      id: null,\n      title: null,\n      description: null,\n      href: null,\n      items: null,\n      editable: false,\n      rnd: crypto.lib.WordArray.random(32),\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('shortners', this.$f7route.params['shortnerId'], this.state.token);\n  }\n\n  getInstance() {\n    var shortner = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (shortner && klass === 'Shortner') {\n      this.setState({\n        shortner: shortner,\n        id: shortner.id,\n        items: shortner.the_items,\n        editable: shortner.editable\n      });\n    }\n    this.$$('#title-' + this.state.rnd).val('');\n    this.$$('#description-' + this.state.rnd).val('');\n    this.$$('#href-' + this.state.rnd).val('');\n  }\n\n\n  submitItem() {\n    const { id, title, description, href } = this.state;\n    var data = { shortner_id: id, title: title, description: description, href: href }\n    MyActions.setInstance('items', data, this.state.token);\n  }\n\n\n  deleteItemConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteItem(id))\n  }\n\n  deleteItem(id) {\n    var data = { id: id }\n    MyActions.removeInstance('items', data, this.state.token, this.state.page);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.shortner && this.state.editable) {\n      return (\n        <Fab href={\"/shortners/\" + this.state.shortner.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { shortner, items, editable, rnd } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.shortners}  >\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n        <ShortnerShow\n          shortner={shortner} editable={editable}\n          submit={this.submit} handleChange={this.handleChangeValue}\n          submitItem={this.submitItem} deleteItemConfirm={this.deleteItemConfirm}\n          items={items} rnd={rnd}\n        />\n        {this.fab()}\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst ShortnerList = (props) => {\n\n  if (props.shortners) {\n    return (\n      <List mediaList>\n        {props.shortners.map((shortner) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/shortners/\" + shortner.id}\n            ignoreCache={true}\n            title={shortner.url}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default ShortnerList;\n","import React from \"react\";\nimport { Page, Navbar, Link, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport ShortnerList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst ShortnerIndex = (props) => {\n  return(\n    <Page>\n        <Navbar title={dict.shortners}  >\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/shortners/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ShortnerList shortners={props.shortners}/>\n    </Page>\n  )\n}\nexport default ShortnerIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ShortnerIndex from \"../../containers/shortners/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      shortners: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('shortners', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var shortners = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (shortners && klass === 'Shortner'){\n      this.setState({\n        shortners: shortners,\n      });\n    }\n  }\n\n  render() {\n    const {shortners} = this.state;\n    return(<ShortnerIndex shortners={shortners}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst ShortnerForm = (props) => {\n\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.shortner}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.url}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.shortner.url}\n          onInput={(e) => {\n            props.handleChange({ url: e.target.value })\n          }}\n        />\n      </List>\n\n      <Block strong>\n        <Row shortner=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default ShortnerForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ShortnerForm from \"../../containers/shortners/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ShortnerCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      shortner: {},\n      url: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {url: this.state.url}\n    MyActions.setInstance('shortners', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/shortners/');\n  }\n\n\n\n  render() {\n    const {shortner, url} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.shortner_form} backLink={dict.back} />\n        <BlockTitle>{dict.shortner_form}</BlockTitle>\n        <ShortnerForm \n          shortner={shortner} submit={this.submit} editing={true}\n          handleChange={this.handleChangeValue}\n          />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ShortnerForm from \"../../containers/shortners/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      shortner : {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {\n      id:this.state.id, title: this.state.title, \n      confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('shortners', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['shortnerId']) {\n      MyActions.getInstance('shortners', this.$f7route.params['shortnerId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var shortner = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (shortner && klass === 'Shortner'){\n      this.setState({\n        title: shortner.title,\n        id: shortner.id,\n        shortner: shortner,\n        isConfirmed: shortner.confirmed,\n        confirmable: shortner.confirmable\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/shortners/');\n  }\n\n\n  render() {\n        const {shortner, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.shortner_form} backLink={dict.back} />\n        <BlockTitle>{dict.shortner_form}</BlockTitle>\n        <ShortnerForm \n          shortner={shortner} isConfirmed={isConfirmed} submit={this.submit} confirmable={confirmable}\n          editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\n\nconst ProfileShow = (props) => {\n\n  if (props.profile) {\n    console.log(props)\n    return (\n      <React.Fragment>\n        <List className='fs-12'>\n          <ListItem\n            key={'profile-show' + props.profile.id}\n            title={props.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n\n        </List>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { profile } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        {this.fab()}\n        <ProfileShow profile={profile} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page, {}, this.state.token);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query}, this.state.token);\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  if (props.profile) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List >\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"40\" height=\"40\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        profile: profile,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n      });\n    }\n  }\n\n\n\n\n\n\n  render() {\n    const {profile, name, surename, avatar} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm profile={profile}\n          name={name} avatar={avatar} surename={surename} onDrop={this.onDrop}  \n         submit={this.submit} editing={true} \n         handleChange={this.handleChangeValue} \n         />\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List >\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Ftavan.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          \n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    if(this.$f7route.params['token']) {\n      MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n    }\n    if(this.state.token && this.state.token.length > 10){\n      MyActions.setInstance('users/validate_token', {}, this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n    if (klass === 'Validate') {\n      this.$f7router.navigate('/shortners/');\n      window.location.reload()\n    }\n    console.log(klass)\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n  }\n\n  setInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (klass === 'Validate') {\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    } else {\n      this.$f7router.navigate('/login_error/');\n      window.location.reload()\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List >\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    var klass = ModelStore.getKlass()\n    if (user && klass == 'Verify'){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/shortners/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader></CardHeader>\n        <CardContent>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\n\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport ShortnerShow from './components/shortners/show';\nimport ShortnerIndex from './components/shortners/index';\nimport ShortnerCreate from './components/shortners/create';\nimport ShortnerUpdate from './components/shortners/update';\n\n\n\n\n\n\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\n\n\n\nimport Login from './components/users/Login';\nimport LoginJwt from './components/users/LoginJwt';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\nimport NotificationIndex from './components/notifications/index';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/login_jwt/:token',\n    component: LoginJwt,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n  {\n    path: '/shortners/',\n    component: ShortnerIndex,\n  },\n  {\n    path: '/shortners/:shortnerId/edit',\n    component: ShortnerUpdate,\n  },\n  {\n    path: '/shortners/new',\n    component: ShortnerCreate,\n  },\n  {\n    path: '/shortners/:shortnerId',\n    component: ShortnerShow,\n  },\n\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n  </Page>\n);\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, { Component } from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n} from 'framework7-react';\nimport ModelStore from \"../stores/ModelStore\";\nimport * as MyActions from \"../actions/MyActions\";\nimport { messaging } from \"../init-fcm.js\";\n\n\nimport routes from '../routes';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n  async componentDidMount() {\n    const self = this;      \n    const app = self.$f7;\n\n    if (messaging) {\n      messaging.requestPermission()\n        .then(async function () {\n          const token = await messaging.getToken();\n          var data = { token: token }\n          if (self.state.token && self.state.token.length > 10) {\n            MyActions.setInstance('devices', data, self.state.token);\n          }\n        })\n        .catch(function (err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n    }\n    navigator.serviceWorker.addEventListener(\"message\", (message) => {\n\n      app.notification.create({\n        icon: '',\n\n        title: message.data.firebaseMessaging.payload.notification.title,\n        titleRightText: '',\n        cssClass: 'notification',\n        subtitle: message.data.firebaseMessaging.payload.notification.body,\n        closeTimeout: 5000,\n      }).open();\n    });\n\n\n  }\n  // Framework7 parameters here\n\n  render() {\n    const f7params = {\n      id: 'io.framework7.testapp', // App bundle ID\n      name: 'Framework7', // App name\n      theme: 'aurora', // Automatic theme detection\n      panel: {\n        rightBreakpoint: 960,\n      },\n      view: {\n        //ignoreCache: true,\n        //reloadCurrent: true\n      },\n      // App routes\n      routes,\n    };\n\n    const server = React.createContext('http://localhost:3001/v1/');\n    return (\n      <App params={f7params}>\n        {/* Statusbar */}\n        <Statusbar />\n\n        {/* Left Panel */}\n        <Panel left cover themeDark>\n          <View url=\"/panel-left/\" />\n        </Panel>\n\n        {/* Right Panel */}\n        <Panel right reveal themeDark>\n          <View url=\"/panel-right/\" />\n        </Panel>\n\n        {/* Main View */}\n        <View id=\"main-view\" url=\"/app\" pushState={true} main className=\"safe-areas\" />\n\n      </App>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}