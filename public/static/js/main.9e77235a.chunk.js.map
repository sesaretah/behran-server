{"version":3,"sources":["js/fa.js","dispatcher.js","stores/ModelStore.js","conf.jsx","actions/MyActions.js","init-fcm.js","Dict.jsx","containers/layouts/PanelRightPage.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/statuses/show.jsx","components/statuses/show.jsx","containers/statuses/list.jsx","containers/statuses/index.jsx","components/statuses/index.jsx","containers/statuses/form.jsx","components/statuses/create.jsx","components/statuses/update.jsx","containers/tasks/involvementList.jsx","containers/profiles/simpleList.jsx","containers/tasks/involvements.jsx","containers/statuses/simpleList.jsx","containers/tasks/status.jsx","containers/tasks/works.jsx","containers/tasks/reports.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/tasks/show.jsx","components/tasks/show.jsx","containers/tasks/list.jsx","containers/tasks/workList.jsx","containers/tasks/index.jsx","components/tasks/index.jsx","containers/tasks/form.jsx","components/tasks/create.jsx","components/tasks/update.jsx","containers/works/involvementList.jsx","containers/works/involvements.jsx","containers/works/status.jsx","containers/works/reports.jsx","containers/todos/todosInvolvementList.jsx","containers/todos/form.jsx","containers/todos/list.jsx","containers/works/show.jsx","components/works/show.jsx","containers/works/list.jsx","containers/works/index.jsx","components/works/index.jsx","containers/works/form.jsx","components/works/create.jsx","components/works/update.jsx","components/todos/create.jsx","components/todos/update.jsx","containers/time_sheets/show.jsx","components/time_sheets/show.jsx","containers/time_sheets/list.jsx","containers/time_sheets/index.jsx","components/time_sheets/index.jsx","containers/time_sheets/form.jsx","components/time_sheets/create.jsx","components/time_sheets/update.jsx","containers/profiles/experties.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/reports/show.jsx","components/reports/show.jsx","containers/reports/list.jsx","containers/reports/index.jsx","components/users/loggedIn.js","components/reports/index.jsx","containers/uploads/form.jsx","containers/reports/form.jsx","components/reports/uploader.js","components/reports/create.jsx","components/reports/update.jsx","containers/groups/show.jsx","components/groups/show.jsx","containers/groups/list.jsx","containers/groups/index.jsx","components/groups/index.jsx","containers/groups/form.jsx","components/groups/create.jsx","components/groups/update.jsx","containers/settings/form.jsx","components/settings/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","routes.js","containers/layouts/HomePage.jsx","components/users/Verification.jsx","containers/layouts/NotFoundPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Dispatcher","modelStore","list","multipleList","instance","klass","this","i","len","data","length","push","emit","console","log","action","type","listModel","listMultipleModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","bind","conf","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","initializedFirebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","isSupported","usePublicVapidKey","dict","PanelRightPage","logout","state","window","localStorage","getItem","setState","removeItem","location","replace","Fragment","user_settings","view","panelClose","onClick","className","dashboard","link","tasks","profiles","time_sheets","settings","ignoreCache","roles","metas","statuses","tags","user_groups","title","login","tavan","logged_in","Component","UserOptions","props","options","value","users","email","AssignmentForm","assignment_form","form","inset","smartSelect","name","onChange","e","handleChange","user_id","target","strong","tag","fill","submit","UserList","body","crypto","lib","WordArray","random","color","removeRole","ios","aurora","md","AccessControlForm","access_control_form","label","item","placeholder","onInput","abilityTitle","defaultValue","abilityValue","true","false","addAbility","AbilityList","ability","removeAbility","access_control_list","RoleShow","role","simple-list","assignedUsers","Layout","handleChangeValue","ModelStore","on","removeListener","MyActions","$f7route","getIntance","getKlass","role_id","ability_title","ability_value","obj","href","position","slot","backLink","back","fab","RoleList","mediaList","after","subtitle","text","RoleIndex","loadData","Framework7","toast","show","receiving","closeTimeout","React","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","JSON","parse","Default","disabled","editing","RoleCreate","default_role","$f7router","navigate","role_form","DocumentUpdate","TagShow","removeTag","tag_id","TagList","TagIndex","TagForm","defaultTag","TagCreate","default_tag","tag_form","StatusShow","status","style","backgroundColor","the_color","removeStatus","status_id","StatusList","StatusIndex","StatusForm","class","aria-hidden","readonly","StatusCreate","loadPalette","self","$f7","colorPicker","create","inputEl","targetEl","targetElSetBackgroundColor","modules","openIn","hex","closed","c","onPageAfterIn","pageAfterIn","status_form","ParticipantList","involvements","option","involvement","selected","addLink","removeProfile","editable","profile","remove","removeLink","data-open-in","changeRole","select","fullname","src","avatar","width","height","SimpleList","addProfile","add","Partcipants","task","coworkers","the_involvements","accordionList","accordionItem","simpleList","groups","group","addGroup","outline","search","floatingLabel","clearButton","searchProfile","query","addStatus","Statuses","add_stauts","searchStatus","Works","chip","work","result","deadline_alert","comment_alert","report_alert","priority","details","works","new","disableButtonText","cancel","inline","Reports","creation","t","date","Date","ODate","fromNow","reports","report","creation_date","content","CommentForm","comment_form","comment","maxlength","resizable","commentContent","CommentList","items","editLink","deleteCommentConfirm","comments","created_at","time","locale","ago","noGap","loadMore","more","TaskShow","access","segment","includes","submitComment","archived","tabletWidth","archive_note","arr","the_tags","is_public","public","private","discussions","removeTask","deleteComment","the_comments","user_access","task_id","q","profileId","profile_id","statusId","commentable_type","commentable_id","dialog","confirm","are_you_sure","alert","group_id","backLinkForce","panelOpen","f7","TaskList","alerts","header","sortChange","by_title","by_events","sort_by","WorkList","TaskIndex","your_tasks","your_newest_works","order","TaskForm","isPublic","isPublicTask","select_appropriate_title","required","write_appropriate_description","chips","deleteable","checkbox","write_archive_note","archiveNote","archive","deleteTaskConfirm","delete","deleteButton","TaskCreate","loadTags","deadline","start","startTime","deadlineTime","privateTask","app","autocomplete","openerEl","multiple","valueProperty","textProperty","searchbarDisableText","popupCloseLinkText","close","notFoundText","not_found","limit","searchbarPlaceholder","preloader","source","render","results","preloaderShow","request","method","dataType","success","indexOf","preloaderHide","change","concat","incomplete_data","filter","task_form","deleteTask","deleteInstance","defaultTask","default_task","selectedMode","InvolvementList","TodosInvolvementsList","lt","todo","check","todos","todoChecked","deleteTodoConfirm","addInvolvements","TodoForm","involvementChecked","workInvolvement","flag","workInvolvements","involvementCheck","TodoList","todo_list","WorkShow","start_date","start_date_j","deadline_date_j","removeWork","deleteTodo","the_todos","work_id","is_done","deadline_date","WorkIndex","WorkForm","privateWork","normal","high","urgent","select_a_date","start_time","select_a_time","deadline_time","deleteWorkConfirm","WorkCreate","loadCalender","loadTime","picker","rotateEffect","cols","values","split","textAlign","calendar","closeOnSelect","firstDay","weekendDays","monthNames","dayNames","dayNamesShort","a","work_form","deleteWork","defaultWork","default_work","TodoCreate","removeInvolvement","setInvolvements","work_involvements","TimeSheetShow","association","kind","associations","time_sheet","the_associations","a_type","sheet_date","jdate","morning_report","afternoon_report","extra_report","time_sheet_id","TimeSheetList","TimeSheetIndex","related_time_sheets","sent_to_me","mine_time_sheets","sent_by_me","getMutipleList","page_mine","page_related","p","mine","related","TimeSheetForm","removeAssociation","write_appropriate_details","morningReport","afternoonReport","extraReport","recipients","TimeSheetCreate","loadAssociation","timeSheetDate","time_sheet_form","ExpertiesList","experties","expert","removeExperties","mediaBgColor","ProfileShow","useMemo","primary","tabActive","actuals","channels","tabbar","bottom","tabLink","tabLinkActive","addTag","ProfileList","ProfileIndex","inner","ProfileForm","profile_info","firstname","surename","new_experties","submitExperties","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","fid","newState","assign","uuid","profile_form","ReportShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","the_work","the_task","toolbar","readOnly","attachments","attachment","filename","interaction","removeComment","selectedChannel","sheetOpened","interaction_type","interactionable_id","interactionable_type","source_type","source_id","report_id","channel_id","sheet","ReportList","tooltip","substring","ReportIndex","pageContent","swipeable","loggedIn","Report","el","UploadForm","getUploadParams","meta","onChangeStatus","onSubmit","files","allFiles","f","forEach","autoUpload","submitButtonDisabled","inputContent","drag_or_browse","ReportForm","new_report","localization","translations","fa","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","uploadableType","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","responseText","ReportCreate","createEmpty","enc","Base64","stringify","convertToRaw","getCurrentContent","blocks","block","trim","taskId","workId","prev","prevstate","report_form","ReportUpdate","removeAttachment","workflow_form","GroupShow","the_grouping","GroupList","GroupIndex","GroupForm","grouping","removeGrouping","groupings","GroupCreate","loadGrouping","group_form","tag_grouping","SettingForm","setting","notification_setting","changeSetting","if_someone_adds_you_youll_be_asked","blockList","removeBlocked","notification_type","mail_notification","push_notification","sms","add_involvement_to_tasks","remove_involvement_from_tasks","change_status_tasks","add_works_to_tasks","add_reports_to_tasks","add_comments_to_tasks","add_involvement_to_works","remove_involvement_from_works","change_status_works","add_todos_to_works","add_reports_to_works","add_comments_to_works","add_involvement_to_todos","remove_involvement_from_todos","add_involvement_to_time_sheets","remove_involvement_from_timesheets","SettingCreate","loadBlockList","prevState","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","$$","focusin","username","Login","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","SignUp","verification","verification_code","enter_verification_code","verificationCode","path","component","user","setItem","reload","Verification","RoleUpdate","SettingUpdate","GroupUpdate","StatusUpdate","TaskUpdate","TagUpdate","TimeSheetUpdate","WorkUpdate","TodoUpdate","ProfileUpdate","requestPermission","getToken","err","navigator","serviceWorker","message","notification","icon","firebaseMessaging","payload","titleRightText","cssClass","f7params","theme","panel","rightBreakpoint","routes","createContext","left","cover","themeDark","right","reveal","pushState","main","Boolean","hostname","match","registration","scope","use","Framework7React","ReactDOM","createElement","App","document","getElementById"],"mappings":"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","file":"static/js/main.9e77235a.chunk.js","sourcesContent":["module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.multipleList = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  listMultipleModel(list){\n    this.multipleList = list.data;\n    this.klass = list.klass\n    this.emit(\"got_multiple_list\");\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getMutipleList(){\n    return this.multipleList\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"MULTIPLE_LIST_MODEL_SUCCESS\": {\n        this.listMultipleModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","export const conf = { \n'server' : '/v1'\n};","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\n\nconst server= conf.server;\nconsole.log(server)\n//const server='http://localhost:3001/v1';\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nconst initializedFirebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbQ1NDkKB_E_SbfgHY3w-esVWhjwj9DeE\",\n    authDomain: \"tavan-e768d.firebaseapp.com\",\n    databaseURL: \"https://tavan-e768d.firebaseio.com\",\n    projectId: \"tavan-e768d\",\n    storageBucket: \"tavan-e768d.appspot.com\",\n    messagingSenderId: \"498708095861\",\n    appId: \"1:498708095861:web:00428b1330b24e1eece93c\",\n    measurementId: \"G-55DLXZ4VZY\"\n \n});\n//const messaging = initializedFirebaseApp.messaging();\nvar messaging = null;\nif (firebase.messaging.isSupported()){\n  messaging = initializedFirebaseApp.messaging();\n  messaging.usePublicVapidKey(\n    // Project Settings => Cloud Messaging => Web Push certificates\n    \"BGtSQdySGVQOeOwFha6rSVdmtfIUo_V33Eq-RTRb5kUNLvvwM7AVGCLtChjnGlD50fudRx8D4Aw-7br71Qfefrc\"\n  );\n  \n} else {\n \n}\nexport { messaging }; ","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما',\n  'todo_list': 'تقسیم بندی کار',\n  'todo_participants': 'افراد',\n  'new_todo_participants': 'افراد جدید',\n  'not_found': 'چیزی یافت نشد',\n  'are_you_sure': 'مطمئن هستید؟',\n  'Confirmer': 'تایید کننده',\n  'time_sheets': 'جداول زمان کار',\n  'morning_report':'گزارش پیش از ظهر',\n  'afternoon_report':'گزارش بعد از ظهر',\n  'extra_report':'گزارش اضافه کاری',\n  'write_appropriate_details':'شرحی کامل بنویسید',\n  'associations':'مرتبط با',\n  'sheet_date':'تاریخ جدول',\n  'recipients':'دریافت کنندگان',\n  'sent_by_me': 'ارسال شده ها',\n  'sent_to_me':'دریافت شده ها',\n  'priority':'لولویت',\n  'normal':'عادی',\n  'high':'فوری',\n  'urgent':'بسیار فوری',\n  'archived': 'آرشیو شده',\n  'write_archive_note' : 'متن جمع بندی به منظور آرشیو سازی بنویسید',\n  'user_groups': 'گروه بندی کاربران',\n  'user_settings': 'تنظیمات شخصی',\n  'add_involvement_to_tasks':'افزودن همکاران به وظایف',\n  'remove_involvement_from_tasks':'حذف همکاران از وظایف',\n  'change_status_tasks':'تغییر وضعیت وظایف',\n  'add_works_to_tasks':'افزودن کار به وظایف',\n  'add_reports_to_tasks':'افزودن گزارش به وظایف',\n  'add_comments_to_tasks':'افزودن نظر به وظایف',\n  'add_involvement_to_works':'افزودن همکاران به کارها',\n  'remove_involvement_from_works':'حذف همکاران از کارها',\n  'change_status_works':'تغییر وضعیت کارها',\n  'add_todos_to_works':'افزودن تقسیم کار به کارها',\n  'add_reports_to_works':'افزودن گزارش به کارها',\n  'add_comments_to_works':'افزودن نظر به کارها',\n  'add_involvement_to_todos':'افزودن همکار به تقسیم کار',\n  'remove_involvement_from_todos':'حذف همکار از تقسیم کار',\n  'add_involvement_to_time_sheets':'افزودن گیرنده به جداول زمان کار',\n  'remove_involvement_from_timesheets':'حذف گیرنده از جداول زمان کار',\n  'notification_type':'شیوه اطلاع رسانی',\n  'mail_notification':'ایمیل',\n  'push_notification':'آگاهسازی وب',\n  'sms':'پیامک',\n  'if_someone_adds_you_youll_be_asked': 'چنانچه کسی شما را به یک فعالیت بیافزاید شما باید تایید کنید.',\n  'previous_attachments':'پیوست های قبلا آپلود شده',\n  'cas': 'احراز هویت مرکزی'\n};\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n\n  logout(){\n    this.setState({token: null});\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n            <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List className='fs-13'>\n            <ListItem link=\"/tasks/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-tasks\"></i>\n              <span>{dict.tasks}</span>\n            </ListItem>\n            \n            <ListItem link=\"/profiles/\"  view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profiles}</span>\n            </ListItem>\n\n            <ListItem link=\"/time_sheets/\"  view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-hourglass-o\"></i>\n              <span>{dict.time_sheets}</span>\n            </ListItem>\n            \n            </List>\n            <BlockTitle> <i className=\"va ml-5 fa fa-cogs\"></i>{dict.settings}</BlockTitle>\n            <List className='fs-13'>\n            <ListItem link=\"/roles/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-shield\"></i>\n              <span>{dict.roles}</span>\n            </ListItem>\n            <ListItem link=\"/metas/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-th\"></i>\n              <span>{dict.metas}</span>\n            </ListItem>\n            <ListItem link=\"/statuses/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-circle-o\"></i>\n              <span>{dict.statuses}</span>\n            </ListItem>\n            <ListItem link=\"/tags/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-tags\"></i>\n              <span>{dict.tags}</span>\n            </ListItem>\n\n            <ListItem link=\"/groups/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-bullseye\"></i>\n              <span>{dict.user_groups}</span>\n            </ListItem>\n\n            <ListItem link=\"/settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-cog\"></i>\n              <span>{dict.user_settings}</span>\n            </ListItem>\n\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment> \n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.tavan} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.assignment_form}</BlockTitle>\n        <List form inset>\n          <ListItem\n            title={dict.email}\n            smartSelect\n            >\n            <select name=\"content\"\n              onChange={(e) => {  props.handleChange({ user_id: e.target.value}) }}>\n              <UserOptions users={props.users}/>\n            </select>\n          </ListItem>\n        </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n      </React.Fragment>\n    )\n  }\n  export default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Icon, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List form inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                    <Button className=\"col\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      default_role: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('tags/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeTag(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, tag_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('tags/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { tag, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow tag={tag} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeTag={this.removeTag} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n  if (props.defaultTag) {\n    var isDefaultTag = true;\n  } else {\n    var isDefaultTag = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      default_tag: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_tag: this.state.defaultTag}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm tag={tag} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      defaultTag: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_tag: this.state.defaultTag}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        defaultTag: tag.default_tag\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, defaultTag} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm tag={tag} defaultTag={defaultTag} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst StatusShow = (props) => {\n  if (props.status){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.status.title}</ListItem>\n        </List>\n\n        <List simple-list>\n          <ListItem style={{backgroundColor: props.status.the_color}}>{props.status.the_color}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default StatusShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusShow from \"../../containers/statuses/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeStatus = this.removeStatus.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('statuses', this.$f7route.params['statusId'], this.state.token);\n  }\n\n  getInstance() {\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status') {\n      this.setState({\n        status: status,\n        id: status.id,\n        assignedUsers: status.users,\n        ability: status.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { status_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('statuses/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.status) {\n      return (\n        <Fab href={\"/statuses/\" + this.state.status.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeStatus(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, status_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('statuses/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { status, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.statuses} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <StatusShow status={status} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeStatus={this.removeStatus} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst StatusList = (props) => {\n\n  if (props.statuses) {\n    return (\n      <List mediaList>\n        {props.statuses.map((status) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/statuses/\" + status.id}\n            ignoreCache={true}\n            title={status.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default StatusList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport StatusList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst StatusIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.statuses} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/statuses/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <StatusList statuses={props.statuses}/>\n    </Page>\n  )\n}\nexport default StatusIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport StatusIndex from \"../../containers/statuses/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      statuses: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('statuses', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var statuses = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (statuses && klass === 'Status'){\n      this.setState({\n        statuses: statuses,\n      });\n    }\n  }\n\n  render() {\n    const {statuses} = this.state;\n    return(<StatusIndex statuses={statuses}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst StatusForm = (props) => {\n  if (props.status) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.status}</BlockTitle>\n        <List form>\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            defaultValue={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value })\n            }}\n          />\n  \n        </List>\n  \n        <div className=\"list \">\n          <ul>\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-media\">\n                <i class=\"fa fa-2x fa-circle-o demo-list-icon\" aria-hidden=\"true\" id=\"demo-color-picker-spectrum-value\"></i>\n                </div>\n                <div className=\"item-inner\">\n                  <div className=\"item-input-wrap\">\n                    <input type=\"text\" placeholder=\"Color\" value={props.color} readonly=\"readonly\" id=\"demo-color-picker-spectrum\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n  \n        <Block strong>\n          <Row tag=\"p\">\n            <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n\n}\nexport default StatusForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class StatusCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: {},\n      title: '',\n      color: '',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    const self = this;\n    const app = self.$f7;\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: '#ff0000',\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n  submit(){\n    var data = {title: this.state.title, color: this.state.color}\n    MyActions.setInstance('statuses', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n\n  render() {\n    const {status} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm status={status} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadPalette = this.loadPalette.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status : {},\n      title: null,\n      id: '',\n      color: '#fff',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    \n    const self = this;\n    const app = self.$f7;\n\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: this.state.color,\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, color: this.state.color}\n    MyActions.updateInstance('statuses', data,  this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['statusId']) {\n      MyActions.getInstance('statuses', this.$f7route.params['statusId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status'){\n      this.setState({\n        title: status.title,\n        id: status.id,\n        color: status.the_color,\n        status: status,\n      }, () => this.loadPalette());\n    } \n    console.log(status)\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n  render() {\n        const {status, title, color} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm status={status} title={title} color={color} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  function removeLink(involvement){\n    if (involvement.role !== 'Creator' && props.editable){\n      return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n    }\n  }\n\n  if (props.involvements) {\n    function select(involvement) {\n      if ( props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n           {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.profiles) {\n    function addLink(profile){\n        if (props.addProfile){\n            return(<Link onClick={()=> props.addProfile(profile.id)}>{dict.add}</Link>)\n        } \n        if (props.removeProfile){\n            return(<Link onClick={()=> props.removeProfile(profile.id)}>{dict.remove}</Link>)\n        } \n    }\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          after={addLink(profile)}>\n          <img slot=\"media\" src={profile.avatar} width=\"27\" height=\"27\"/>\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Toggle, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                    <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                        <AccordionContent>\n                            <List simpleList>\n                                {props.task.groups.map((group) =>\n                                    <ListItem>\n                                        <span>{group.title}</span>\n                                        <Toggle onChange={(e) => props.addGroup(e,group.id)}/>\n                                    </ListItem>\n                                )}\n                            </List>\n                            <List >\n                                <ListInput\n                                    outline\n                                    label={dict.search}\n                                    floatingLabel\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    clearButton\n                                    onInput={(e) => {\n                                        props.searchProfile({ query: e.target.value })\n                                    }}\n                                />\n                            </List>\n                            <SimpleList profiles={props.profiles} addProfile={props.addProfile} />\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n            )\n        }\n    }\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <InvolvementList\n                            involvements={props.task.the_involvements} removeProfile={props.removeProfile}\n                            changeRole={props.changeRole} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { List, ListItem, Link, Icon, Chip } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.statuses) {\n    function addLink(status) {\n      if (props.addStatus) {\n        return (<Link onClick={() => props.addStatus(status.id)}>{dict.select}</Link>)\n      }\n    }\n    return (\n      <List>\n        {props.statuses.map((status) =>\n          <ListItem\n            title={\n              <div className=\"chip\" >\n                <div className=\"chip-media\" style={{ backgroundColor: status.the_color }} >\n                  <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                  <i className=\"icon material-icons md-only\"></i>\n                </div>\n                <div className=\"chip-label\">{status.title}</div>\n              </div>}\n            after={addLink(status)}\n          />\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status){\n        if(status) {\n            return(\n                <div>\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{status.title}</div>\n                </div>\n            </div>\n            )\n        } else {\n        return(<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                <List >\n                    <ListInput\n                        outline\n                        label={dict.search}\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"\"\n                        clearButton\n                        onInput={(e) => {\n                            props.searchStatus({ query: e.target.value })\n                        }}\n                    />\n                </List>\n                <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n            </AccordionContent>)\n        }\n    }\n    if (props.task) {\n        \n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.task.status)}\n                >\n                {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, Row, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Works = (props) => {\n\n    function chip(work) {\n        var result = []\n\n        if (work.deadline_alert) {\n            result.push(\n                <span className='color-red ml-5'>\n                    <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n\n        if (work.comment_alert) {\n            result.push(\n                <span className='color-green ml-5'>\n                    <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.report_alert) {\n            result.push(\n                <span className='color-blue ml-5'>\n                    <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.status) {\n            result.push(\n\n                <div className=\"chip\" key={'work-status-chip' + work.id }>\n                    <div className=\"chip-media\" style={{ backgroundColor: work.status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{work.status.title}</div>\n                </div>\n            )\n\n        } else {\n            result.push(<span className='mr-5'>{dict.add_stauts}</span>)\n        }\n        return (result)\n    }\n\n    function editable() {\n        if (props.editable) {\n            return (<Link href={'/works/new/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n        }\n    }\n\n    function title(work){        \n        return(<span>{work.title}</span>)\n    }\n\n    function text(work) {\n        var result = []\n        if (work.priority === 'high'){\n            result.push(<span className='va-2 fs-8 bg-yellow ml-10'>{dict[work.priority]}</span> )\n        }\n        if (work.priority === 'urgent'){\n            result.push(<span className='va-2 fs-8 bg-orange ml-10'>{dict[work.priority]}</span> )\n        }\n        result.push(<span  className='pd-5'>{work.details}</span>)\n        return(result)\n    }\n\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.works}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.works.map((work) =>\n                            <ListItem\n                                key={'work'+work.id}\n                                className='fs-11 work-media'\n                                link={\"/works/\" + work.id}\n                                title={title(work)}\n                                after={chip(work)}\n                                text={text(work)}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Works;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.task) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return (<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return (<Link href={'/reports/new/tasks/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InputTrigger from 'react-input-trigger';\n\n\nconst CommentForm = (props) => {\n  return (\n    <Card>\n      <CardHeader>{dict.comment_form}</CardHeader>\n     <List form>\n        <ListInput\n          label={dict.comment}\n          id=\"cm-form\"\n          type=\"textarea\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ commentContent: e.target.value })\n          }}\n        />\n        </List>\n      <CardFooter>\n        <Link></Link>\n        <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    function editLink(comment) {\n        if (comment.editable) {\n            return (\n                <Link onClick={() => props.deleteCommentConfirm(comment.id)}>\n                    <i className=\"va ml-5 fa fa-trash\"></i>\n                </Link>\n            )\n        }\n    }\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var date = new Date(new window.ODate(props.comments[i].created_at))\n            var time =\n                <React.Fragment>\n                    {editLink(props.comments[i])}\n                    <Moment locale=\"fa\" fromNow ago>{date}</Moment>\n                    {dict.ago}\n                </React.Fragment>\n            items.push(\n                <ListItem\n                    key={'comment' + props.comments[i].id}\n                    className='fs-10'\n                    text={time}\n                    title={props.comments[i].profile.fullname + ':'}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" height=\"44\" />\n                </ListItem>\n\n\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <BlockTitle></BlockTitle>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (<BlockTitle></BlockTitle>)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Works from \"./works\";\nimport Reports from \"./reports\";\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\nconst TaskShow = (props) => {\n  if (props.task && props.access) {\n    function tags() {\n      var arr = []\n      props.task.the_tags.map((tag) =>\n        arr.push(<Chip key={'task-tag' + tag.id} text={tag.title} />)\n      )\n      return (arr)\n    }\n\n    function archived(){\n      if(props.task.archived){\n        return(\n          <Row>\n          <Col width='100' tabletWidth='100'>\n          <Card className='fs-11 card-orange'>\n            <CardContent>\n            <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {dict.archived} <br/>\n            {props.task.archive_note}\n            </CardContent>\n            \n          </Card>\n          </Col>\n        </Row>\n        )\n      }\n\n    }\n\n    function isPublic() {\n      if (props.task.is_public) {\n        return (dict.public)\n      } else {\n        return (dict.private)\n      }\n    }\n\n    function access(segment) {\n      if (segment === 'statuses') {\n        var editable = false\n        if (props.access.includes('statuses')) {\n          editable = true\n        }\n        return (\n          <Statuses\n            task={props.task} searchStatus={props.searchStatus} editable={editable}\n            statuses={props.statuses} addStatus={props.addStatus}\n          />)\n      }\n\n      if (segment === 'involvements') {\n        var editable = false\n        if (props.access.includes('involvements')) {\n          editable = true\n        }\n        return (\n          <Involvements\n            task={props.task} searchProfile={props.searchProfile}\n            removeProfile={props.removeProfile} addProfile={props.addProfile}\n            profiles={props.profiles} changeRole={props.changeRole}\n            editable={editable} addGroup={props.addGroup}\n          />)\n      }\n\n\n      if (segment === 'works') {\n        var editable = false\n        if (props.access.includes('works')) {\n          editable = true\n        }\n        return (<Works task={props.task} editable={editable} ></Works>)\n      }\n\n      if (segment === 'reports') {\n        var editable = false\n        if (props.access.includes('reports')) {\n          editable = true\n        }\n        return (<Reports task={props.task} editable={editable} ></Reports>)\n      }\n\n      if (segment === 'comments') {\n        if (props.access.includes('comments')) {\n          return (\n            <CommentForm\n              model={props.task} submit={props.submitComment}\n              handleChange={props.handleChange} \n        \n             \n            />\n          )\n        }\n      }\n\n      if (segment === 'edit') {\n        if (props.access.includes('edit')) {\n          return (<Link href={'/tasks/' + props.task.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n        }\n      }\n\n      if (segment === 'view') {\n        if (props.access.includes('view')) {\n          return (\n            <React.Fragment>\n              {archived()}\n              <Row>\n                <Col width='100' tabletWidth='50'>\n                  <Card>\n                    <CardHeader>\n                      {props.task.title}\n                      {access('edit')}\n                    </CardHeader>\n                    <CardContent>\n                      <List simple-list>\n                        <ListItem className='fs-11' title=''>{tags()}</ListItem>\n                        <ListItem className='fs-11' title=''>{isPublic()}</ListItem>\n                        <ListItem className='fs-11' title=''>{props.task.details}</ListItem>\n                      </List>\n\n                    </CardContent>\n                    <CardFooter>\n                      {access('statuses')}\n                    </CardFooter>\n                  </Card>\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                  {access('involvements')}\n                </Col>\n              </Row>\n\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('works')}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('reports')}\n                </Col>\n              </Row>\n\n              <BlockTitle>{dict.discussions}</BlockTitle>\n\n              {access('comments')}\n              <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n\n\n            </React.Fragment>\n\n          )\n        }\n      }\n\n    }\n\n\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default TaskShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskShow from \"../../containers/tasks/show\"\nimport { messaging } from \"../../init-fcm.js\";\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      comments: null,\n      works: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      access: [],\n      commentContent: '',\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n  }\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        task: task,\n        id: task.id,\n        assignedUsers: task.users,\n        works: task.works,\n        comments: task.the_comments,\n        access: task.user_access\n      });\n    }\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token, this.state.page);\n    });\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    var data = { task_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj) {\n    this.setState({ profiles: [] });\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  searchStatus(obj) {\n    this.setState({ statuses: [] });\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  addProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.setInstance('tasks/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId) {\n    var data = { id: this.state.id, status_id: statusId }\n    MyActions.setInstance('tasks/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.removeInstance('tasks/involvements', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role }\n    MyActions.setInstance('tasks/change_role', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'Task', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.task) {\n      return (\n        <Fab href={\"/tasks/\" + this.state.task.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n\n  removeTask(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, task_id: this.state.id }, this.state.token);\n  }\n\n  addGroup(e, id) {\n    var data = { id: this.state.id, group_id: id }\n    if (e.target.checked) {\n      MyActions.setInstance('tasks/group_involvements', data, this.state.token);\n    } else {\n      MyActions.removeInstance('tasks/group_involvements', data, this.state.token);\n    }\n  }\n\n\n\n  render() {\n    const {\n      task, users, assignedUsers, ability,\n      profiles, statuses, works, commentContent,\n      comments, access, } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tasks} backLink={dict.back} backLinkForce={true}>\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n        <TaskShow\n          task={task} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility}\n          removeTask={this.removeTask} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus} works={works}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} addGroup={this.addGroup}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(task) {\n    var result = []\n    if (task.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.tasks) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n          <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n            <select name=\"superhero\" onChange={(e) => { props.sortChange({ title: e.target.value }) }}>\n              <option value=\"title\" >{dict.by_title}</option>\n              <option value=\"events\" selected>{dict.by_events}</option>\n            </select>\n            <div className=\"item-content\">\n              <div className=\"item-inner\">\n                <div className=\"item-title\">{dict.sort_by}</div>\n              </div>\n            </div>\n          </a>\n\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.tasks.map((task) =>\n              <ListItem key={'task'+task.id} title={task.title} text={task.details} after={alerts(task)} link={'/tasks/' + task.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n         {/* <span className='fs-10'>\n            <span className='color-red ml-5'>\n              <i class=\"fa fa-bell-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.deadline_near}\n            </span>\n            <span className='color-blue ml-5'>\n              <i class=\"fa fa-file-text-o  ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_report}\n            </span>\n            <span className='color-green mr-5'>\n              <i class=\"fa fa-comments-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_comments}\n            </span>\n            </span>*/}\n\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TaskList;\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(work) {\n    var result = []\n    if (work.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.works) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.works.map((work) =>\n              <ListItem   key={'workList'+work.id} title={work.title} text={dict.task + ':'+ work.task.title} after={alerts(work)} link={'/works/' + work.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link } from 'framework7-react';\nimport TaskList from \"./list\"\nimport WorkList from \"./workList\"\nimport { dict } from '../../Dict';\n\nconst TaskIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.tasks} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tasks/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n\n      </Row>\n\n    </Page>\n  )\n}\nexport default TaskIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TaskIndex from \"../../containers/tasks/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  sortChange(i){\n    MyActions.getList('tasks', this.state.page, {order: i.title}, this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tasks', this.state.page, {}, this.state.token);\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'Task'){\n      this.setState({\n        tasks: list,\n      });\n    }\n    if (list && klass === 'Work'){\n      this.setState({\n        works: list,\n      });\n    }\n  }\n\n  render() {\n    const {tasks, works} = this.state;\n    return(<TaskIndex tasks={tasks} works={works} sortChange={this.sortChange}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Chip, ListInput, Block, Row, Button, BlockTitle, Card, ListItem, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TaskForm = (props) => {\n  if (props.isPublic) {\n    var isPublicTask = true;\n  } else {\n    var isPublicTask = false;\n  }\n  function tags() {\n    if (props.tags) {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='autocomplete-standalone-ajax'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n              {dict.tags}:\n        </div>\n          </a>\n        </div>]\n      props.tags.map((tag) =>\n        chips.push(<Chip text={tag.title} deleteable onClick={() => props.removeTag(tag.id)} />)\n      )\n      return chips\n    }\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteTaskConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function archive() {\n    if (props.editing) {\n      return (\n        <List>\n          <ListItem checkbox value={props.archived} checked={props.archived} title={dict.archived}\n            onChange={(e) => {\n              props.handleChange({ archived: !JSON.parse(e.target.value) })\n            }}\n          ></ListItem>\n          <ListInput\n            label={dict.archive_note}\n            type=\"textarea\"\n            placeholder={dict.write_archive_note}\n            value={props.archiveNote}\n            onInput={(e) => {\n              props.handleChange({ archiveNote: e.target.value })\n            }}\n          />\n\n        </List>)\n    }\n\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.task}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.task.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.details}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListItem radio value={false} checked={!isPublicTask} name=\"selectedMode\" title={dict.private}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isPublicTask} name=\"selectedMode\" title={dict.public}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n\n\n        <ListItem title={tags()}></ListItem>\n\n      </List>\n\n      {archive()}\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Col>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Col>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default TaskForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport { conf } from '../../conf';\n\nexport default class TaskCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0:00',\n      deadlineTime: '0:00',\n      privateTask: true,\n      tags: [],\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  submit() {\n    var data = {\n      title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    const self = this;\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n\n  render() {\n    const { task, tags, isPublic } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} removeTag={this.removeTag} tags={tags} isPublic={isPublic}\n          submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.deleteTaskConfirm = this.deleteTaskConfirm.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n     \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      id: null,\n      title: null,\n      details: null,\n      privateTask: true,\n      details: null,\n      tags: [],\n      isPublic: false,\n      selectedMode: false,\n      archived: false,\n      archiveNote: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  submit() {\n    var data = {\n      id: this.state.id, title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags, archive_note: this.state.archiveNote,\n      archived: this.state.archived\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['taskId']) {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        title: task.title,\n        details: task.details,\n        id: task.id,\n        task: task,\n        defaultTask: task.default_task,\n        tags: task.the_tags,\n        isPublic: task.is_public,\n        archived: task.archived, \n        archiveNote: task.archive_note, \n      }, () => this.loadTags());\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj)\n    this.setState(obj);\n  }\n\n  deleteTaskConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteTask)\n  }\n\n  deleteTask(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('tasks', data, this.state.token);\n  }\n\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  setInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.$f7router.navigate('/tasks/' + task.id);\n    }\n  }\n\n\n  render() {\n    const { task, defaultTask, title, details, isPublic, tags, selectedMode, archived, archiveNote } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} title={title} isPublic={isPublic}\n          tags={tags} removeTag={this.removeTag} selectedMode={selectedMode}\n          details={details} defaultTask={defaultTask} submit={this.submit}\n          editing={true} handleChange={this.handleChangeValue}\n          deleteTaskConfirm={this.deleteTaskConfirm}\n          archived={archived} archiveNote={archiveNote}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst InvolvementList = (props) => {\n\n  if (props.involvements) {\n    function removeLink(involvement){\n      if (involvement.role !== 'Creator' && props.editable){\n        return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n      }\n    }\n\n    function select(involvement) {\n      if (involvement.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n             {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default InvolvementList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                    <AccordionContent>\n                        <List >\n                            <ListInput\n                                outline\n                                label={dict.search}\n                                floatingLabel\n                                type=\"text\"\n                                placeholder=\"\"\n                                clearButton\n                                onInput={(e) => {\n                                    props.searchProfile({ query: e.target.value })\n                                  }}\n                            />\n                        </List>\n                        <SimpleList profiles={props.profiles} addProfile={props.addProfile}  />\n                    </AccordionContent>\n                </ListItem>\n            </List>\n                )\n        }\n    }\n    if (props.work) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <InvolvementList \n                            involvements={props.work.the_involvements} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable} />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status) {\n        if (status) {\n            return (\n                <div>\n                    <div className=\"chip\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                    <List >\n                        <ListInput\n                            outline\n                            label={dict.search}\n                            floatingLabel\n                            type=\"text\"\n                            placeholder=\"\"\n                            clearButton\n                            onInput={(e) => {\n                                props.searchStatus({ query: e.target.value })\n                            }}\n                        />\n                    </List>\n                    <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n                </AccordionContent>)\n        }\n    }\n    if (props.work) {\n\n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    key={'status' + props.work.id}\n                    title={chip(props.work.status)}\n                >\n                    {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Block, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.work) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return(<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/reports/new/works/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.work.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    +\n              </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListItem, Chip, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TodosInvolvementsList = (props) => {\n\n  function addInvolvements(todo) {\n    var chips = []\n    todo.involvements.map((involvement) =>\n      chips.push(<Chip key={'chip' +'-'+todo.id +'-'+ involvement.profile.id} className=\"ml-5\" text={involvement.profile.fullname} />)\n    )\n    chips.push(<Link key={'todoEdit'+ todo.id} href={'/todos/' + todo.id + '/edit'}><i className=\"ml-5 fa fa-edit\"></i></Link>)\n    chips.push(<Link key={'todoDelete'+ todo.id} onClick={() => props.deleteTodoConfirm(todo.id)}><i className=\"ml-5 fa fa-trash\"></i></Link>)\n    return (chips)\n\n  }\n  function lt(todo) {\n    if (todo.check) {\n      return ('of-scroll line-through ')\n    } else {\n      return ('of-scroll')\n    }\n  }\n  if (props.todos) {\n    return (\n      <List className='fs-11 ' >\n        {props.todos.map((todo) =>\n\n          <li className={lt(todo)} key={'todo' + todo.id}>\n            <label className=\"item-content item-checkbox\">\n              <input type=\"checkbox\" value=\"\" checked={todo.check} onChange={(e) => props.todoChecked(todo.id,e)}></input>\n              <i className=\"icon icon-checkbox\"></i>\n              <div className=\"item-inner of-scroll\">\n                <div className=\"item-title of-visible mw-auto\">{todo.title}</div>\n                <div className=\"item-after\">\n                  <span>\n                    {addInvolvements(todo)}\n                  </span>\n                </div>\n              </div>\n            </label>\n          </li>\n        )}\n      </List>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TodosInvolvementsList;\n        /*<ListItem\nclassName={lt(todo)}\ncheckbox\nchecked={todo.check}\nonChange={(e) => props.todoChecked(todo.id,e)}\ntitle={todo.title}\nafter={addInvolvements(todo)}>\n</ListItem>*/","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, Chip, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TodoForm = (props) => {\n  if (true) {\n    function involvementChecked(workInvolvement) {\n      var flag = false\n      props.involvements.map((involvement) => {\n        if (involvement.id === workInvolvement.profile.id) {\n          flag = true\n        }\n      }\n      )\n      return flag\n    }\n    return (\n      <List form>\n        <ListInput\n          key='todos-form-title'\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <List className='fs-11 ' >\n          {props.workInvolvements.map((workInvolvement) =>\n            <ListItem\n              key={workInvolvement.id}\n              checkbox\n              checked={involvementChecked(workInvolvement)}\n              onChange={(e) => props.involvementCheck(workInvolvement.profile.id, e)}\n              title={workInvolvement.profile.fullname}\n              after=''>\n            </ListItem>\n\n          )}\n        </List>\n\n\n\n        <Block strong>\n          <Row tag=\"p\">\n            <Col>\n              <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n            </Col>\n          </Row>\n        </Block>\n      </List>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default TodoForm;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Button } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport TodosInvolvementsList from \"./todosInvolvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\nimport  TodoForm from \"./form\";\n\nconst TodoList = (props) => {\n    if (props.work) {\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/todos/new/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card className='bg-gray'>\n                <CardHeader>\n                    {dict.todo_list}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <TodosInvolvementsList \n                        todos={props.todos} todoChecked={props.todoChecked} \n                        deleteTodoConfirm={props.deleteTodoConfirm}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    \n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default TodoList;\n","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Reports from \"./reports\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport TodoList from \"../todos/list\"\n\nconst WorkShow = (props) => {\nconsole.log(props.work)\n  function archived(){\n    if(props.work.archived){\n      return(\n        <Row>\n        <Col width='100' tabletWidth='100'>\n        <Card className='fs-11 card-orange'>\n          <CardContent>\n          <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {dict.archived} <br/>\n          {props.work.task.archive_note}\n          </CardContent>\n          \n        </Card>\n        </Col>\n      </Row>\n      )\n    }\n\n  }\n\n  function access(segment) {\n    if (segment === 'statuses') {\n      var editable = false\n      if (props.access.includes('statuses')) {\n        editable = true\n      }\n      return (\n        <Statuses\n          work={props.work} searchStatus={props.searchStatus} editable={editable}\n          statuses={props.statuses} addStatus={props.addStatus}\n        />\n      )\n    }\n\n    if (segment === 'involvements') {\n      var editable = false\n      if (props.access.includes('involvements')) {\n        editable = true\n      }\n      return (\n        <Involvements\n          work={props.work} searchProfile={props.searchProfile}\n          removeProfile={props.removeProfile} addProfile={props.addProfile}\n          profiles={props.profiles} changeRole={props.changeRole}\n          editable={editable} />\n      )\n    }\n\n    if (segment === 'todos') {\n      var editable = false\n      if (props.access.includes('todos')) {\n        editable = true\n      }\n      return (\n        <TodoList \n        work={props.work} todos={props.todos} \n        editable={editable} todoChecked={props.todoChecked}\n        deleteTodoConfirm={props.deleteTodoConfirm}\n        />\n      )\n    }\n\n\n    if (segment === 'reports') {\n      var editable = false\n      if (props.access.includes('reports')) {\n        editable = true\n      }\n      return (<Reports work={props.work} editable={editable} ></Reports>)\n    }\n\n    if (segment === 'comments') {\n      if (props.access.includes('comments')) {\n        return (<CommentForm model={props.work} submit={props.submitComment} handleChange={props.handleChange} />)\n      }\n    }\n\n    if (segment === 'edit') {\n      if (props.access.includes('edit')) {\n        return (<Link href={'/works/' + props.work.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n      }\n    }\n\n\n    if (segment === 'view') {\n      if (props.access.includes('view')) {\n        return (\n          <React.Fragment>\n            {archived()}\n            <Row>\n              <Col width='100' tabletWidth='50'>\n                <Card>\n                  <CardHeader>\n                    {props.work.title}\n                    {access('edit')}\n                  </CardHeader>\n                  <CardContent>\n                    <List simple-list>\n                      <ListItem className='fs-11' title={dict.task + ': ' + props.work.task.title} href={'/tasks/' + props.work.task.id}></ListItem>\n                      <ListItem className='fs-11' title={dict.start_date + ': ' + props.work.start_date_j}></ListItem>\n                      <ListItem className='fs-11' title={dict.deadline + ': ' + props.work.deadline_date_j}></ListItem>\n\n                      <ListItem className='fs-11' title=''></ListItem>\n                    </List>\n                    <span className='fs-11'>{props.work.details}</span>\n\n                  </CardContent>\n                  <CardFooter>\n                    {access('statuses')}\n                  </CardFooter>\n                </Card>\n              </Col>\n\n              <Col width='100' tabletWidth='50'>\n                {access('involvements')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('todos')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('reports')}\n              </Col>\n            </Row>\n            {access('comments')}\n\n            <CommentList comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}  />\n\n          </React.Fragment>\n        )\n      }\n    }\n\n  }\n\n  if (props.work && props.access) {\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default WorkShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkShow from \"../../containers/works/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.todoChecked = this.todoChecked.bind(this);\n    this.deleteTodoConfirm = this.deleteTodoConfirm.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      commentContent: '',\n      access: null,\n      comments: null,\n      todos: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        work: work,\n        id: work.id,\n        assignedUsers: work.users,\n        ability: work.ability,\n        comments: work.the_comments,\n        access: work.user_access,\n        todos: work.the_todos,\n        //involvementss: work.the_involvementss\n      });\n    }\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    var data = { work_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('works/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('works/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('works/involvements', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('works/abilities', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('works/change_role', data, this.state.token);\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token, this.state.page);\n    });\n  }\n\n\n  submitComment() {\n    var data = { commentable_type: 'Work' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  todoChecked(id, e){\n    var data={id: id, is_done: e.target.checked}\n    MyActions.setInstance('todos/check_todo', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.work) {\n      return (\n        <Fab href={\"/works/\" + this.state.work.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  deleteTodoConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteTodo(id))\n  }\n\n  deleteTodo(id){\n    var data = {id: id}\n    MyActions.removeInstance('todos', data, this.state.token);\n  }\n\n  removeWork(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, work_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('works/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { work, users, assignedUsers, ability, profiles, statuses, comments, commentContent, access, todos } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.works} backLinkForce={true} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n        <WorkShow \n          work={work} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeWork={this.removeWork} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} todos={todos} \n          todoChecked={this.todoChecked} deleteTodoConfirm={this.deleteTodoConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return(<Moment date={date} fromNow></Moment>)\n  }\n  if (props.works) {\n    console.log(props.works)\n    \n    return (\n      <List>\n        {props.works.map((work) =>\n        <ListItem key={'worklist' + work.id} header={work.title} title={title(work.deadline_date)} link={'/works/'+work.id}></ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport WorkList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst WorkIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.works} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <WorkList works={props.works}/>\n    </Page>\n  )\n}\nexport default WorkIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport WorkIndex from \"../../containers/works/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var works = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (works && klass === 'Work'){\n      this.setState({\n        works: works,\n      });\n    }\n  }\n\n  render() {\n    const {works} = this.state;\n    return(<WorkIndex works={works}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Col, ListInput, Block, Row, Button, BlockTitle, Card, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst WorkForm = (props) => {\n  if (props.privateWork) {\n    var isPrivateWork = true;\n  } else {\n    var isPrivateWork = false\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteWorkConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.work}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.work.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.content}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.priority}\n          type=\"select\"\n          defaultValue={props.priority}\n          onChange={(e) => {\n            props.handleChange({ priority: e.target.value })\n          }}\n        >\n          <option value=\"normal\">{dict.normal}</option>\n          <option value=\"high\">{dict.high}</option>\n          <option value=\"urgent\">{dict.urgent}</option>\n        </ListInput>\n\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_date}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"start-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.startTime} readonly=\"readonly\" id=\"start-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"deadline-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.deadlineTime} readonly=\"readonly\" id=\"deadline-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default WorkForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\n\nexport default class WorkCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadTime();\n  }\n\n  loadTime(){\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n    \n    app.picker.create({\n      inputEl: '#start-time-picker',\n        rotateEffect: true,\n        on: {\n          closed: function (picker) {\n            self.setState({ startTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n        rotateEffect: true,        on: {\n          closed: function (picker) {\n            self.setState({ deadlineTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n  }\n\n  loadCalender(){\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          console.log(c.value[0].a)\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [new Date()],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n  submit() {\n    var data = { \n      title: this.state.title, details: this.state.details, \n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      task_id: this.$f7route.params['taskId'], priority: this.state.priority\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.$f7router.navigate('/works/'+work.id);\n    } else {\n      this.$f7router.navigate('/tasks/');\n    }\n    \n  }\n\n\n\n  render() {\n    const { work } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTime = this.loadTime.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.deleteWorkConfirm = this.deleteWorkConfirm.bind(this);\n    this.deleteWork = this.deleteWork.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      id: null,\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0 00',\n      deadlineTime: '0 00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTime();\n  }\n\n  loadTime() {\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n\n    app.picker.create({\n      inputEl: '#start-time-picker',\n      rotateEffect: true,\n      on: {\n        closed: function (picker) {\n          self.setState({ startTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n      rotateEffect: true, on: {\n        closed: function (picker) {\n          self.setState({ deadlineTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n  }\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [this.state.start],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [this.state.deadline],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          //console.log(c.value[0].a)\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n\n\n  submit() {\n    var data = { \n      id: this.state.id, title: this.state.title, details: this.state.details,\n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      priority: this.state.priority\n    }// start: new Date(this.state.start.setHours(startTime[0], startTime[1], 0, 0)).toISOString(), deadline:  new Date(this.state.deadline.setHours(deadlineTime[0], deadlineTime[1], 0, 0)).toISOString() }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['workId']) {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        title: work.title,\n        content: work.details,\n        id: work.id,\n        work: work,\n        start: new window.ODate(work.start_date),\n        deadline: new window.ODate(work.deadline_date),\n        startTime: work.start_time,\n        deadlineTime: work.deadline_time,\n        defaultWork: work.default_work,\n        priority: work.priority\n      }, () => this.loadCalender());\n    }\n  }\n\n  deleteWorkConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteWork)\n  }\n\n  deleteWork(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('works', data, this.state.token);\n  }\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance() {\n    const self = this;\n    this.$f7router.navigate('/works/'+this.state.id);\n  }\n\n\n  render() {\n    const { work, defaultWork, title, content, startTime, deadlineTime, priority } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm \n        work={work} title={title} startTime={startTime} \n        deadlineTime={deadlineTime} content={content} \n        defaultWork={defaultWork} submit={this.submit} \n        editing={true} handleChange={this.handleChangeValue} \n        deleteWorkConfirm={this.deleteWorkConfirm}\n        priority={priority}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n\n  submit() {\n    var data = { \n        title: this.state.title, work_id: this.$f7route.params['workId'],\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        workInvolvements: work.the_involvements\n      });\n    }\n  }\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  render() {\n    const { todo, involvements, workInvolvements } = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         involvements={involvements} removeInvolvement={this.removeInvolvement}\n        submit={this.submit} editing={true} involvementCheck={this.involvementCheck}\n        handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    this.setInvolvements = this.setInvolvements.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      id: null, \n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['todoId']) {\n      MyActions.getInstance('todos', this.$f7route.params['todoId'], this.state.token);\n    }\n  }\n\n\n  submit() {\n    var data = { \n        id: this.state.id,\n        title: this.state.title,\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeInvolvement(id) {\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n  getInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.setState({\n        title: todo.title,\n        id: todo.id,\n        //involvements: todo.involvement_tags,\n        workInvolvements: todo.work_involvements\n      }, () =>  this.setInvolvements());\n    }\n  }\n\n  setInvolvements(){\n    this.setState({ involvements: [] });\n    var arr = []\n    this.state.workInvolvements.map((workInvolvement) => {\n      if(workInvolvement.check){\n        arr.push({ id: workInvolvement.profile.id })\n      }\n    })\n    this.setState({ involvements: arr})\n  }\n\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n\n\n  render() {\n    const { todo, involvements, title , workInvolvements} = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         title={title} involvements={involvements} involvementCheck={this.involvementCheck}\n        removeInvolvement={this.removeInvolvement} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Chip, Icon, Preloader, Block } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst TimeSheetShow = (props) => {\n  function association(kind) {\n    var chips = [\n      <div>\n        <div className=\"item-title fs-11\">\n          {dict.associations}:\n        </div>\n      </div>\n    ]\n    if (props.time_sheet.the_associations) {\n      props.time_sheet.the_associations.map((association) => {\n        if (association.kind == kind) {\n          chips.push(<a href={'/' + association.a_type + '/' + association.id + '/'}><Chip text={association.title} /></a>)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.sheet_date}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.jdate}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.time_sheet.the_involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n        <BlockTitle>{dict.morning_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.morning_report}</ListItem>\n          <ListItem>{association('Morning')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.afternoon_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.afternoon_report}</ListItem>\n          <ListItem>{association('Afternoon')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.extra_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.extra_report}</ListItem>\n          <ListItem>{association('Extra')}</ListItem>\n        </List>\n\n        <CommentForm model={props.time_sheet} submit={props.submitComment} handleChange={props.handleChange}/>\n\n        <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default TimeSheetShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetShow from \"../../containers/time_sheets/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      time_sheet: null,\n      id: null,\n      user_id: null,\n      comments: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n  }\n\n  getInstance() {\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        time_sheet: time_sheet,\n        id: time_sheet.id,\n        comments: time_sheet.the_comments,\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { time_sheet_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'TimeSheet' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.time_sheet) {\n      return (\n        <Fab href={\"/time_sheets/\" + this.state.time_sheet.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { time_sheet, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.time_sheets} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TimeSheetShow \n          time_sheet={time_sheet} \n          submit={this.submit} handleChange={this.handleChangeValue} \n          comments={comments}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter, Card, Button, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst TimeSheetList = (props) => {\n\n  if (props.time_sheets) {\n    return (\n      <Card>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.time_sheets.map((time_sheet) =>\n              <ListItem\n                key={crypto.lib.WordArray.random(32)}\n                link={\"/time_sheets/\" + time_sheet.id}\n                ignoreCache={true}\n                title={time_sheet.jdate}\n                after=\"\"\n                subtitle={time_sheet.profile.fullname}\n                text=\"\"\n              >\n                 <img slot=\"media\" src={time_sheet.profile.avatar} width=\"28\" height=\"28\"/>\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n            <Button  onClick={() => props.loadMore(props.page)}>{dict.more}</Button>\n        </CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TimeSheetList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Preloader, Block, Card, CardFooter, CardContent, CardHeader } from 'framework7-react';\nimport TimeSheetList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst TimeSheetIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.time_sheets} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/time_sheets/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.related_time_sheets} header={dict.sent_to_me}\n            page='page_related' loadMore={props.loadMore}\n          />\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.mine_time_sheets} header={dict.sent_by_me}\n            page='page_mine' loadMore={props.loadMore}\n          />\n        </Col>\n      </Row>\n\n    </Page>\n  )\n}\nexport default TimeSheetIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TimeSheetIndex from \"../../containers/time_sheets/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.getList = this.getList.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      mine_time_sheets: [],\n      related_time_sheets: [],\n      page_mine: 1,\n      page_related: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n  \n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getMultipleList('time_sheets', this.state.page, {}, this.state.token);\n  }\n\n\n  loadMore(p) {\n\n    if( p === 'page_mine') {\n      this.setState({ page_mine: this.state.page_mine + 1 }, () => {\n        MyActions.getList('time_sheets/mine', this.state.page_mine, {}, this.state.token);\n      });\n    }\n    if( p === 'page_related') {\n      this.setState({ page_related: this.state.page_related + 1 }, () => {\n        MyActions.getList('time_sheets/related', this.state.page_related, {}, this.state.token);\n      });\n    }\n  }\n\n  getList(){\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    console.log(list)\n    if (list && klass === 'TimeSheetMine'){\n      this.setState({\n        mine_time_sheets: this.state.mine_time_sheets.concat(list),\n      });\n    }\n    if (list && klass === 'TimeSheetRelated'){\n      this.setState({\n        related_time_sheets: this.state.related_time_sheets.concat(list),\n      });\n  }\n}\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    if (multiple && klass === 'TimeSheet'){\n      this.setState({\n        mine_time_sheets: multiple.mine,\n        related_time_sheets: multiple.related,\n      });\n    }\n  }\n\n  render() {\n    const {mine_time_sheets, related_time_sheets} = this.state;\n    return(<TimeSheetIndex \n      mine_time_sheets={mine_time_sheets} related_time_sheets={related_time_sheets}\n      loadMore={this.loadMore}\n      />)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Col, Row, Button, Link, Chip, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TimeSheetForm = (props) => {\n  function association(type) {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id={type + '-association'}>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n            {dict.associations}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.associations) {\n      props.associations.map((association) => {\n        if (association.kind == type) {\n          chips.push(<Chip text={association.title} deleteable onClick={() => props.removeAssociation(association.id, 'Morning')} />)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  function involvements() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-involvements'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.recipients}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.involvements) {\n      props.involvements.map((involvement) => {\n        chips.push(<Chip text={involvement.fullname} deleteable onClick={() => props.removeInvolvement(involvement.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <Card>\n        <CardHeader>{dict.time_sheet}</CardHeader>\n        <CardContent>\n          <List form>\n            <ListInput\n              label={dict.morning_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.morning_report}\n              onInput={(e) => {\n                props.handleChange({ morningReport: e.target.value })\n              }}\n            />\n\n\n            <ListItem title={association('Morning')}></ListItem>\n\n            <ListInput\n              label={dict.afternoon_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.afternoon_report}\n              onInput={(e) => {\n                props.handleChange({ afternoonReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Afternoon')}></ListItem>\n\n            <ListInput\n              label={dict.extra_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.extra_report}\n              onInput={(e) => {\n                props.handleChange({ extraReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Extra')}></ListItem>\n\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title item-label\">{dict.sheet_date}</div>\n                  <div className=\"item-input-wrap\">\n                    <input className=\"date-input\" type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"sheet-date-calendar\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n\n            <ListItem title={involvements()}></ListItem>\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n          <Button fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  else {\n    return (null)\n  }\n}\nexport default TimeSheetForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      associations: [],\n      involvements: [],\n      time_sheet: {},\n      timeSheetDate:  new Date(),\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.setInstance('time_sheets', data, this.state.token);\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(value[value.length - 1])\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +  '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    \n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      id: null,\n      associations: [],\n      involvements: [],\n      time_sheet: null,\n      timeSheetDate:  new Date(),\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.$f7route.params['timeSheetId']) {\n      MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {\n      id: this.state.id,\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.updateInstance('time_sheets', data, this.state.token);\n  }\n\n  getInstance(){\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        id: time_sheet.id,\n        time_sheet: time_sheet,\n        timeSheetDate: time_sheet.date,\n        involvements: time_sheet.the_involvements,\n        associations: time_sheet.the_associations\n      }, () => this.loadAssociation());\n\n    }\n    console.log(time_sheet)\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(self.state.associations)\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +'/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ExpertiesList = (props) => {\n\n    if (props.experties) {\n        if (props.editable) {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a onClick={() => props.removeExperties(expert)}>\n                            <Chip text={expert} mediaBgColor=\"orange\">\n                                <Icon slot=\"media\" aurora=\"fa:times\"></Icon>\n                            </Chip>\n                        </a>\n                    )}\n                </Row>\n            )\n        } else {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a href={'/experties/'+expert}><Chip text={expert} /></a>\n                    )}\n                </Row>\n            )\n        }\n\n    } else {\n        return (null)\n    }\n}\nexport default ExpertiesList;\n","import React from \"react\";\nimport { Card, Chip, CardContent, CardHeader, Col, Row, Tab, Tabs, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport ExpertiesList from \"./experties\";\n\nconst ProfileShow = (props) => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  if (props.profile) {\n    return (\n\n      <Tabs>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"50\">\n\n              <Card>\n                <CardHeader>\n                  <img src={props.profile.avatar} width=\"80\" height=\"80\"></img>\n                  <div className='profile-card'>{props.profile.fullname}</div>\n                </CardHeader>\n                <CardContent>\n                  <ExpertiesList experties={props.profile.experties} />\n                </CardContent>\n              </Card>\n            </Col>\n\n            <Col width=\"100\" tabletWidth=\"50\">\n\n            </Col>\n          </Row>\n\n        </Tab>\n        <Tab id=\"tab-2\" className=\"page-content\">\n          <Row noGap>\n            <Col width=\"100\" tabletWidth=\"50\">\n              <Card>\n                <CardHeader>Chart</CardHeader>\n                <CardContent className='ta-center'>\n\n                </CardContent>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\">\n          <div className=\"block-title\">Only Tablet Side By Side</div>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"100\">\n              <div className=\"timeline timeline-sides\">\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs>\n\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    \n    this.state = {\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n        actuals: profile.actuals,\n        metas: profile.metas,\n        channels: profile.channels,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { profile, actuals, metas, channels } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-user-circle\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-bar-chart\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-list\"></i></Link>\n        </Toolbar>\n        {this.fab()}\n        <ProfileShow profile={profile} actuals={actuals} channels={channels} metas={metas} addTag={this.addTag}/>\n\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  console.log(props)\n  if (props.name && props.metas) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List form>\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n        <Card>\n          <CardHeader>{dict.experties}</CardHeader>\n          <CardContent>\n            <List>\n              <ListItem>\n                <ExpertiesList experties={props.experties} editable={true} removeExperties={props.removeExperties}/>\n              </ListItem>\n            </List>\n\n            <List form>\n              <ListInput\n                label={dict.new_experties}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.expert}\n                onInput={(e) => {\n                  props.handleChange({ expert: e.target.value })\n                }}\n              />\n\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submitExperties}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"80\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    this.submitExperties = this.submitExperties.bind(this);\n    this.removeExperties = this.removeExperties.bind(this);\n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      metas: null,\n      metaId: null,\n      actuals: null,\n      experties: null,\n      expert: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  submitExperties(){\n    var data = {id: this.state.id, experties: this.state.expert}\n    MyActions.setInstance('profiles/add_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n  removeExperties(experties){\n    var data = {id: this.state.id, experties: experties}\n    MyActions.setInstance('profiles/remove_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        metas: profile.metas,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n        experties: profile.experties\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {name, surename, avatar,metas, actuals, experties} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} experties={experties} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue} submitExperties={this.submitExperties} removeExperties={this.removeExperties}/>\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { List, BlockTitle, ListItem, Block, Row, Col, Button, Link } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\n\nconst ReportShow = (props) => {\n  console.log(props)\n  if (props.report && props.report.draft) {\n    const contentState = convertFromRaw(props.report.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    function parent(){\n      if(props.report.the_work){\n        return( <ListItem title={props.report.the_work.title} href={'/works/'+props.report.the_work.id}></ListItem>)\n      }\n      if(props.report.the_task){\n        return( <ListItem title={props.report.the_task.title} href={'/tasks/'+props.report.the_task.id}></ListItem>)\n      }\n    }\n\n    function creation(t) {\n      var date = new Date(new window.ODate(t))\n      return(<Moment date={date} fromNow></Moment>)\n    }\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n\n          </Row>\n        </Block>\n        <List simple-list>\n          {parent()}\n        </List>\n\n        <List simple-list>\n        <ListItem\n            key={'profile' + props.report.profile.id}\n            title={props.report.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.report.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        </List>\n\n\n\n\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.report.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true}\n        />\n        <List simple-list>\n        <ListItem title={creation(props.report.creation_date)}></ListItem>\n        </List>\n\n        <BlockTitle>{dict.attachments}</BlockTitle>\n        <List>\n          {props.report.attachments.map((attachment) =>\n            <li className=\"\">\n              <div className=\"item-content\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title\">\n                    <a className=\"link external\" target=\"_blank\"  href={attachment.link}>\n                      <i className=\"fa ml-5 fa-cloud-download\" aria-hidden=\"true\"></i>\n                      {attachment.filename}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </li>\n          )}\n        </List>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  BlockTitle,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportShow from \"../../containers/reports/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      report: null,\n      id: null,\n      page: 1,\n      selectedChannel: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n  }\n\n  getInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        id: report.id,\n        comments: report.comments\n      });\n    }\n    console.log(report)\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        comments: report.comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.report) {\n      return (\n        <Fab href={\"/reports/\" + this.state.report.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  submit() {\n    var data = { report_id: this.state.id, channel_id: this.state.selectedChannel }\n    MyActions.setInstance('shares', data, this.state.token);\n    const self = this;\n    self.$f7.sheet.close('.demo-sheet')\n  }\n\n  submitComment() {\n    var data = { report_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { report, sheetOpened, channels, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <ReportShow report={report} comments={comments} channels={channels} submitComment={this.submitComment} removeComment={this.removeComment} submit={this.submit} interaction={this.interaction} handleChange={this.handleChangeValue} loadMore={this.loadMore} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\n  if (props.reports && props.reports.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.reports.map((report) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={report.profile.fullname} href={'/profiles/' + report.profile.id}><img src={report.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + report.profile.id}>{report.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/reports/' + report.id}>{report.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    \n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {report.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/reports/' + report.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport ReportList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ReportIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/reports/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ReportIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ReportIndex from \"../../containers/reports/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Report extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      reports: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('reports', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ reports: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('reports/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    if (report) {\n      this.setState({ reports: this.state.reports.map(el => (el.id === report.id ? Object.assign({}, el, report) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var reports = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (reports.length > 0 && klass === 'Report') {\n      this.setState({\n        reports: this.state.reports.concat(reports),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { reports } = this.state;\n    return (<ReportIndex interaction={this.interaction} loadMore={this.loadMore} reports={reports} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from 'framework7-react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../../css/upload.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { dict } from \"../../Dict\";\nimport { conf } from '../../conf';\nconst server= conf.server\n\nconst UploadForm = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { fields:{'upload[title]':props.title, 'upload[uuid]': props.uuid}, url: server+'/uploads' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => f.remove())\n  }\n\n  return (\n    <Card>\n      <CardHeader>{dict.attachment}</CardHeader>\n      <CardContent>\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      autoUpload={true}\n      submitButtonDisabled={true}\n      inputContent={dict.drag_or_browse}\n    />\n    </CardContent>\n    </Card>\n  )\n}\n\nexport default UploadForm;\n","import React from \"react\";\nimport { List, BlockTitle, ListInput, Link, CardFooter, Button, Card, CardHeader } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport UploadForm from \"../uploads/form\"\nimport fa from '../../js/fa.js';\n\nconst ReportForm = (props) => {\n  function attachments() {\n    if (props.previous_attachments) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.previous_attachments}</BlockTitle>\n          <List>\n            {props.attachments.map((attachment) =>\n              <li className=\"\">\n                <div className=\"item-content\">\n                  <div className=\"item-inner\">\n                    <div className=\"item-title\">\n                      <a className=\"link\" onClick={() => props.removeAttachment(attachment.id)}>\n                        <i className=\"fa ml-5 fa-trash\" aria-hidden=\"true\"></i>\n                        {attachment.filename}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            )}\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n  if (props.report) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_report}</CardHeader>\n          <List form>\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              defaultValue={props.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n        <UploadForm uploadableType='Report' uuid={props.uuid} />\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportForm;\n","import { conf } from '../../conf';\nexport function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', conf.server+'/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\";\nimport crypto from 'crypto-js';\n\nexport default class ReportCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      interaction: null,\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.$f7route.params['callerType'] == 'tasks'){\n      taskId = this.$f7route.params['callerId']\n    }\n    if (this.$f7route.params['callerType'] == 'works'){\n      workId = this.$f7route.params['callerId']\n    }\n    var data = { task_id: taskId, work_id: workId, uuid: this.state.uuid, title: this.state.title, content: value, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('reports', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n    console.log(this.state.uuid)\n  }\n\n  loadData() {\n    \n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n\n\n\n  render() {\n    const { report, editorState, uuid } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report_form}  backLink={dict.back} />\n        <ReportForm report={report} uuid={uuid} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\nimport crypto from 'crypto-js';\n\nexport default class ReportUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.removeAttachment = this.removeAttachment.bind(this);\n    \n\n    this.state = {\n      report: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      id: null,\n      title: null,\n      draft: null,\n      taskId:  null,\n      workId: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.state.task){\n      taskId = this.state.task.id\n    }\n    if (this.state.work){\n      workId = this.state.work.id\n    }\n    var data = {\n      id: this.state.id, task_id: taskId, work_id: workId, \n      uuid: this.state.uuid, title: this.state.title, content: value, \n      draft: convertToRaw(this.state.editorState.getCurrentContent()) \n    }\n    MyActions.updateInstance('reports', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['reportId']) {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      const contentState = convertFromRaw(report.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        report: report,\n        title: report.title,\n        id: report.id,\n        task: report.the_task,\n        work: report.the_work,\n        attachments: report.attachments,\n        editorState: editorState\n      });\n    }\n    console.log(report);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n  removeAttachment(id){\n    this.setState({\n      attachments: this.state.attachments.filter(function (attachment) {\n        return attachment.id !== id\n      })\n    });\n    var data = { id: id }\n    MyActions.removeInstance('uploads', data, this.state.token, this.state.page);\n  }\n\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n  render() {\n    const { report, editorState, uuid, title, attachments} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report} backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <ReportForm \n        report={report} attachments={attachments} title={title} \n        uuid={uuid} editorState={editorState} \n        onEditorStateChange={this.onEditorStateChange} submit={this.submit}  \n        handleChange={this.handleChangeValue} removeAttachment={this.removeAttachment}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst GroupShow = (props) => {\n  if (props.group){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.group.title}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.group.the_grouping.map((item) =>\n          <ListItem\n            key={'involvement' + item.profile.id}\n            title={item.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={item.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default GroupShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupShow from \"../../containers/groups/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: null,\n      id: null,\n      user_id: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n      });\n    }\n  }\n\n\n  submit() {\n    var data = { group_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.group) {\n      return (\n        <Fab href={\"/groups/\" + this.state.group.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { group } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.groups} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <GroupShow \n          group={group}  submit={this.submit} \n          handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst GroupList = (props) => {\n\n  if (props.groups) {\n    return (\n      <List mediaList>\n        {props.groups.map((group) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/groups/\" + group.id}\n            ignoreCache={true}\n            title={group.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default GroupList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport GroupList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst GroupIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.groups} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/groups/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <GroupList groups={props.groups}/>\n    </Page>\n  )\n}\nexport default GroupIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport GroupIndex from \"../../containers/groups/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      groups: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('groups', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var groups = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (groups && klass === 'Group'){\n      this.setState({\n        groups: groups,\n      });\n    }\n  }\n\n  render() {\n    const {groups} = this.state;\n    return(<GroupIndex groups={groups}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Chip } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst GroupForm = (props) => {\n  console.log(props)\n  function groupings() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-grouping'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.profiles}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.grouping) {\n      props.grouping.map((profile) => {\n        chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeGrouping(profile.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.group}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem title={groupings()}></ListItem>\n      </List>\n      \n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )}\nexport default GroupForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, grouping: this.state.grouping}\n    MyActions.setInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      title: null,\n      id: null,\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, grouping: this.state.grouping}\n    MyActions.updateInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n        title: group.title,\n        grouping: group.tag_grouping\n      });\n    }\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping, title, id} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        id={id} title={title}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Toggle, Block, Row, Button, Chip, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst SettingForm = (props) => {\n  if (true) {\n    function setting(item) {\n      if (props.notification_setting && props.notification_setting[item]) {\n        return (true)\n      } else {\n        if (props.notification_setting && props.notification_setting[item] == false) {\n          return (false)\n        } else {\n          return (false)\n        }\n      }\n    }\n\n    function blockList() {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='user-blocklist'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n              {dict.profiles}:\n          </div>\n          </a>\n        </div>\n      ]\n      if (props.blockList) {\n        props.blockList.map((profile) => {\n          chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeBlocked(profile.id)} />)\n        }\n        )\n      }\n      return chips\n    }\n\n    return (\n      <React.Fragment>\n        <List form className='fs-11'>\n          <ListItem>\n            <span >{dict.private}</span>\n            <Toggle className='pd-5' onChange={(e) => props.changeSetting(e, '')} />\n            <span className='pd-10 fs-8'>{dict.if_someone_adds_you_youll_be_asked}</span>\n          </ListItem>\n        </List>\n\n        <List>\n          <ListItem title='sss'></ListItem>\n          <ListItem title={blockList()}></ListItem>\n        </List>\n\n        <div className=\"data-table card\">\n          <table className='fs-11'>\n            <thead>\n              <tr>\n                <td>{dict.notification_type}</td>\n                <td>{dict.mail_notification}</td>\n                <td>{dict.push_notification}</td>\n                <td>{dict.sms}</td>\n              </tr>\n            </thead>\n            <tbody>\n              {}\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_email')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_push')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_sms')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_works_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_works}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_works}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_email')} onChange={(e) => props.changeSetting(e, 'change_status_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_push')} onChange={(e) => props.changeSetting(e, 'change_status_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_sms')} onChange={(e) => props.changeSetting(e, 'change_status_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_todos_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_time_sheets}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_timesheets}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_sms')} /></td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default SettingForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n\n    this.getInstance = this.getInstance.bind(this);\n    this.changeSetting = this.changeSetting.bind(this);\n    this.loadBlockList = this.loadBlockList.bind(this);\n    this.removeBlocked = this.removeBlocked.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      setting: {},\n      title: null,\n      id: null,\n      setting: null,\n      notification_setting: null,\n      blockList: []\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getInstance('settings', 1, this.state.token);\n  }\n\n  pageAfterIn() {\n    this.loadBlockList();\n  }\n\n\n  loadBlockList() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#user-blocklist', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ blockList: self.state.blockList.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n            var data = {profile_id: value[value.length - 1].id }\n            MyActions.setInstance('settings/add_block', data, self.state.token)\n          }\n        },\n      },\n    });\n  }\n\n\n\n\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        title: setting.title,\n        id: setting.id,\n        notification_setting: setting.notification_setting\n      });\n    } else {\n      this.setState({\n        notification_setting: []\n      });\n    }\n    \n  }\n\n  changeSetting(e, item) {\n    var data = { item: item }\n    if (e.target.checked) {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = true;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/add', data, this.state.token)\n    } else {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = false;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/remove', data, this.state.token);\n    }\n  }\n\n  removeBlocked(id){\n    this.setState({\n      blockList: this.state.blockList.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n    var data = {profile_id: id }\n    MyActions.setInstance('settings/remove_block', data, this.state.token)\n  }\n\n\n\n\n  render() {\n    const { notification_setting, title, blockList } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <SettingForm\n          notification_setting={notification_setting}\n          title={title} changeSetting={this.changeSetting} blockList={blockList}\n          submit={this.submit} editing={true} handleChange={this.handleChangeValue} \n          removeBlocked={this.removeBlocked}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List form>\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Ftavan.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          \n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    const self = this;\n    self.$$('input').focusin()\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List form>\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List form>\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport StatusShow from './components/statuses/show';\nimport StatusIndex from './components/statuses/index';\nimport StatusCreate from './components/statuses/create';\nimport StatusUpdate from './components/statuses/update';\n\nimport TaskShow from './components/tasks/show';\nimport TaskIndex from './components/tasks/index';\nimport TaskCreate from './components/tasks/create';\nimport TaskUpdate from './components/tasks/update';\n\nimport WorkShow from './components/works/show';\nimport WorkIndex from './components/works/index';\nimport WorkCreate from './components/works/create';\nimport WorkUpdate from './components/works/update';\n\nimport TodoCreate from './components/todos/create';\nimport TodoUpdate from './components/todos/update';\n\nimport TimeSheetShow from './components/time_sheets/show';\nimport TimeSheetIndex from './components/time_sheets/index';\nimport TimeSheetCreate from './components/time_sheets/create';\nimport TimeSheetUpdate from './components/time_sheets/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport ReportShow from './components/reports/show';\nimport ReportIndex from './components/reports/index';\nimport ReportCreate from './components/reports/create';\nimport ReportUpdate from './components/reports/update';\n\nimport GroupShow from './components/groups/show';\nimport GroupIndex from './components/groups/index';\nimport GroupCreate from './components/groups/create';\nimport GroupUpdate from './components/groups/update';\n\nimport SettingUpdate from './components/settings/update';\n\nimport Login from './components/users/Login';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/settings/',\n    component: SettingUpdate,\n  },\n\n  {\n    path: '/groups/',\n    component: GroupIndex,\n  },\n  {\n    path: '/groups/:groupId/edit',\n    component: GroupUpdate,\n  },\n  {\n    path: '/groups/new',\n    component: GroupCreate,\n  },\n  {\n    path: '/groups/:groupId',\n    component: GroupShow,\n  },\n\n\n  {\n    path: '/statuses/',\n    component: StatusIndex,\n  },\n  {\n    path: '/statuses/:statusId/edit',\n    component: StatusUpdate,\n  },\n  {\n    path: '/statuses/new',\n    component: StatusCreate,\n  },\n  {\n    path: '/statuses/:statusId',\n    component: StatusShow,\n  },\n\n\n  {\n    path: '/tasks/',\n    component: TaskIndex,\n  },\n  {\n    path: '/tasks/:taskId/edit',\n    component: TaskUpdate,\n  },\n  {\n    path: '/tasks/new',\n    component: TaskCreate,\n  },\n  {\n    path: '/tasks/:taskId',\n    component: TaskShow,\n  },\n\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n\n\n  {\n    path: '/time_sheets/',\n    component: TimeSheetIndex,\n  },\n  {\n    path: '/time_sheets/:timeSheetId/edit',\n    component: TimeSheetUpdate,\n  },\n  {\n    path: '/time_sheets/new',\n    component: TimeSheetCreate,\n  },\n  {\n    path: '/time_sheets/:timeSheetId',\n    component: TimeSheetShow,\n  },\n\n\n  {\n    path: '/reports/',\n    component: ReportIndex,\n  },\n  {\n    path: '/reports/:reportId/edit',\n    component: ReportUpdate,\n  },\n  {\n    path: '/reports/new/:callerType/:callerId',\n    component: ReportCreate,\n  },\n  {\n    path: '/reports/:reportId',\n    component: ReportShow,\n  },\n\n  {\n    path: '/works/',\n    component: WorkIndex,\n  },\n  {\n    path: '/works/:workId/edit',\n    component: WorkUpdate,\n  },\n  {\n    path: '/works/new/:taskId',\n    component: WorkCreate,\n  },\n  {\n    path: '/works/:workId',\n    component: WorkShow,\n  },\n\n  {\n    path: '/todos/:todoId/edit',\n    component: TodoUpdate,\n  },\n  {\n    path: '/todos/new/:workId',\n    component: TodoCreate,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n    <Toolbar bottom>\n      <Link>Left Link</Link>\n      <Link>Right Link</Link>\n    </Toolbar>\n    <Block strong>\n      <p></p>\n    </Block>\n    <BlockTitle></BlockTitle>\n    <List>\n\n    </List>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <List>\n    </List>\n    <Fab href=\"/document_form/\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"orange\">\n      <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n      <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n    </Fab>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    if (user){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, {Component} from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n} from 'framework7-react';\nimport ModelStore from \"../stores/ModelStore\";\nimport * as MyActions from \"../actions/MyActions\";\nimport { messaging } from \"../init-fcm.js\";\n\n\nimport routes from '../routes';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n  async componentDidMount() {\n    const self = this;\n    const app = self.$f7;\n    if(messaging){\n    messaging.requestPermission()\n      .then(async function () {\n        const token = await messaging.getToken();\n        console.log(token)\n        var data = {token: token}\n        MyActions.setInstance('devices', data, self.state.token);\n      })\n      .catch(function (err) {\n        console.log(\"Unable to get permission to notify.\", err);\n      });\n    }\n    navigator.serviceWorker.addEventListener(\"message\", (message) => {\n    const self = this;\n    const app = self.$f7;\n    console.log(message)\n    app.notification.create({\n      icon: '',\n      \n      title: message.data.firebaseMessaging.payload.notification.title,\n      titleRightText: '',\n      cssClass: 'notification',\n      subtitle: message.data.firebaseMessaging.payload.notification.body,\n      closeTimeout: 5000,\n    }).open();\n  }\n    \n    );\n  }\n  // Framework7 parameters here\n\n  render() {\n    const f7params = {\n      id: 'io.framework7.testapp', // App bundle ID\n      name: 'Framework7', // App name\n      theme: 'aurora', // Automatic theme detection\n      panel: {\n        rightBreakpoint: 960,\n      },\n      view: {\n        //ignoreCache: true,\n        //reloadCurrent: true\n      },\n      // App routes\n      routes,\n    };\n\n    const server = React.createContext('http://localhost:3001/v1/');\n    return (\n      <App params={f7params}>\n        {/* Statusbar */}\n        <Statusbar />\n      \n        {/* Left Panel */}\n        <Panel left cover themeDark>\n          <View url=\"/panel-left/\" />\n        </Panel>\n\n        {/* Right Panel */}\n        <Panel right reveal themeDark>\n          <View url=\"/panel-right/\" />\n        </Panel>\n\n        {/* Main View */}\n        <View id=\"main-view\" url=\"/app\" pushState={true} main className=\"safe-areas\" />\n\n      </App>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}